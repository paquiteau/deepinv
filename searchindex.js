Search.setIndex({"alltitles": {"3D convolutions": [[11, "d-convolutions"]], "3D diffraction PSF": [[11, null]], "3D wavelet denoising": [[19, null]], "A tour of blur operators": [[4, null]], "A tour of forward sensing operators": [[15, null]], "ADMMIteration": [[163, null]], "Advanced": [[18, "advanced"]], "Adversarial Learning": [[18, "adversarial-learning"], [56, "adversarial-learning"]], "Adversarial Networks": [[54, "adversarial-networks"]], "AdversarialTrainer": [[245, null]], "Affine": [[251, null]], "AmplitudeLoss": [[140, null]], "Apply matched filtering to recover the signal and plot the results": [[9, "apply-matched-filtering-to-recover-the-signal-and-plot-the-results"]], "Apply transformation on dataset": [[8, "apply-transformation-on-dataset"]], "Artifact2ArtifactLoss": [[80, null]], "Artifact2ArtifactSplittingMaskGenerator": [[221, null]], "ArtifactRemoval": [[110, null]], "AutoEncoder": [[111, null]], "BM3D": [[112, null]], "BaseDEQ": [[255, null]], "BaseMaskGenerator": [[222, null]], "BaseOptim": [[141, null]], "BaseUnfold": [[256, null]], "Basics": [[18, "basics"]], "Benefits of using a decomposable forward operator.": [[14, "benefits-of-using-a-decomposable-forward-operator"]], "BernoulliSplittingMaskGenerator": [[223, null]], "Blur": [[15, "blur"], [174, null]], "Blur & Super-Resolution": [[61, "blur-super-resolution"]], "Blur generators": [[4, "blur-generators"]], "BlurFFT": [[175, null]], "Build Sampler class": [[31, "build-sampler-class"]], "Building your custom sampling algorithm.": [[31, null]], "CBSD68": [[68, null]], "CPIteration": [[164, null]], "CSGM / AmbientGAN training": [[2, "csgm-ambientgan-training"]], "CSGMGenerator": [[113, null]], "Classical Denoisers": [[54, "classical-denoisers"]], "Complex Denoisers": [[54, "complex-denoisers"]], "Compressed Sensing": [[15, "compressed-sensing"]], "CompressedSensing": [[176, null]], "Compressive operators": [[61, "compressive-operators"]], "Computation times": [[1, null], [3, null], [17, null], [22, null], [25, null], [30, null], [36, null], [43, null], [44, null], [51, null], [66, null]], "Computed Tomography": [[15, "computed-tomography"]], "Concatenating forward operators.": [[12, "concatenating-forward-operators"]], "Conditional GAN training": [[2, "conditional-gan-training"]], "Confocal microscope PSF": [[11, "confocal-microscope-psf"]], "ConvDecoder": [[114, null]], "Convolution Basics": [[4, "convolution-basics"]], "Create a Monte Carlo sampler": [[32, "create-a-monte-carlo-sampler"]], "Create a dataloader": [[6, "create-a-dataloader"], [8, "create-a-dataloader"]], "Create forward model": [[9, "create-forward-model"]], "Create the MCMC sampler": [[35, "create-the-mcmc-sampler"]], "Create the Monte Carlo sampler": [[32, "create-the-monte-carlo-sampler"]], "Create the denoising operator and solve the problem.": [[19, "create-the-denoising-operator-and-solve-the-problem"]], "Create the preconditioned and standard ULA samplers": [[31, "create-the-preconditioned-and-standard-ula-samplers"]], "Creating a custom forward operator.": [[14, "creating-a-custom-forward-operator"]], "Creating a decomposable forward operator.": [[14, "creating-a-decomposable-forward-operator"]], "Creating a forward operator.": [[14, null]], "Creating your own dataset": [[6, null]], "DCGANDiscriminator": [[115, null]], "DCGANGenerator": [[116, null]], "DDRM": [[236, null]], "DEQ_builder": [[257, null]], "DIV2K": [[69, null]], "DPIR": [[142, null]], "DPIR method for PnP image deblurring.": [[26, null]], "DPS": [[237, null]], "DPS Algorithm": [[34, "dps-algorithm"]], "DPS approximation": [[34, "dps-approximation"]], "DRSIteration": [[165, null]], "DRUNet": [[117, null]], "Data Fidelity": [[59, "data-fidelity"]], "Data fidelity step": [[33, "data-fidelity-step"]], "DataFidelity": [[143, null]], "Datasets": [[53, null]], "Decolorize": [[15, "decolorize"], [177, null]], "DecomposablePhysics": [[178, null]], "Deep Denoisers": [[54, "deep-denoisers"]], "Deep Equilibrium": [[63, "deep-equilibrium"]], "Deep Equilibrium (DEQ) algorithms for image deblurring": [[45, null]], "Deep Image Prior": [[55, "deep-image-prior"]], "DeepImagePrior": [[118, null]], "DeepInverse: a Pytorch library for imaging with deep learning": [[65, null]], "Define a custom iterator for the PDNet learned primal-dual algorithm.": [[48, "define-a-custom-iterator-for-the-pdnet-learned-primal-dual-algorithm"]], "Define a custom optimization algorithm": [[27, "define-a-custom-optimization-algorithm"]], "Define a forward operator": [[10, "define-a-forward-operator"]], "Define a model": [[10, "define-a-model"]], "Define diffusion schedule": [[34, "define-diffusion-schedule"]], "Define forward operator and generate dataset": [[16, "define-forward-operator-and-generate-dataset"], [49, "define-forward-operator-and-generate-dataset"]], "Define forward operator and noise model": [[7, "define-forward-operator-and-noise-model"], [31, "define-forward-operator-and-noise-model"], [32, "define-forward-operator-and-noise-model"], [35, "define-forward-operator-and-noise-model"]], "Define loss": [[41, "define-loss"]], "Define model": [[41, "define-model"]], "Define models": [[2, "define-models"]], "Define physics operator": [[5, "define-physics-operator"]], "Define the  DEQ algorithm.": [[45, "define-the-deq-algorithm"]], "Define the MMSE denoiser": [[32, "define-the-mmse-denoiser"]], "Define the custom fStep and gStep modules": [[27, "define-the-custom-fstep-and-gstep-modules"]], "Define the deep image prior": [[7, "define-the-deep-image-prior"]], "Define the likelihood": [[35, "define-the-likelihood"]], "Define the model.": [[48, "define-the-model"]], "Define the prior": [[31, "define-the-prior"], [35, "define-the-prior"]], "Define the sampling iteration": [[31, "define-the-sampling-iteration"]], "Define the trainable prior and data fidelity terms.": [[48, "define-the-trainable-prior-and-data-fidelity-terms"]], "Define the training parameters.": [[45, "define-the-training-parameters"], [46, "define-the-training-parameters"], [47, "define-the-training-parameters"], [48, "define-the-training-parameters"], [50, "define-the-training-parameters"]], "Define the unfolded PnP algorithm.": [[50, "define-the-unfolded-pnp-algorithm"]], "Define the unfolded Proximal Gradient algorithm.": [[46, "define-the-unfolded-proximal-gradient-algorithm"], [47, "define-the-unfolded-proximal-gradient-algorithm"]], "Define the unfolded trainable model.": [[48, "define-the-unfolded-trainable-model"]], "Defining new operators": [[61, "defining-new-operators"]], "Definition of forward operator and noise model": [[24, "definition-of-forward-operator-and-noise-model"]], "Dehazing": [[61, "dehazing"]], "Demosaicing": [[15, "demosaicing"], [179, null]], "Denoisers": [[54, null]], "Denoising": [[15, "denoising"], [23, "denoising"], [180, null]], "Denoising step": [[33, "denoising-step"], [34, "denoising-step"]], "DiffPIR": [[238, null]], "DiffUNet": [[119, null]], "Diffraction PSF generation": [[11, "diffraction-psf-generation"]], "Diffraction blur generators": [[4, "diffraction-blur-generators"]], "DiffractionBlurGenerator": [[224, null]], "DiffractionBlurGenerator3D": [[225, null]], "Diffusion": [[62, "diffusion"]], "Diffusion Algorithms": [[62, null]], "Diffusion model loading": [[34, "diffusion-model-loading"]], "DiffusionSampler": [[239, null]], "DiscriminatorLoss": [[102, null]], "DiscriminatorMetric": [[103, null]], "DnCNN": [[120, null]], "Downsampling": [[181, null]], "DynamicMRI": [[182, null]], "EILoss": [[81, null]], "EPLL": [[144, null]], "EPLLDenoiser": [[121, null]], "ESRGANDiscriminator": [[122, null]], "EquispacedMaskGenerator": [[226, null]], "Equivariant Denoisers": [[54, "equivariant-denoisers"]], "EquivariantDenoiser": [[123, null]], "Euclidean": [[252, null]], "Evaluate the model on the problem and plot the results.": [[20, "evaluate-the-model-on-the-problem-and-plot-the-results"], [21, "evaluate-the-model-on-the-problem-and-plot-the-results"], [27, "evaluate-the-model-on-the-problem-and-plot-the-results"], [29, "evaluate-the-model-on-the-problem-and-plot-the-results"]], "Evaluate the model on the problem.": [[26, "evaluate-the-model-on-the-problem"], [28, "evaluate-the-model-on-the-problem"]], "Evaluate the reconstruction algorithm on the problem.": [[5, "evaluate-the-reconstruction-algorithm-on-the-problem"]], "Examples": [[18, null]], "Examples using AdversarialTrainer:": [[245, "examples-using-adversarialtrainer"]], "Examples using Affine:": [[251, "examples-using-affine"]], "Examples using ArtifactRemoval:": [[110, "examples-using-artifactremoval"]], "Examples using BaseDEQ:": [[255, "examples-using-basedeq"]], "Examples using BaseMaskGenerator:": [[222, "examples-using-basemaskgenerator"]], "Examples using BaseOptim:": [[141, "examples-using-baseoptim"]], "Examples using BaseUnfold:": [[256, "examples-using-baseunfold"]], "Examples using BernoulliSplittingMaskGenerator:": [[223, "examples-using-bernoullisplittingmaskgenerator"]], "Examples using Blur:": [[174, "examples-using-blur"]], "Examples using BlurFFT:": [[175, "examples-using-blurfft"]], "Examples using CPIteration:": [[164, "examples-using-cpiteration"]], "Examples using CSGMGenerator:": [[113, "examples-using-csgmgenerator"]], "Examples using CompressedSensing:": [[176, "examples-using-compressedsensing"]], "Examples using ConvDecoder:": [[114, "examples-using-convdecoder"]], "Examples using DCGANDiscriminator:": [[115, "examples-using-dcgandiscriminator"]], "Examples using DCGANGenerator:": [[116, "examples-using-dcgangenerator"]], "Examples using DDRM:": [[236, "examples-using-ddrm"]], "Examples using DEQ_builder:": [[257, "examples-using-deq-builder"]], "Examples using DPIR:": [[142, "examples-using-dpir"]], "Examples using DPS:": [[237, "examples-using-dps"]], "Examples using DRUNet:": [[117, "examples-using-drunet"]], "Examples using DataFidelity:": [[143, "examples-using-datafidelity"]], "Examples using Decolorize:": [[177, "examples-using-decolorize"]], "Examples using DecomposablePhysics:": [[178, "examples-using-decomposablephysics"]], "Examples using DeepImagePrior:": [[118, "examples-using-deepimageprior"]], "Examples using Demosaicing:": [[179, "examples-using-demosaicing"]], "Examples using Denoising:": [[180, "examples-using-denoising"]], "Examples using DiffPIR:": [[238, "examples-using-diffpir"]], "Examples using DiffUNet:": [[119, "examples-using-diffunet"]], "Examples using DiffractionBlurGenerator3D:": [[225, "examples-using-diffractionblurgenerator3d"]], "Examples using DiffractionBlurGenerator:": [[224, "examples-using-diffractionblurgenerator"]], "Examples using DiffusionSampler:": [[239, "examples-using-diffusionsampler"]], "Examples using DiscriminatorLoss:": [[102, "examples-using-discriminatorloss"]], "Examples using DnCNN:": [[120, "examples-using-dncnn"]], "Examples using Downsampling:": [[181, "examples-using-downsampling"]], "Examples using EILoss:": [[81, "examples-using-eiloss"]], "Examples using EPLL:": [[144, "examples-using-epll"]], "Examples using EquispacedMaskGenerator:": [[226, "examples-using-equispacedmaskgenerator"]], "Examples using Euclidean:": [[252, "examples-using-euclidean"]], "Examples using FNEJacobianSpectralNorm:": [[82, "examples-using-fnejacobianspectralnorm"]], "Examples using GSDRUNet:": [[124, "examples-using-gsdrunet"]], "Examples using GaussianMaskGenerator:": [[227, "examples-using-gaussianmaskgenerator"]], "Examples using GaussianNoise:": [[184, "examples-using-gaussiannoise"]], "Examples using GaussianSplittingMaskGenerator:": [[228, "examples-using-gaussiansplittingmaskgenerator"]], "Examples using GeneratorLoss:": [[104, "examples-using-generatorloss"]], "Examples using GeneratorMixture:": [[229, "examples-using-generatormixture"]], "Examples using HDF5Dataset:": [[73, "examples-using-hdf5dataset"]], "Examples using Homography:": [[246, "examples-using-homography"]], "Examples using IndicatorL2:": [[146, "examples-using-indicatorl2"]], "Examples using Inpainting:": [[186, "examples-using-inpainting"]], "Examples using L2:": [[149, "examples-using-l2"]], "Examples using LPIPS:": [[84, "examples-using-lpips"]], "Examples using LinearPhysics:": [[187, "examples-using-linearphysics"]], "Examples using LogPoissonLikelihood:": [[150, "examples-using-logpoissonlikelihood"]], "Examples using LogPoissonNoise:": [[188, "examples-using-logpoissonnoise"]], "Examples using Loss:": [[85, "examples-using-loss"]], "Examples using MCLoss:": [[87, "examples-using-mcloss"]], "Examples using MOILoss:": [[88, "examples-using-moiloss"]], "Examples using MRI:": [[189, "examples-using-mri"]], "Examples using MedianFilter:": [[126, "examples-using-medianfilter"]], "Examples using MonteCarlo:": [[240, "examples-using-montecarlo"]], "Examples using MotionBlurGenerator:": [[230, "examples-using-motionblurgenerator"]], "Examples using Neighbor2Neighbor:": [[90, "examples-using-neighbor2neighbor"]], "Examples using OptimIterator:": [[151, "examples-using-optimiterator"]], "Examples using PDNet_DualBlock:": [[127, "examples-using-pdnet-dualblock"]], "Examples using PDNet_PrimalBlock:": [[128, "examples-using-pdnet-primalblock"]], "Examples using PGDIteration:": [[169, "examples-using-pgditeration"]], "Examples using PSNR:": [[91, "examples-using-psnr"]], "Examples using PanTiltRotate:": [[253, "examples-using-pantiltrotate"]], "Examples using Pansharpen:": [[190, "examples-using-pansharpen"]], "Examples using PatchDataset:": [[76, "examples-using-patchdataset"]], "Examples using PatchGANDiscriminator:": [[129, "examples-using-patchgandiscriminator"]], "Examples using PatchNR:": [[152, "examples-using-patchnr"]], "Examples using PatchPrior:": [[153, "examples-using-patchprior"]], "Examples using PhaseRetrieval:": [[191, "examples-using-phaseretrieval"]], "Examples using Physics:": [[192, "examples-using-physics"]], "Examples using PhysicsGenerator:": [[232, "examples-using-physicsgenerator"]], "Examples using PnP:": [[154, "examples-using-pnp"]], "Examples using PoissonGaussianNoise:": [[193, "examples-using-poissongaussiannoise"]], "Examples using PoissonLikelihood:": [[155, "examples-using-poissonlikelihood"]], "Examples using PoissonNoise:": [[194, "examples-using-poissonnoise"]], "Examples using Prior:": [[156, "examples-using-prior"]], "Examples using ProductConvolutionBlurGenerator:": [[233, "examples-using-productconvolutionblurgenerator"]], "Examples using RED:": [[157, "examples-using-red"]], "Examples using RadioInterferometry:": [[195, "examples-using-radiointerferometry"]], "Examples using RandomMaskGenerator:": [[234, "examples-using-randommaskgenerator"]], "Examples using RandomPhaseRetrieval:": [[196, "examples-using-randomphaseretrieval"]], "Examples using Rotate:": [[247, "examples-using-rotate"]], "Examples using Scale:": [[248, "examples-using-scale"]], "Examples using ScorePrior:": [[158, "examples-using-scoreprior"]], "Examples using Shift:": [[249, "examples-using-shift"]], "Examples using Similarity:": [[254, "examples-using-similarity"]], "Examples using SinglePhotonLidar:": [[197, "examples-using-singlephotonlidar"]], "Examples using SinglePixelCamera:": [[198, "examples-using-singlepixelcamera"]], "Examples using SpaceVaryingBlur:": [[199, "examples-using-spacevaryingblur"]], "Examples using SplittingLoss:": [[96, "examples-using-splittingloss"]], "Examples using SupAdversarialDiscriminatorLoss:": [[105, "examples-using-supadversarialdiscriminatorloss"]], "Examples using SupAdversarialGeneratorLoss:": [[106, "examples-using-supadversarialgeneratorloss"]], "Examples using SupLoss:": [[97, "examples-using-suploss"]], "Examples using SureGaussianLoss:": [[98, "examples-using-suregaussianloss"]], "Examples using SurePGLoss:": [[99, "examples-using-surepgloss"]], "Examples using SurePoissonLoss:": [[100, "examples-using-surepoissonloss"]], "Examples using TVPrior:": [[159, "examples-using-tvprior"]], "Examples using TensorList:": [[259, "examples-using-tensorlist"]], "Examples using Tomography:": [[200, "examples-using-tomography"]], "Examples using Trainer:": [[67, "examples-using-trainer"]], "Examples using Transform:": [[250, "examples-using-transform"]], "Examples using UAIRGeneratorLoss:": [[107, "examples-using-uairgeneratorloss"]], "Examples using ULA:": [[242, "examples-using-ula"]], "Examples using UNet:": [[136, "examples-using-unet"]], "Examples using UniformNoise:": [[202, "examples-using-uniformnoise"]], "Examples using UnsupAdversarialDiscriminatorLoss:": [[108, "examples-using-unsupadversarialdiscriminatorloss"]], "Examples using UnsupAdversarialGeneratorLoss:": [[109, "examples-using-unsupadversarialgeneratorloss"]], "Examples using Urban100HR:": [[78, "examples-using-urban100hr"]], "Examples using WaveletDenoiser:": [[137, "examples-using-waveletdenoiser"]], "Examples using WaveletDictDenoiser:": [[138, "examples-using-waveletdictdenoiser"]], "Examples using WaveletPrior:": [[161, "examples-using-waveletprior"]], "Examples using cal_psnr:": [[260, "examples-using-cal-psnr"]], "Examples using gaussian_blur:": [[206, "examples-using-gaussian-blur"]], "Examples using generate_dataset:": [[79, "examples-using-generate-dataset"]], "Examples using get_freer_gpu:": [[261, "examples-using-get-freer-gpu"]], "Examples using load_url_image:": [[263, "examples-using-load-url-image"]], "Examples using optim_builder:": [[162, "examples-using-optim-builder"]], "Examples using plot:": [[265, "examples-using-plot"]], "Examples using plot_curves:": [[266, "examples-using-plot-curves"]], "Examples using plot_inset:": [[267, "examples-using-plot-inset"]], "Examples using plot_ortho3D:": [[268, "examples-using-plot-ortho3d"]], "Examples using plot_parameters:": [[269, "examples-using-plot-parameters"]], "Examples using test:": [[243, "examples-using-test"]], "Examples using unfolded_builder:": [[258, "examples-using-unfolded-builder"]], "Expected Patch Log Likelihood (EPLL) for Denoising and Inpainting": [[23, null]], "Exploring the total variation prior.": [[20, "exploring-the-total-variation-prior"]], "Exploring the wavelet prior.": [[21, "exploring-the-wavelet-prior"]], "Extension to multiple wavelet bases.": [[19, "extension-to-multiple-wavelet-bases"]], "FISTAIteration": [[166, null]], "FMD": [[70, null]], "FNEJacobianSpectralNorm": [[82, null]], "FastMRISliceDataset": [[71, null]], "Featuring": [[65, "featuring"]], "Finding Help": [[65, "finding-help"]], "FixedPoint": [[145, null]], "Flickr2kHR": [[72, null]], "Forward operators": [[61, "forward-operators"]], "Functional": [[61, "functional"]], "GDIteration": [[167, null]], "GSDRUNet": [[124, null]], "GammaNoise": [[183, null]], "GaussianMaskGenerator": [[227, null]], "GaussianMixtureModel": [[171, null]], "GaussianNoise": [[184, null]], "GaussianSplittingMaskGenerator": [[228, null]], "General setup": [[13, "general-setup"]], "Generate a dataset of blurred images": [[5, "generate-a-dataset-of-blurred-images"]], "Generate a dataset of blurred images and load it.": [[20, "generate-a-dataset-of-blurred-images-and-load-it"], [26, "generate-a-dataset-of-blurred-images-and-load-it"]], "Generate a dataset of compressed measurements and load it.": [[46, "generate-a-dataset-of-compressed-measurements-and-load-it"], [47, "generate-a-dataset-of-compressed-measurements-and-load-it"]], "Generate a dataset of degraded images and load it.": [[6, "generate-a-dataset-of-degraded-images-and-load-it"]], "Generate a dataset of knee images and load it.": [[38, "generate-a-dataset-of-knee-images-and-load-it"]], "Generate a dataset of low resolution images and load it.": [[45, "generate-a-dataset-of-low-resolution-images-and-load-it"], [50, "generate-a-dataset-of-low-resolution-images-and-load-it"]], "Generate a dataset of noisy images": [[40, "generate-a-dataset-of-noisy-images"], [42, "generate-a-dataset-of-noisy-images"]], "Generate a dataset of subsampled images and load it.": [[39, "generate-a-dataset-of-subsampled-images-and-load-it"]], "Generate an inpainting problem": [[21, "generate-an-inpainting-problem"]], "Generate an inverse problem": [[33, "generate-an-inverse-problem"]], "Generate dataset": [[2, "generate-dataset"]], "Generate the measurement": [[7, "generate-the-measurement"], [31, "generate-the-measurement"], [32, "generate-the-measurement"], [35, "generate-the-measurement"]], "Generate toy image": [[12, "generate-toy-image"], [14, "generate-toy-image"]], "Generate toy signal and measurement": [[9, "generate-toy-signal-and-measurement"]], "Generator Mixture": [[4, "generator-mixture"]], "GeneratorLoss": [[104, null]], "GeneratorMixture": [[229, null]], "Generic Optimizers": [[59, "generic-optimizers"]], "Getting Started": [[65, "getting-started"]], "Groundtruth image": [[0, "groundtruth-image"]], "HD5Dataset": [[53, "hd5dataset"]], "HDF5Dataset": [[73, null]], "HQSIteration": [[168, null]], "Haze": [[185, null]], "Homography": [[246, null]], "How to Contribute": [[52, null]], "ICNN": [[125, null]], "IRadon": [[208, null]], "Image Datasets": [[53, "image-datasets"]], "Image deblurring with Total-Variation (TV) prior": [[20, null]], "Image deblurring with custom deep explicit prior.": [[5, null]], "Image inpainting with wavelet prior": [[21, null]], "Image reconstruction with a diffusion model": [[32, null]], "Image transformations for Equivariant Imaging": [[37, null]], "Imaging inverse problems with adversarial networks": [[2, null]], "Implementing DPS": [[34, null]], "Implementing DiffPIR": [[33, null]], "Implementing an Algorithm": [[55, "implementing-an-algorithm"]], "Import required packages": [[0, "import-required-packages"]], "IndicatorL2": [[146, null]], "Inpainting": [[15, "inpainting"], [23, "inpainting"], [186, null]], "Installation": [[65, "installation"]], "Introduction": [[56, "introduction"], [61, "introduction"]], "Iterating the Dykstra-like algorithm.": [[19, "iterating-the-dykstra-like-algorithm"]], "Iterative Reconstruction (PnP, RED, etc.)": [[55, null]], "Iterators": [[59, "iterators"]], "JacobianSpectralNorm": [[83, null]], "L1": [[147, null]], "L1Prior": [[148, null]], "L2": [[149, null]], "LPIPS": [[84, null]], "Lead Developers": [[65, "lead-developers"]], "Learned Filtered Back-Projection": [[60, "learned-filtered-back-projection"]], "Learned Iterative Soft-Thresholding Algorithm (LISTA) for compressed sensing": [[46, null]], "Learned Primal-Dual algorithm for CT scan.": [[48, null]], "Learned iterative custom prior": [[47, null]], "LidcIdriSliceDataset": [[74, null]], "Linear operators": [[61, "linear-operators"]], "LinearPhysics": [[187, null]], "List of mathematical symbols": [[58, "id1"]], "Load base image datasets": [[6, "load-base-image-datasets"], [40, "load-base-image-datasets"], [42, "load-base-image-datasets"]], "Load base image datasets and degradation operators.": [[5, "load-base-image-datasets-and-degradation-operators"], [16, "load-base-image-datasets-and-degradation-operators"], [20, "load-base-image-datasets-and-degradation-operators"], [21, "load-base-image-datasets-and-degradation-operators"], [26, "load-base-image-datasets-and-degradation-operators"], [27, "load-base-image-datasets-and-degradation-operators"], [28, "load-base-image-datasets-and-degradation-operators"], [38, "load-base-image-datasets-and-degradation-operators"], [39, "load-base-image-datasets-and-degradation-operators"], [45, "load-base-image-datasets-and-degradation-operators"], [46, "load-base-image-datasets-and-degradation-operators"], [47, "load-base-image-datasets-and-degradation-operators"], [49, "load-base-image-datasets-and-degradation-operators"], [50, "load-base-image-datasets-and-degradation-operators"]], "Load base volume image and denoising operators.": [[19, "load-base-volume-image-and-denoising-operators"]], "Load degradation operator.": [[48, "load-degradation-operator"]], "Load example image from the internet": [[32, "load-example-image-from-the-internet"]], "Load image and parameters": [[29, "load-image-and-parameters"]], "Load image from the internet": [[7, "load-image-from-the-internet"], [13, "load-image-from-the-internet"], [15, "load-image-from-the-internet"], [31, "load-image-from-the-internet"], [35, "load-image-from-the-internet"]], "Load libraries": [[8, "load-libraries"]], "Load test image and model": [[23, "load-test-image-and-model"]], "Load training and test images": [[24, "load-training-and-test-images"]], "Loading the model": [[49, "loading-the-model"]], "LogPoissonLikelihood": [[150, null]], "LogPoissonNoise": [[188, null]], "Loss": [[56, null], [85, null]], "LpNorm": [[86, null]], "LsdirHR": [[75, null]], "MCLoss": [[87, null]], "MOILoss": [[88, null]], "MRI": [[15, "mri"], [189, null]], "Magnetic Resonance Imaging": [[61, "magnetic-resonance-imaging"]], "Markov Chain Monte Carlo Langevin": [[62, "markov-chain-monte-carlo-langevin"]], "Math Notation": [[58, null]], "Measurements generation": [[13, "measurements-generation"]], "MedianFilter": [[126, null]], "Metrics": [[56, "metrics"]], "MonteCarlo": [[240, null]], "Motion blur generators": [[4, "motion-blur-generators"]], "MotionBlurGenerator": [[230, null]], "NIQE": [[89, null]], "Natural weighting and Briggs weighting": [[0, "natural-weighting-and-briggs-weighting"]], "Neighbor2Neighbor": [[90, null]], "Network Regularization": [[56, "network-regularization"]], "Networks for time-varying data": [[60, "networks-for-time-varying-data"]], "Noise distributions": [[61, "noise-distributions"]], "Optim": [[59, null]], "OptimIterator": [[151, null]], "Optimization": [[18, "optimization"]], "Other": [[64, "other"]], "Other Reconstruction Methods": [[60, null]], "Overall comparison": [[13, "overall-comparison"]], "PDNet_DualBlock": [[127, null]], "PDNet_PrimalBlock": [[128, null]], "PGDIteration": [[169, null]], "PSNR": [[91, null]], "Pan-sharpening": [[15, "pan-sharpening"]], "PanTiltRotate": [[253, null]], "Pansharpen": [[190, null]], "Parameter-dependent operators": [[61, "parameter-dependent-operators"]], "Parameters": [[59, "parameters"]], "Patch Priors": [[18, "patch-priors"]], "Patch priors for limited-angle computed tomography": [[24, null]], "PatchDataset": [[53, "patchdataset"], [76, null]], "PatchGANDiscriminator": [[129, null]], "PatchNR": [[152, null]], "PatchPrior": [[153, null]], "Phase correction and signal reconstruction": [[13, "phase-correction-and-signal-reconstruction"], [13, "id1"], [13, "id2"], [13, "id3"]], "Phase retrieval": [[61, "phase-retrieval"]], "Phase2PhaseLoss": [[92, null]], "Phase2PhaseSplittingMaskGenerator": [[231, null]], "PhaseRetrieval": [[191, null]], "Physics": [[61, null], [192, null]], "Physics Generators": [[61, "physics-generators"]], "PhysicsGenerator": [[232, null]], "Pixelwise operators": [[61, "pixelwise-operators"]], "Plotting": [[64, "plotting"]], "Plotting the learned parameters.": [[46, "plotting-the-learned-parameters"]], "Plotting the trained parameters.": [[50, "plotting-the-trained-parameters"]], "Plotting the weights of the network.": [[47, "plotting-the-weights-of-the-network"]], "Plug-and-Play": [[18, "plug-and-play"]], "PnP": [[154, null]], "PnP with custom optimization algorithm (Condat-Vu Primal-Dual)": [[27, null]], "PoissonGaussianNoise": [[193, null]], "PoissonLikelihood": [[155, null]], "PoissonNoise": [[194, null]], "Predefined Iterative Algorithms": [[55, "predefined-iterative-algorithms"]], "Prepare data": [[41, "prepare-data"]], "Pretrained Weights": [[54, "pretrained-weights"]], "Prior": [[156, null]], "Priors": [[59, "priors"]], "ProductConvolutionBlurGenerator": [[233, null]], "Putting it all together: the DiffPIR algorithm": [[33, "putting-it-all-together-the-diffpir-algorithm"]], "R2RLoss": [[93, null]], "RED": [[157, null]], "Radio interferometric imaging": [[61, "radio-interferometric-imaging"]], "Radio interferometric imaging with deepinverse": [[0, null]], "RadioInterferometry": [[195, null]], "Radon": [[209, null]], "Random phase retrieval and reconstruction methods.": [[13, null]], "RandomMaskGenerator": [[234, null]], "RandomPhaseRetrieval": [[196, null]], "Reconstructing an image using the deep image prior.": [[7, null]], "Reconstruction loop": [[24, "reconstruction-loop"]], "Reconstruction with gradient descent and PnP denoisers": [[13, "reconstruction-with-gradient-descent-and-pnp-denoisers"]], "Reconstruction with gradient descent and random initialization": [[13, "reconstruction-with-gradient-descent-and-random-initialization"]], "Reconstruction with gradient descent and spectral methods initialization": [[13, "reconstruction-with-gradient-descent-and-spectral-methods-initialization"]], "Reconstruction with spectral methods": [[13, "reconstruction-with-spectral-methods"]], "Regularization by Denoising (RED) for Super-Resolution.": [[28, null]], "Remote Sensing": [[61, "remote-sensing"]], "Restormer": [[130, null]], "Rotate": [[247, null]], "Run DIP algorithm and plot results": [[7, "run-dip-algorithm-and-plot-results"]], "Run and plot": [[24, "run-and-plot"]], "Run sampling algorithm and plot results": [[32, "run-sampling-algorithm-and-plot-results"], [35, "run-sampling-algorithm-and-plot-results"]], "Run sampling algorithms and plot results": [[31, "run-sampling-algorithms-and-plot-results"]], "Run the diffusion algorithm and plot results": [[32, "run-the-diffusion-algorithm-and-plot-results"]], "SCUNet": [[131, null]], "SKRock": [[241, null]], "SMIteration": [[170, null]], "SSIM": [[94, null]], "Sampling": [[18, "sampling"]], "Sampling pattern": [[0, "sampling-pattern"]], "Sampling step": [[33, "sampling-step"]], "Saving and loading models": [[10, null]], "Saving the model": [[49, "saving-the-model"]], "Scale": [[248, null]], "ScoreLoss": [[95, null]], "ScorePrior": [[158, null]], "Self-Supervised Learning": [[18, "self-supervised-learning"], [56, "self-supervised-learning"]], "Self-supervised denoising with the Neighbor2Neighbor loss.": [[40, null]], "Self-supervised denoising with the SURE loss.": [[42, null]], "Self-supervised learning from incomplete measurements of multiple operators.": [[39, null]], "Self-supervised learning with Equivariant Imaging for MRI.": [[38, null]], "Self-supervised learning with measurement splitting": [[41, null]], "Set parameters for EPLL and PatchNR": [[24, "set-parameters-for-epll-and-patchnr"]], "Set the forward operator": [[27, "set-the-forward-operator"], [29, "set-the-forward-operator"]], "Set up the DPIR algorithm to solve the inverse problem.": [[26, "set-up-the-dpir-algorithm-to-solve-the-inverse-problem"]], "Set up the PnP algorithm to solve the inverse problem.": [[27, "set-up-the-pnp-algorithm-to-solve-the-inverse-problem"], [29, "set-up-the-pnp-algorithm-to-solve-the-inverse-problem"]], "Set up the denoiser network": [[40, "set-up-the-denoiser-network"], [42, "set-up-the-denoiser-network"]], "Set up the optimization algorithm to solve the inverse problem.": [[5, "set-up-the-optimization-algorithm-to-solve-the-inverse-problem"], [20, "set-up-the-optimization-algorithm-to-solve-the-inverse-problem"], [21, "set-up-the-optimization-algorithm-to-solve-the-inverse-problem"]], "Set up the reconstruction network": [[16, "set-up-the-reconstruction-network"], [38, "set-up-the-reconstruction-network"], [39, "set-up-the-reconstruction-network"], [49, "set-up-the-reconstruction-network"]], "Set up the training parameters": [[38, "set-up-the-training-parameters"], [39, "set-up-the-training-parameters"], [40, "set-up-the-training-parameters"], [42, "set-up-the-training-parameters"]], "Set14HR": [[77, null]], "Setup paths for data loading and results.": [[5, "setup-paths-for-data-loading-and-results"], [6, "setup-paths-for-data-loading-and-results"], [10, "setup-paths-for-data-loading-and-results"], [16, "setup-paths-for-data-loading-and-results"], [19, "setup-paths-for-data-loading-and-results"], [20, "setup-paths-for-data-loading-and-results"], [21, "setup-paths-for-data-loading-and-results"], [26, "setup-paths-for-data-loading-and-results"], [27, "setup-paths-for-data-loading-and-results"], [28, "setup-paths-for-data-loading-and-results"], [29, "setup-paths-for-data-loading-and-results"], [38, "setup-paths-for-data-loading-and-results"], [39, "setup-paths-for-data-loading-and-results"], [40, "setup-paths-for-data-loading-and-results"], [42, "setup-paths-for-data-loading-and-results"], [45, "setup-paths-for-data-loading-and-results"], [46, "setup-paths-for-data-loading-and-results"], [47, "setup-paths-for-data-loading-and-results"], [48, "setup-paths-for-data-loading-and-results"], [49, "setup-paths-for-data-loading-and-results"], [50, "setup-paths-for-data-loading-and-results"]], "Setup the PnP algorithm. This involves in particular the definition of a custom prior class.": [[28, "setup-the-pnp-algorithm-this-involves-in-particular-the-definition-of-a-custom-prior-class"]], "Shift": [[249, null]], "Shuffle data with buffer shuffling": [[8, "shuffle-data-with-buffer-shuffling"]], "SigmaGenerator": [[235, null]], "Signal construction": [[13, "signal-construction"]], "Similarity": [[254, null]], "Simulating the measurements": [[0, "simulating-the-measurements"]], "Single photon lidar operator for depth ranging.": [[9, null]], "Single-Pixel Camera": [[15, "single-pixel-camera"]], "Single-photon lidar": [[61, "single-photon-lidar"]], "SinglePhotonLidar": [[197, null]], "SinglePixelCamera": [[198, null]], "Solving the problem with a wavelet prior": [[0, "solving-the-problem-with-a-wavelet-prior"]], "Space varying blurs": [[4, "space-varying-blurs"]], "SpaceVaryingBlur": [[199, null]], "SplittingLoss": [[96, null]], "Stacking and concatenating forward operators.": [[12, null]], "Stacking forward operators.": [[12, "stacking-forward-operators"]], "Stream data from Internet": [[8, "stream-data-from-internet"]], "Summary of pretrained weights": [[54, "id14"]], "SupAdversarialDiscriminatorLoss": [[105, null]], "SupAdversarialGeneratorLoss": [[106, null]], "SupLoss": [[97, null]], "Super-Resolution": [[15, "super-resolution"]], "Supervised Learning": [[56, "supervised-learning"]], "SureGaussianLoss": [[98, null]], "SurePGLoss": [[99, null]], "SurePoissonLoss": [[100, null]], "SwinIR": [[132, null]], "TGVDenoiser": [[133, null]], "TVDenoiser": [[134, null]], "TVLoss": [[101, null]], "TVPrior": [[159, null]], "TensorList": [[64, "tensorlist"], [259, null]], "Test the network": [[16, "test-the-network"], [38, "test-the-network"], [39, "test-the-network"], [40, "test-the-network"], [42, "test-the-network"], [45, "test-the-network"], [48, "test-the-network"], [49, "test-the-network"], [50, "test-the-network"]], "Test the network.": [[46, "test-the-network"], [47, "test-the-network"]], "The DPS algorithm": [[34, "the-dps-algorithm"]], "The DiffPIR algorithm": [[33, "the-diffpir-algorithm"]], "The RI measurement operator": [[0, "the-ri-measurement-operator"]], "Tikhonov": [[160, null]], "TimeAgnosticNet": [[135, null]], "Tomography": [[61, "tomography"], [200, null]], "Train and test network": [[41, "train-and-test-network"]], "Train the model": [[16, "train-the-model"], [49, "train-the-model"]], "Train the network": [[38, "train-the-network"], [39, "train-the-network"], [40, "train-the-network"], [42, "train-the-network"], [45, "train-the-network"], [48, "train-the-network"], [50, "train-the-network"]], "Train the network.": [[46, "train-the-network"], [47, "train-the-network"]], "Trainer": [[67, null]], "Training / EM algorithm": [[24, "training-em-algorithm"]], "Training a reconstruction network.": [[16, null]], "Training and Testing": [[64, "training-and-testing"]], "Training dataset of random phantoms.": [[48, "training-dataset-of-random-phantoms"]], "Transform": [[250, null]], "Transforms": [[56, "transforms"]], "UAIR training": [[2, "uair-training"]], "UAIRGeneratorLoss": [[107, null]], "ULA": [[242, null]], "UNet": [[136, null]], "Uncertainty quantification with PnP-ULA.": [[35, null]], "Unfolded": [[18, "unfolded"], [63, "id1"]], "Unfolded Algorithms": [[63, null]], "Unfolded Chambolle-Pock for constrained image inpainting": [[49, null]], "UniformGaussianNoise": [[201, null]], "UniformNoise": [[202, null]], "UnsupAdversarialDiscriminatorLoss": [[108, null]], "UnsupAdversarialGeneratorLoss": [[109, null]], "Urban100HR": [[78, null]], "Using DPS in your inverse problem": [[34, "using-dps-in-your-inverse-problem"]], "Using huggingface dataset": [[8, null]], "Using multiple GPUs": [[57, null]], "Using the DiffPIR algorithm in your inverse problem": [[33, "using-the-diffpir-algorithm-in-your-inverse-problem"]], "Using the Dykstra-like algorithm for wavelet denoising.": [[19, "using-the-dykstra-like-algorithm-for-wavelet-denoising"]], "Utils": [[56, "utils"], [59, "utils"], [63, "utils"], [64, null]], "Vanilla PnP for computed tomography (CT).": [[29, null]], "Vanilla Unfolded algorithm for super-resolution": [[50, null]], "Verifying our linear operator": [[14, "verifying-our-linear-operator"]], "Verifying the concatenated operator": [[12, "verifying-the-concatenated-operator"]], "Verifying the stacked operator": [[12, "verifying-the-stacked-operator"]], "Visualization": [[13, "visualization"]], "WaveletDenoiser": [[137, null]], "WaveletDictDenoiser": [[138, null]], "WaveletPrior": [[161, null]], "Widefield microscope PSF": [[11, "widefield-microscope-psf"]], "adjoint_function": [[203, null]], "bicubic_filter": [[204, null]], "bilinear_filter": [[205, null]], "cal_psnr": [[260, null]], "conjugate_gradient": [[172, null]], "conv2d": [[210, null]], "conv2d_fft": [[211, null]], "conv3d_fft": [[212, null]], "conv_transpose2d": [[213, null]], "conv_transpose2d_fft": [[214, null]], "conv_transpose3d_fft": [[215, null]], "gaussian_blur": [[206, null]], "generate_dataset": [[79, null]], "get_freer_gpu": [[261, null]], "gradient_descent": [[173, null]], "histogram": [[216, null]], "histogramdd": [[217, null]], "load_image": [[262, null]], "load_url_image": [[263, null]], "multiplier": [[218, null]], "multiplier_adjoint": [[219, null]], "ones_like": [[264, null]], "optim_builder": [[162, null]], "plot": [[265, null]], "plot_curves": [[266, null]], "plot_inset": [[267, null]], "plot_ortho3D": [[268, null]], "plot_parameters": [[269, null]], "plot_videos": [[270, null]], "product_convolution2d": [[220, null]], "rand_like": [[271, null]], "randn_like": [[272, null]], "sinc_filter": [[207, null]], "test": [[243, null]], "to_complex_denoiser": [[139, null]], "train": [[244, null]], "unfolded_builder": [[258, null]], "zeros_like": [[273, null]]}, "docnames": ["auto_examples/advanced/demo_ri_basic", "auto_examples/advanced/sg_execution_times", "auto_examples/adversarial-learning/demo_gan_imaging", "auto_examples/adversarial-learning/sg_execution_times", "auto_examples/basics/demo_blur_tour", "auto_examples/basics/demo_custom_prior", "auto_examples/basics/demo_dataset", "auto_examples/basics/demo_dip", "auto_examples/basics/demo_hf_dataset", "auto_examples/basics/demo_lidar", "auto_examples/basics/demo_loading", "auto_examples/basics/demo_microscopy_3d", "auto_examples/basics/demo_pansharpening", "auto_examples/basics/demo_phase_retrieval", "auto_examples/basics/demo_physics", "auto_examples/basics/demo_physics_tour", "auto_examples/basics/demo_train_inpainting", "auto_examples/basics/sg_execution_times", "auto_examples/index", "auto_examples/optimization/demo_3D_wavelets", "auto_examples/optimization/demo_TV_minimisation", "auto_examples/optimization/demo_wavelet_prior", "auto_examples/optimization/sg_execution_times", "auto_examples/patch-priors/demo_epll", "auto_examples/patch-priors/demo_patch_priors_CT", "auto_examples/patch-priors/sg_execution_times", "auto_examples/plug-and-play/demo_PnP_DPIR_deblur", "auto_examples/plug-and-play/demo_PnP_custom_optim", "auto_examples/plug-and-play/demo_RED_GSPnP_SR", "auto_examples/plug-and-play/demo_vanilla_PnP", "auto_examples/plug-and-play/sg_execution_times", "auto_examples/sampling/demo_custom_kernel", "auto_examples/sampling/demo_ddrm", "auto_examples/sampling/demo_diffpir", "auto_examples/sampling/demo_dps", "auto_examples/sampling/demo_sampling", "auto_examples/sampling/sg_execution_times", "auto_examples/self-supervised-learning/demo_ei_transforms", "auto_examples/self-supervised-learning/demo_equivariant_imaging", "auto_examples/self-supervised-learning/demo_multioperator_imaging", "auto_examples/self-supervised-learning/demo_n2n_denoising", "auto_examples/self-supervised-learning/demo_splitting_loss", "auto_examples/self-supervised-learning/demo_sure_denoising", "auto_examples/self-supervised-learning/sg_execution_times", "auto_examples/sg_execution_times", "auto_examples/unfolded/demo_DEQ", "auto_examples/unfolded/demo_LISTA", "auto_examples/unfolded/demo_custom_prior_unfolded", "auto_examples/unfolded/demo_learned_primal_dual", "auto_examples/unfolded/demo_unfolded_constrained_LISTA", "auto_examples/unfolded/demo_vanilla_unfolded", "auto_examples/unfolded/sg_execution_times", "deepinv.contributing", "deepinv.datasets", "deepinv.denoisers", "deepinv.iterative", "deepinv.loss", "deepinv.multigpu", "deepinv.notation", "deepinv.optim", "deepinv.other_models", "deepinv.physics", "deepinv.sampling", "deepinv.unfolded", "deepinv.utils", "index", "sg_execution_times", "stubs/deepinv.Trainer", "stubs/deepinv.datasets.CBSD68", "stubs/deepinv.datasets.DIV2K", "stubs/deepinv.datasets.FMD", "stubs/deepinv.datasets.FastMRISliceDataset", "stubs/deepinv.datasets.Flickr2kHR", "stubs/deepinv.datasets.HDF5Dataset", "stubs/deepinv.datasets.LidcIdriSliceDataset", "stubs/deepinv.datasets.LsdirHR", "stubs/deepinv.datasets.PatchDataset", "stubs/deepinv.datasets.Set14HR", "stubs/deepinv.datasets.Urban100HR", "stubs/deepinv.datasets.generate_dataset", "stubs/deepinv.loss.Artifact2ArtifactLoss", "stubs/deepinv.loss.EILoss", "stubs/deepinv.loss.FNEJacobianSpectralNorm", "stubs/deepinv.loss.JacobianSpectralNorm", "stubs/deepinv.loss.LPIPS", "stubs/deepinv.loss.Loss", "stubs/deepinv.loss.LpNorm", "stubs/deepinv.loss.MCLoss", "stubs/deepinv.loss.MOILoss", "stubs/deepinv.loss.NIQE", "stubs/deepinv.loss.Neighbor2Neighbor", "stubs/deepinv.loss.PSNR", "stubs/deepinv.loss.Phase2PhaseLoss", "stubs/deepinv.loss.R2RLoss", "stubs/deepinv.loss.SSIM", "stubs/deepinv.loss.ScoreLoss", "stubs/deepinv.loss.SplittingLoss", "stubs/deepinv.loss.SupLoss", "stubs/deepinv.loss.SureGaussianLoss", "stubs/deepinv.loss.SurePGLoss", "stubs/deepinv.loss.SurePoissonLoss", "stubs/deepinv.loss.TVLoss", "stubs/deepinv.loss.adversarial.DiscriminatorLoss", "stubs/deepinv.loss.adversarial.DiscriminatorMetric", "stubs/deepinv.loss.adversarial.GeneratorLoss", "stubs/deepinv.loss.adversarial.SupAdversarialDiscriminatorLoss", "stubs/deepinv.loss.adversarial.SupAdversarialGeneratorLoss", "stubs/deepinv.loss.adversarial.UAIRGeneratorLoss", "stubs/deepinv.loss.adversarial.UnsupAdversarialDiscriminatorLoss", "stubs/deepinv.loss.adversarial.UnsupAdversarialGeneratorLoss", "stubs/deepinv.models.ArtifactRemoval", "stubs/deepinv.models.AutoEncoder", "stubs/deepinv.models.BM3D", "stubs/deepinv.models.CSGMGenerator", "stubs/deepinv.models.ConvDecoder", "stubs/deepinv.models.DCGANDiscriminator", "stubs/deepinv.models.DCGANGenerator", "stubs/deepinv.models.DRUNet", "stubs/deepinv.models.DeepImagePrior", "stubs/deepinv.models.DiffUNet", "stubs/deepinv.models.DnCNN", "stubs/deepinv.models.EPLLDenoiser", "stubs/deepinv.models.ESRGANDiscriminator", "stubs/deepinv.models.EquivariantDenoiser", "stubs/deepinv.models.GSDRUNet", "stubs/deepinv.models.ICNN", "stubs/deepinv.models.MedianFilter", "stubs/deepinv.models.PDNet_DualBlock", "stubs/deepinv.models.PDNet_PrimalBlock", "stubs/deepinv.models.PatchGANDiscriminator", "stubs/deepinv.models.Restormer", "stubs/deepinv.models.SCUNet", "stubs/deepinv.models.SwinIR", "stubs/deepinv.models.TGVDenoiser", "stubs/deepinv.models.TVDenoiser", "stubs/deepinv.models.TimeAgnosticNet", "stubs/deepinv.models.UNet", "stubs/deepinv.models.WaveletDenoiser", "stubs/deepinv.models.WaveletDictDenoiser", "stubs/deepinv.models.complex.to_complex_denoiser", "stubs/deepinv.optim.AmplitudeLoss", "stubs/deepinv.optim.BaseOptim", "stubs/deepinv.optim.DPIR", "stubs/deepinv.optim.DataFidelity", "stubs/deepinv.optim.EPLL", "stubs/deepinv.optim.FixedPoint", "stubs/deepinv.optim.IndicatorL2", "stubs/deepinv.optim.L1", "stubs/deepinv.optim.L1Prior", "stubs/deepinv.optim.L2", "stubs/deepinv.optim.LogPoissonLikelihood", "stubs/deepinv.optim.OptimIterator", "stubs/deepinv.optim.PatchNR", "stubs/deepinv.optim.PatchPrior", "stubs/deepinv.optim.PnP", "stubs/deepinv.optim.PoissonLikelihood", "stubs/deepinv.optim.Prior", "stubs/deepinv.optim.RED", "stubs/deepinv.optim.ScorePrior", "stubs/deepinv.optim.TVPrior", "stubs/deepinv.optim.Tikhonov", "stubs/deepinv.optim.WaveletPrior", "stubs/deepinv.optim.optim_builder", "stubs/deepinv.optim.optim_iterators.ADMMIteration", "stubs/deepinv.optim.optim_iterators.CPIteration", "stubs/deepinv.optim.optim_iterators.DRSIteration", "stubs/deepinv.optim.optim_iterators.FISTAIteration", "stubs/deepinv.optim.optim_iterators.GDIteration", "stubs/deepinv.optim.optim_iterators.HQSIteration", "stubs/deepinv.optim.optim_iterators.PGDIteration", "stubs/deepinv.optim.optim_iterators.SMIteration", "stubs/deepinv.optim.utils.GaussianMixtureModel", "stubs/deepinv.optim.utils.conjugate_gradient", "stubs/deepinv.optim.utils.gradient_descent", "stubs/deepinv.physics.Blur", "stubs/deepinv.physics.BlurFFT", "stubs/deepinv.physics.CompressedSensing", "stubs/deepinv.physics.Decolorize", "stubs/deepinv.physics.DecomposablePhysics", "stubs/deepinv.physics.Demosaicing", "stubs/deepinv.physics.Denoising", "stubs/deepinv.physics.Downsampling", "stubs/deepinv.physics.DynamicMRI", "stubs/deepinv.physics.GammaNoise", "stubs/deepinv.physics.GaussianNoise", "stubs/deepinv.physics.Haze", "stubs/deepinv.physics.Inpainting", "stubs/deepinv.physics.LinearPhysics", "stubs/deepinv.physics.LogPoissonNoise", "stubs/deepinv.physics.MRI", "stubs/deepinv.physics.Pansharpen", "stubs/deepinv.physics.PhaseRetrieval", "stubs/deepinv.physics.Physics", "stubs/deepinv.physics.PoissonGaussianNoise", "stubs/deepinv.physics.PoissonNoise", "stubs/deepinv.physics.RadioInterferometry", "stubs/deepinv.physics.RandomPhaseRetrieval", "stubs/deepinv.physics.SinglePhotonLidar", "stubs/deepinv.physics.SinglePixelCamera", "stubs/deepinv.physics.SpaceVaryingBlur", "stubs/deepinv.physics.Tomography", "stubs/deepinv.physics.UniformGaussianNoise", "stubs/deepinv.physics.UniformNoise", "stubs/deepinv.physics.adjoint_function", "stubs/deepinv.physics.blur.bicubic_filter", "stubs/deepinv.physics.blur.bilinear_filter", "stubs/deepinv.physics.blur.gaussian_blur", "stubs/deepinv.physics.blur.sinc_filter", "stubs/deepinv.physics.functional.IRadon", "stubs/deepinv.physics.functional.Radon", "stubs/deepinv.physics.functional.conv2d", "stubs/deepinv.physics.functional.conv2d_fft", "stubs/deepinv.physics.functional.conv3d_fft", "stubs/deepinv.physics.functional.conv_transpose2d", "stubs/deepinv.physics.functional.conv_transpose2d_fft", "stubs/deepinv.physics.functional.conv_transpose3d_fft", "stubs/deepinv.physics.functional.histogram", "stubs/deepinv.physics.functional.histogramdd", "stubs/deepinv.physics.functional.multiplier", "stubs/deepinv.physics.functional.multiplier_adjoint", "stubs/deepinv.physics.functional.product_convolution2d", "stubs/deepinv.physics.generator.Artifact2ArtifactSplittingMaskGenerator", "stubs/deepinv.physics.generator.BaseMaskGenerator", "stubs/deepinv.physics.generator.BernoulliSplittingMaskGenerator", "stubs/deepinv.physics.generator.DiffractionBlurGenerator", "stubs/deepinv.physics.generator.DiffractionBlurGenerator3D", "stubs/deepinv.physics.generator.EquispacedMaskGenerator", "stubs/deepinv.physics.generator.GaussianMaskGenerator", "stubs/deepinv.physics.generator.GaussianSplittingMaskGenerator", "stubs/deepinv.physics.generator.GeneratorMixture", "stubs/deepinv.physics.generator.MotionBlurGenerator", "stubs/deepinv.physics.generator.Phase2PhaseSplittingMaskGenerator", "stubs/deepinv.physics.generator.PhysicsGenerator", "stubs/deepinv.physics.generator.ProductConvolutionBlurGenerator", "stubs/deepinv.physics.generator.RandomMaskGenerator", "stubs/deepinv.physics.generator.SigmaGenerator", "stubs/deepinv.sampling.DDRM", "stubs/deepinv.sampling.DPS", "stubs/deepinv.sampling.DiffPIR", "stubs/deepinv.sampling.DiffusionSampler", "stubs/deepinv.sampling.MonteCarlo", "stubs/deepinv.sampling.SKRock", "stubs/deepinv.sampling.ULA", "stubs/deepinv.test", "stubs/deepinv.train", "stubs/deepinv.training.AdversarialTrainer", "stubs/deepinv.transform.Homography", "stubs/deepinv.transform.Rotate", "stubs/deepinv.transform.Scale", "stubs/deepinv.transform.Shift", "stubs/deepinv.transform.Transform", "stubs/deepinv.transform.projective.Affine", "stubs/deepinv.transform.projective.Euclidean", "stubs/deepinv.transform.projective.PanTiltRotate", "stubs/deepinv.transform.projective.Similarity", "stubs/deepinv.unfolded.BaseDEQ", "stubs/deepinv.unfolded.BaseUnfold", "stubs/deepinv.unfolded.DEQ_builder", "stubs/deepinv.unfolded.unfolded_builder", "stubs/deepinv.utils.TensorList", "stubs/deepinv.utils.cal_psnr", "stubs/deepinv.utils.get_freer_gpu", "stubs/deepinv.utils.load_image", "stubs/deepinv.utils.load_url_image", "stubs/deepinv.utils.ones_like", "stubs/deepinv.utils.plot", "stubs/deepinv.utils.plot_curves", "stubs/deepinv.utils.plot_inset", "stubs/deepinv.utils.plot_ortho3D", "stubs/deepinv.utils.plot_parameters", "stubs/deepinv.utils.plot_videos", "stubs/deepinv.utils.rand_like", "stubs/deepinv.utils.randn_like", "stubs/deepinv.utils.zeros_like"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1}, "filenames": ["auto_examples/advanced/demo_ri_basic.rst", "auto_examples/advanced/sg_execution_times.rst", "auto_examples/adversarial-learning/demo_gan_imaging.rst", "auto_examples/adversarial-learning/sg_execution_times.rst", "auto_examples/basics/demo_blur_tour.rst", "auto_examples/basics/demo_custom_prior.rst", "auto_examples/basics/demo_dataset.rst", "auto_examples/basics/demo_dip.rst", "auto_examples/basics/demo_hf_dataset.rst", "auto_examples/basics/demo_lidar.rst", "auto_examples/basics/demo_loading.rst", "auto_examples/basics/demo_microscopy_3d.rst", "auto_examples/basics/demo_pansharpening.rst", "auto_examples/basics/demo_phase_retrieval.rst", "auto_examples/basics/demo_physics.rst", "auto_examples/basics/demo_physics_tour.rst", "auto_examples/basics/demo_train_inpainting.rst", "auto_examples/basics/sg_execution_times.rst", "auto_examples/index.rst", "auto_examples/optimization/demo_3D_wavelets.rst", "auto_examples/optimization/demo_TV_minimisation.rst", "auto_examples/optimization/demo_wavelet_prior.rst", "auto_examples/optimization/sg_execution_times.rst", "auto_examples/patch-priors/demo_epll.rst", "auto_examples/patch-priors/demo_patch_priors_CT.rst", "auto_examples/patch-priors/sg_execution_times.rst", "auto_examples/plug-and-play/demo_PnP_DPIR_deblur.rst", "auto_examples/plug-and-play/demo_PnP_custom_optim.rst", "auto_examples/plug-and-play/demo_RED_GSPnP_SR.rst", "auto_examples/plug-and-play/demo_vanilla_PnP.rst", "auto_examples/plug-and-play/sg_execution_times.rst", "auto_examples/sampling/demo_custom_kernel.rst", "auto_examples/sampling/demo_ddrm.rst", "auto_examples/sampling/demo_diffpir.rst", "auto_examples/sampling/demo_dps.rst", "auto_examples/sampling/demo_sampling.rst", "auto_examples/sampling/sg_execution_times.rst", "auto_examples/self-supervised-learning/demo_ei_transforms.rst", "auto_examples/self-supervised-learning/demo_equivariant_imaging.rst", "auto_examples/self-supervised-learning/demo_multioperator_imaging.rst", "auto_examples/self-supervised-learning/demo_n2n_denoising.rst", "auto_examples/self-supervised-learning/demo_splitting_loss.rst", "auto_examples/self-supervised-learning/demo_sure_denoising.rst", "auto_examples/self-supervised-learning/sg_execution_times.rst", "auto_examples/sg_execution_times.rst", "auto_examples/unfolded/demo_DEQ.rst", "auto_examples/unfolded/demo_LISTA.rst", "auto_examples/unfolded/demo_custom_prior_unfolded.rst", "auto_examples/unfolded/demo_learned_primal_dual.rst", "auto_examples/unfolded/demo_unfolded_constrained_LISTA.rst", "auto_examples/unfolded/demo_vanilla_unfolded.rst", "auto_examples/unfolded/sg_execution_times.rst", "deepinv.contributing.rst", "deepinv.datasets.rst", "deepinv.denoisers.rst", "deepinv.iterative.rst", "deepinv.loss.rst", "deepinv.multigpu.rst", "deepinv.notation.rst", "deepinv.optim.rst", "deepinv.other_models.rst", "deepinv.physics.rst", "deepinv.sampling.rst", "deepinv.unfolded.rst", "deepinv.utils.rst", "index.rst", "sg_execution_times.rst", "stubs/deepinv.Trainer.rst", "stubs/deepinv.datasets.CBSD68.rst", "stubs/deepinv.datasets.DIV2K.rst", "stubs/deepinv.datasets.FMD.rst", "stubs/deepinv.datasets.FastMRISliceDataset.rst", "stubs/deepinv.datasets.Flickr2kHR.rst", "stubs/deepinv.datasets.HDF5Dataset.rst", "stubs/deepinv.datasets.LidcIdriSliceDataset.rst", "stubs/deepinv.datasets.LsdirHR.rst", "stubs/deepinv.datasets.PatchDataset.rst", "stubs/deepinv.datasets.Set14HR.rst", "stubs/deepinv.datasets.Urban100HR.rst", "stubs/deepinv.datasets.generate_dataset.rst", "stubs/deepinv.loss.Artifact2ArtifactLoss.rst", "stubs/deepinv.loss.EILoss.rst", "stubs/deepinv.loss.FNEJacobianSpectralNorm.rst", "stubs/deepinv.loss.JacobianSpectralNorm.rst", "stubs/deepinv.loss.LPIPS.rst", "stubs/deepinv.loss.Loss.rst", "stubs/deepinv.loss.LpNorm.rst", "stubs/deepinv.loss.MCLoss.rst", "stubs/deepinv.loss.MOILoss.rst", "stubs/deepinv.loss.NIQE.rst", "stubs/deepinv.loss.Neighbor2Neighbor.rst", "stubs/deepinv.loss.PSNR.rst", "stubs/deepinv.loss.Phase2PhaseLoss.rst", "stubs/deepinv.loss.R2RLoss.rst", "stubs/deepinv.loss.SSIM.rst", "stubs/deepinv.loss.ScoreLoss.rst", "stubs/deepinv.loss.SplittingLoss.rst", "stubs/deepinv.loss.SupLoss.rst", "stubs/deepinv.loss.SureGaussianLoss.rst", "stubs/deepinv.loss.SurePGLoss.rst", "stubs/deepinv.loss.SurePoissonLoss.rst", "stubs/deepinv.loss.TVLoss.rst", "stubs/deepinv.loss.adversarial.DiscriminatorLoss.rst", "stubs/deepinv.loss.adversarial.DiscriminatorMetric.rst", "stubs/deepinv.loss.adversarial.GeneratorLoss.rst", "stubs/deepinv.loss.adversarial.SupAdversarialDiscriminatorLoss.rst", "stubs/deepinv.loss.adversarial.SupAdversarialGeneratorLoss.rst", "stubs/deepinv.loss.adversarial.UAIRGeneratorLoss.rst", "stubs/deepinv.loss.adversarial.UnsupAdversarialDiscriminatorLoss.rst", "stubs/deepinv.loss.adversarial.UnsupAdversarialGeneratorLoss.rst", "stubs/deepinv.models.ArtifactRemoval.rst", "stubs/deepinv.models.AutoEncoder.rst", "stubs/deepinv.models.BM3D.rst", "stubs/deepinv.models.CSGMGenerator.rst", "stubs/deepinv.models.ConvDecoder.rst", "stubs/deepinv.models.DCGANDiscriminator.rst", "stubs/deepinv.models.DCGANGenerator.rst", "stubs/deepinv.models.DRUNet.rst", "stubs/deepinv.models.DeepImagePrior.rst", "stubs/deepinv.models.DiffUNet.rst", "stubs/deepinv.models.DnCNN.rst", "stubs/deepinv.models.EPLLDenoiser.rst", "stubs/deepinv.models.ESRGANDiscriminator.rst", "stubs/deepinv.models.EquivariantDenoiser.rst", "stubs/deepinv.models.GSDRUNet.rst", "stubs/deepinv.models.ICNN.rst", "stubs/deepinv.models.MedianFilter.rst", "stubs/deepinv.models.PDNet_DualBlock.rst", "stubs/deepinv.models.PDNet_PrimalBlock.rst", "stubs/deepinv.models.PatchGANDiscriminator.rst", "stubs/deepinv.models.Restormer.rst", "stubs/deepinv.models.SCUNet.rst", "stubs/deepinv.models.SwinIR.rst", "stubs/deepinv.models.TGVDenoiser.rst", "stubs/deepinv.models.TVDenoiser.rst", "stubs/deepinv.models.TimeAgnosticNet.rst", "stubs/deepinv.models.UNet.rst", "stubs/deepinv.models.WaveletDenoiser.rst", "stubs/deepinv.models.WaveletDictDenoiser.rst", "stubs/deepinv.models.complex.to_complex_denoiser.rst", "stubs/deepinv.optim.AmplitudeLoss.rst", "stubs/deepinv.optim.BaseOptim.rst", "stubs/deepinv.optim.DPIR.rst", "stubs/deepinv.optim.DataFidelity.rst", "stubs/deepinv.optim.EPLL.rst", "stubs/deepinv.optim.FixedPoint.rst", "stubs/deepinv.optim.IndicatorL2.rst", "stubs/deepinv.optim.L1.rst", "stubs/deepinv.optim.L1Prior.rst", "stubs/deepinv.optim.L2.rst", "stubs/deepinv.optim.LogPoissonLikelihood.rst", "stubs/deepinv.optim.OptimIterator.rst", "stubs/deepinv.optim.PatchNR.rst", "stubs/deepinv.optim.PatchPrior.rst", "stubs/deepinv.optim.PnP.rst", "stubs/deepinv.optim.PoissonLikelihood.rst", "stubs/deepinv.optim.Prior.rst", "stubs/deepinv.optim.RED.rst", "stubs/deepinv.optim.ScorePrior.rst", "stubs/deepinv.optim.TVPrior.rst", "stubs/deepinv.optim.Tikhonov.rst", "stubs/deepinv.optim.WaveletPrior.rst", "stubs/deepinv.optim.optim_builder.rst", "stubs/deepinv.optim.optim_iterators.ADMMIteration.rst", "stubs/deepinv.optim.optim_iterators.CPIteration.rst", "stubs/deepinv.optim.optim_iterators.DRSIteration.rst", "stubs/deepinv.optim.optim_iterators.FISTAIteration.rst", "stubs/deepinv.optim.optim_iterators.GDIteration.rst", "stubs/deepinv.optim.optim_iterators.HQSIteration.rst", "stubs/deepinv.optim.optim_iterators.PGDIteration.rst", "stubs/deepinv.optim.optim_iterators.SMIteration.rst", "stubs/deepinv.optim.utils.GaussianMixtureModel.rst", "stubs/deepinv.optim.utils.conjugate_gradient.rst", "stubs/deepinv.optim.utils.gradient_descent.rst", "stubs/deepinv.physics.Blur.rst", "stubs/deepinv.physics.BlurFFT.rst", "stubs/deepinv.physics.CompressedSensing.rst", "stubs/deepinv.physics.Decolorize.rst", "stubs/deepinv.physics.DecomposablePhysics.rst", "stubs/deepinv.physics.Demosaicing.rst", "stubs/deepinv.physics.Denoising.rst", "stubs/deepinv.physics.Downsampling.rst", "stubs/deepinv.physics.DynamicMRI.rst", "stubs/deepinv.physics.GammaNoise.rst", "stubs/deepinv.physics.GaussianNoise.rst", "stubs/deepinv.physics.Haze.rst", "stubs/deepinv.physics.Inpainting.rst", "stubs/deepinv.physics.LinearPhysics.rst", "stubs/deepinv.physics.LogPoissonNoise.rst", "stubs/deepinv.physics.MRI.rst", "stubs/deepinv.physics.Pansharpen.rst", "stubs/deepinv.physics.PhaseRetrieval.rst", "stubs/deepinv.physics.Physics.rst", "stubs/deepinv.physics.PoissonGaussianNoise.rst", "stubs/deepinv.physics.PoissonNoise.rst", "stubs/deepinv.physics.RadioInterferometry.rst", "stubs/deepinv.physics.RandomPhaseRetrieval.rst", "stubs/deepinv.physics.SinglePhotonLidar.rst", "stubs/deepinv.physics.SinglePixelCamera.rst", "stubs/deepinv.physics.SpaceVaryingBlur.rst", "stubs/deepinv.physics.Tomography.rst", "stubs/deepinv.physics.UniformGaussianNoise.rst", "stubs/deepinv.physics.UniformNoise.rst", "stubs/deepinv.physics.adjoint_function.rst", "stubs/deepinv.physics.blur.bicubic_filter.rst", "stubs/deepinv.physics.blur.bilinear_filter.rst", "stubs/deepinv.physics.blur.gaussian_blur.rst", "stubs/deepinv.physics.blur.sinc_filter.rst", "stubs/deepinv.physics.functional.IRadon.rst", "stubs/deepinv.physics.functional.Radon.rst", "stubs/deepinv.physics.functional.conv2d.rst", "stubs/deepinv.physics.functional.conv2d_fft.rst", "stubs/deepinv.physics.functional.conv3d_fft.rst", "stubs/deepinv.physics.functional.conv_transpose2d.rst", "stubs/deepinv.physics.functional.conv_transpose2d_fft.rst", "stubs/deepinv.physics.functional.conv_transpose3d_fft.rst", "stubs/deepinv.physics.functional.histogram.rst", "stubs/deepinv.physics.functional.histogramdd.rst", "stubs/deepinv.physics.functional.multiplier.rst", "stubs/deepinv.physics.functional.multiplier_adjoint.rst", "stubs/deepinv.physics.functional.product_convolution2d.rst", "stubs/deepinv.physics.generator.Artifact2ArtifactSplittingMaskGenerator.rst", "stubs/deepinv.physics.generator.BaseMaskGenerator.rst", "stubs/deepinv.physics.generator.BernoulliSplittingMaskGenerator.rst", "stubs/deepinv.physics.generator.DiffractionBlurGenerator.rst", "stubs/deepinv.physics.generator.DiffractionBlurGenerator3D.rst", "stubs/deepinv.physics.generator.EquispacedMaskGenerator.rst", "stubs/deepinv.physics.generator.GaussianMaskGenerator.rst", "stubs/deepinv.physics.generator.GaussianSplittingMaskGenerator.rst", "stubs/deepinv.physics.generator.GeneratorMixture.rst", "stubs/deepinv.physics.generator.MotionBlurGenerator.rst", "stubs/deepinv.physics.generator.Phase2PhaseSplittingMaskGenerator.rst", "stubs/deepinv.physics.generator.PhysicsGenerator.rst", "stubs/deepinv.physics.generator.ProductConvolutionBlurGenerator.rst", "stubs/deepinv.physics.generator.RandomMaskGenerator.rst", "stubs/deepinv.physics.generator.SigmaGenerator.rst", "stubs/deepinv.sampling.DDRM.rst", "stubs/deepinv.sampling.DPS.rst", "stubs/deepinv.sampling.DiffPIR.rst", "stubs/deepinv.sampling.DiffusionSampler.rst", "stubs/deepinv.sampling.MonteCarlo.rst", "stubs/deepinv.sampling.SKRock.rst", "stubs/deepinv.sampling.ULA.rst", "stubs/deepinv.test.rst", "stubs/deepinv.train.rst", "stubs/deepinv.training.AdversarialTrainer.rst", "stubs/deepinv.transform.Homography.rst", "stubs/deepinv.transform.Rotate.rst", "stubs/deepinv.transform.Scale.rst", "stubs/deepinv.transform.Shift.rst", "stubs/deepinv.transform.Transform.rst", "stubs/deepinv.transform.projective.Affine.rst", "stubs/deepinv.transform.projective.Euclidean.rst", "stubs/deepinv.transform.projective.PanTiltRotate.rst", "stubs/deepinv.transform.projective.Similarity.rst", "stubs/deepinv.unfolded.BaseDEQ.rst", "stubs/deepinv.unfolded.BaseUnfold.rst", "stubs/deepinv.unfolded.DEQ_builder.rst", "stubs/deepinv.unfolded.unfolded_builder.rst", "stubs/deepinv.utils.TensorList.rst", "stubs/deepinv.utils.cal_psnr.rst", "stubs/deepinv.utils.get_freer_gpu.rst", "stubs/deepinv.utils.load_image.rst", "stubs/deepinv.utils.load_url_image.rst", "stubs/deepinv.utils.ones_like.rst", "stubs/deepinv.utils.plot.rst", "stubs/deepinv.utils.plot_curves.rst", "stubs/deepinv.utils.plot_inset.rst", "stubs/deepinv.utils.plot_ortho3D.rst", "stubs/deepinv.utils.plot_parameters.rst", "stubs/deepinv.utils.plot_videos.rst", "stubs/deepinv.utils.rand_like.rst", "stubs/deepinv.utils.randn_like.rst", "stubs/deepinv.utils.zeros_like.rst"], "indexentries": {"__add__() (deepinv.physics.generator.physicsgenerator method)": [[232, "deepinv.physics.generator.PhysicsGenerator.__add__", false]], "__add__() (deepinv.physics.linearphysics method)": [[187, "deepinv.physics.LinearPhysics.__add__", false]], "__add__() (deepinv.physics.physics method)": [[192, "deepinv.physics.Physics.__add__", false]], "__add__() (deepinv.transform.transform method)": [[250, "deepinv.transform.Transform.__add__", false]], "__add__() (deepinv.utils.tensorlist method)": [[259, "deepinv.utils.TensorList.__add__", false]], "__mul__() (deepinv.physics.inpainting method)": [[186, "deepinv.physics.Inpainting.__mul__", false]], "__mul__() (deepinv.physics.linearphysics method)": [[187, "deepinv.physics.LinearPhysics.__mul__", false]], "__mul__() (deepinv.physics.physics method)": [[192, "deepinv.physics.Physics.__mul__", false]], "__mul__() (deepinv.transform.transform method)": [[250, "deepinv.transform.Transform.__mul__", false]], "__mul__() (deepinv.utils.tensorlist method)": [[259, "deepinv.utils.TensorList.__mul__", false]], "__neg__() (deepinv.utils.tensorlist method)": [[259, "deepinv.utils.TensorList.__neg__", false]], "__sub__() (deepinv.utils.tensorlist method)": [[259, "deepinv.utils.TensorList.__sub__", false]], "__truediv__() (deepinv.utils.tensorlist method)": [[259, "deepinv.utils.TensorList.__truediv__", false]], "a() (deepinv.physics.blur method)": [[174, "deepinv.physics.Blur.A", false]], "a() (deepinv.physics.blurfft method)": [[175, "deepinv.physics.BlurFFT.A", false]], "a() (deepinv.physics.compressedsensing method)": [[176, "deepinv.physics.CompressedSensing.A", false]], "a() (deepinv.physics.decomposablephysics method)": [[178, "deepinv.physics.DecomposablePhysics.A", false]], "a() (deepinv.physics.downsampling method)": [[181, "deepinv.physics.Downsampling.A", false]], "a() (deepinv.physics.dynamicmri method)": [[182, "deepinv.physics.DynamicMRI.A", false]], "a() (deepinv.physics.haze method)": [[185, "deepinv.physics.Haze.A", false]], "a() (deepinv.physics.pansharpen method)": [[190, "deepinv.physics.Pansharpen.A", false]], "a() (deepinv.physics.phaseretrieval method)": [[191, "deepinv.physics.PhaseRetrieval.A", false]], "a() (deepinv.physics.physics method)": [[192, "deepinv.physics.Physics.A", false]], "a() (deepinv.physics.radiointerferometry method)": [[195, "deepinv.physics.RadioInterferometry.A", false]], "a() (deepinv.physics.singlephotonlidar method)": [[197, "deepinv.physics.SinglePhotonLidar.A", false]], "a() (deepinv.physics.spacevaryingblur method)": [[199, "deepinv.physics.SpaceVaryingBlur.A", false]], "a() (deepinv.physics.tomography method)": [[200, "deepinv.physics.Tomography.A", false]], "a_a_adjoint() (deepinv.physics.decomposablephysics method)": [[178, "deepinv.physics.DecomposablePhysics.A_A_adjoint", false]], "a_a_adjoint() (deepinv.physics.linearphysics method)": [[187, "deepinv.physics.LinearPhysics.A_A_adjoint", false]], "a_adjoint() (deepinv.physics.blur method)": [[174, "deepinv.physics.Blur.A_adjoint", false]], "a_adjoint() (deepinv.physics.blurfft method)": [[175, "deepinv.physics.BlurFFT.A_adjoint", false]], "a_adjoint() (deepinv.physics.compressedsensing method)": [[176, "deepinv.physics.CompressedSensing.A_adjoint", false]], "a_adjoint() (deepinv.physics.decomposablephysics method)": [[178, "deepinv.physics.DecomposablePhysics.A_adjoint", false]], "a_adjoint() (deepinv.physics.downsampling method)": [[181, "deepinv.physics.Downsampling.A_adjoint", false]], "a_adjoint() (deepinv.physics.dynamicmri method)": [[182, "deepinv.physics.DynamicMRI.A_adjoint", false]], "a_adjoint() (deepinv.physics.linearphysics method)": [[187, "deepinv.physics.LinearPhysics.A_adjoint", false]], "a_adjoint() (deepinv.physics.pansharpen method)": [[190, "deepinv.physics.Pansharpen.A_adjoint", false]], "a_adjoint() (deepinv.physics.radiointerferometry method)": [[195, "deepinv.physics.RadioInterferometry.A_adjoint", false]], "a_adjoint() (deepinv.physics.spacevaryingblur method)": [[199, "deepinv.physics.SpaceVaryingBlur.A_adjoint", false]], "a_adjoint() (deepinv.physics.tomography method)": [[200, "deepinv.physics.Tomography.A_adjoint", false]], "a_adjoint_a() (deepinv.physics.decomposablephysics method)": [[178, "deepinv.physics.DecomposablePhysics.A_adjoint_A", false]], "a_adjoint_a() (deepinv.physics.linearphysics method)": [[187, "deepinv.physics.LinearPhysics.A_adjoint_A", false]], "a_dagger() (deepinv.physics.compressedsensing method)": [[176, "deepinv.physics.CompressedSensing.A_dagger", false]], "a_dagger() (deepinv.physics.decomposablephysics method)": [[178, "deepinv.physics.DecomposablePhysics.A_dagger", false]], "a_dagger() (deepinv.physics.dynamicmri method)": [[182, "deepinv.physics.DynamicMRI.A_dagger", false]], "a_dagger() (deepinv.physics.haze method)": [[185, "deepinv.physics.Haze.A_dagger", false]], "a_dagger() (deepinv.physics.linearphysics method)": [[187, "deepinv.physics.LinearPhysics.A_dagger", false]], "a_dagger() (deepinv.physics.phaseretrieval method)": [[191, "deepinv.physics.PhaseRetrieval.A_dagger", false]], "a_dagger() (deepinv.physics.physics method)": [[192, "deepinv.physics.Physics.A_dagger", false]], "a_dagger() (deepinv.physics.singlephotonlidar method)": [[197, "deepinv.physics.SinglePhotonLidar.A_dagger", false]], "a_dagger() (deepinv.physics.tomography method)": [[200, "deepinv.physics.Tomography.A_dagger", false]], "a_vjp() (deepinv.physics.linearphysics method)": [[187, "deepinv.physics.LinearPhysics.A_vjp", false]], "a_vjp() (deepinv.physics.phaseretrieval method)": [[191, "deepinv.physics.PhaseRetrieval.A_vjp", false]], "a_vjp() (deepinv.physics.physics method)": [[192, "deepinv.physics.Physics.A_vjp", false]], "adapt_model() (deepinv.loss.loss method)": [[85, "deepinv.loss.Loss.adapt_model", false]], "adapt_model() (deepinv.loss.phase2phaseloss method)": [[92, "deepinv.loss.Phase2PhaseLoss.adapt_model", false]], "adapt_model() (deepinv.loss.r2rloss method)": [[93, "deepinv.loss.R2RLoss.adapt_model", false]], "adapt_model() (deepinv.loss.scoreloss method)": [[95, "deepinv.loss.ScoreLoss.adapt_model", false]], "adapt_model() (deepinv.loss.splittingloss method)": [[96, "deepinv.loss.SplittingLoss.adapt_model", false]], "adjoint_function (class in deepinv.physics)": [[203, "deepinv.physics.adjoint_function", false]], "adjointness_test() (deepinv.physics.linearphysics method)": [[187, "deepinv.physics.LinearPhysics.adjointness_test", false]], "admmiteration (class in deepinv.optim.optim_iterators)": [[163, "deepinv.optim.optim_iterators.ADMMIteration", false]], "adversarial_loss() (deepinv.loss.adversarial.discriminatorloss method)": [[102, "deepinv.loss.adversarial.DiscriminatorLoss.adversarial_loss", false]], "adversarial_loss() (deepinv.loss.adversarial.generatorloss method)": [[104, "deepinv.loss.adversarial.GeneratorLoss.adversarial_loss", false]], "adversarialtrainer (class in deepinv.training)": [[245, "deepinv.training.AdversarialTrainer", false]], "affine (class in deepinv.transform.projective)": [[251, "deepinv.transform.projective.Affine", false]], "amplitudeloss (class in deepinv.optim)": [[140, "deepinv.optim.AmplitudeLoss", false]], "anderson_acceleration_step() (deepinv.optim.fixedpoint method)": [[145, "deepinv.optim.FixedPoint.anderson_acceleration_step", false]], "append() (deepinv.utils.tensorlist method)": [[259, "deepinv.utils.TensorList.append", false]], "artifact2artifactloss (class in deepinv.loss)": [[80, "deepinv.loss.Artifact2ArtifactLoss", false]], "artifact2artifactsplittingmaskgenerator (class in deepinv.physics.generator)": [[221, "deepinv.physics.generator.Artifact2ArtifactSplittingMaskGenerator", false]], "artifactremoval (class in deepinv.models)": [[110, "deepinv.models.ArtifactRemoval", false]], "autoencoder (class in deepinv.models)": [[111, "deepinv.models.AutoEncoder", false]], "b_dagger() (deepinv.physics.phaseretrieval method)": [[191, "deepinv.physics.PhaseRetrieval.B_dagger", false]], "basedeq (class in deepinv.unfolded)": [[255, "deepinv.unfolded.BaseDEQ", false]], "basemaskgenerator (class in deepinv.physics.generator)": [[222, "deepinv.physics.generator.BaseMaskGenerator", false]], "baseoptim (class in deepinv.optim)": [[141, "deepinv.optim.BaseOptim", false]], "baseunfold (class in deepinv.unfolded)": [[256, "deepinv.unfolded.BaseUnfold", false]], "batch_step() (deepinv.physics.generator.artifact2artifactsplittingmaskgenerator method)": [[221, "deepinv.physics.generator.Artifact2ArtifactSplittingMaskGenerator.batch_step", false]], "batch_step() (deepinv.physics.generator.bernoullisplittingmaskgenerator method)": [[223, "deepinv.physics.generator.BernoulliSplittingMaskGenerator.batch_step", false]], "batch_step() (deepinv.physics.generator.gaussiansplittingmaskgenerator method)": [[228, "deepinv.physics.generator.GaussianSplittingMaskGenerator.batch_step", false]], "batch_step() (deepinv.physics.generator.phase2phasesplittingmaskgenerator method)": [[231, "deepinv.physics.generator.Phase2PhaseSplittingMaskGenerator.batch_step", false]], "bernoullisplittingmaskgenerator (class in deepinv.physics.generator)": [[223, "deepinv.physics.generator.BernoulliSplittingMaskGenerator", false]], "bicubic_filter() (in module deepinv.physics.blur)": [[204, "deepinv.physics.blur.bicubic_filter", false]], "bilinear_filter() (in module deepinv.physics.blur)": [[205, "deepinv.physics.blur.bilinear_filter", false]], "blur (class in deepinv.physics)": [[174, "deepinv.physics.Blur", false]], "blurfft (class in deepinv.physics)": [[175, "deepinv.physics.BlurFFT", false]], "bm3d (class in deepinv.models)": [[112, "deepinv.models.BM3D", false]], "cal_psnr() (in module deepinv.utils)": [[260, "deepinv.utils.cal_psnr", false]], "cbsd68 (class in deepinv.datasets)": [[68, "deepinv.datasets.CBSD68", false]], "check_clip_grad() (deepinv.trainer method)": [[67, "deepinv.Trainer.check_clip_grad", false]], "check_clip_grad_d() (deepinv.training.adversarialtrainer method)": [[245, "deepinv.training.AdversarialTrainer.check_clip_grad_D", false]], "check_conv_fn() (deepinv.optim.baseoptim method)": [[141, "deepinv.optim.BaseOptim.check_conv_fn", false]], "check_dataset_exists() (deepinv.datasets.cbsd68 method)": [[68, "deepinv.datasets.CBSD68.check_dataset_exists", false]], "check_dataset_exists() (deepinv.datasets.flickr2khr method)": [[72, "deepinv.datasets.Flickr2kHR.check_dataset_exists", false]], "check_dataset_exists() (deepinv.datasets.set14hr method)": [[77, "deepinv.datasets.Set14HR.check_dataset_exists", false]], "check_dataset_exists() (deepinv.datasets.urban100hr method)": [[78, "deepinv.datasets.Urban100HR.check_dataset_exists", false]], "check_iteration_fn() (deepinv.optim.baseoptim method)": [[141, "deepinv.optim.BaseOptim.check_iteration_fn", false]], "check_mask() (deepinv.physics.dynamicmri method)": [[182, "deepinv.physics.DynamicMRI.check_mask", false]], "check_mask() (deepinv.physics.mri method)": [[189, "deepinv.physics.MRI.check_mask", false]], "check_pixelwise() (deepinv.physics.generator.bernoullisplittingmaskgenerator method)": [[223, "deepinv.physics.generator.BernoulliSplittingMaskGenerator.check_pixelwise", false]], "classify() (deepinv.optim.utils.gaussianmixturemodel method)": [[171, "deepinv.optim.utils.GaussianMixtureModel.classify", false]], "component_log_likelihoods() (deepinv.optim.utils.gaussianmixturemodel method)": [[171, "deepinv.optim.utils.GaussianMixtureModel.component_log_likelihoods", false]], "compressedsensing (class in deepinv.physics)": [[176, "deepinv.physics.CompressedSensing", false]], "compute_alpha_betas() (deepinv.sampling.dps method)": [[237, "deepinv.sampling.DPS.compute_alpha_betas", false]], "compute_loss() (deepinv.trainer method)": [[67, "deepinv.Trainer.compute_loss", false]], "compute_loss() (deepinv.training.adversarialtrainer method)": [[245, "deepinv.training.AdversarialTrainer.compute_loss", false]], "compute_metrics() (deepinv.trainer method)": [[67, "deepinv.Trainer.compute_metrics", false]], "compute_norm() (deepinv.physics.linearphysics method)": [[187, "deepinv.physics.LinearPhysics.compute_norm", false]], "conj() (deepinv.utils.tensorlist method)": [[259, "deepinv.utils.TensorList.conj", false]], "conjugate_gradient (class in deepinv.optim.utils)": [[172, "deepinv.optim.utils.conjugate_gradient", false]], "conv2d (class in deepinv.physics.functional)": [[210, "deepinv.physics.functional.conv2d", false]], "conv2d_fft (class in deepinv.physics.functional)": [[211, "deepinv.physics.functional.conv2d_fft", false]], "conv3d_fft (class in deepinv.physics.functional)": [[212, "deepinv.physics.functional.conv3d_fft", false]], "conv_transpose2d (class in deepinv.physics.functional)": [[213, "deepinv.physics.functional.conv_transpose2d", false]], "conv_transpose2d_fft (class in deepinv.physics.functional)": [[214, "deepinv.physics.functional.conv_transpose2d_fft", false]], "conv_transpose3d_fft (class in deepinv.physics.functional)": [[215, "deepinv.physics.functional.conv_transpose3d_fft", false]], "convdecoder (class in deepinv.models)": [[114, "deepinv.models.ConvDecoder", false]], "convert_to_fp16() (deepinv.models.diffunet method)": [[119, "deepinv.models.DiffUNet.convert_to_fp16", false]], "convert_to_fp32() (deepinv.models.diffunet method)": [[119, "deepinv.models.DiffUNet.convert_to_fp32", false]], "cpiteration (class in deepinv.optim.optim_iterators)": [[164, "deepinv.optim.optim_iterators.CPIteration", false]], "crop_output() (deepinv.models.waveletdenoiser method)": [[137, "deepinv.models.WaveletDenoiser.crop_output", false]], "csgmgenerator (class in deepinv.models)": [[113, "deepinv.models.CSGMGenerator", false]], "d() (deepinv.optim.amplitudeloss method)": [[140, "deepinv.optim.AmplitudeLoss.d", false]], "d() (deepinv.optim.datafidelity method)": [[143, "deepinv.optim.DataFidelity.d", false]], "d() (deepinv.optim.indicatorl2 method)": [[146, "deepinv.optim.IndicatorL2.d", false]], "d() (deepinv.optim.l1 method)": [[147, "deepinv.optim.L1.d", false]], "d() (deepinv.optim.l2 method)": [[149, "deepinv.optim.L2.d", false]], "d() (deepinv.optim.logpoissonlikelihood method)": [[150, "deepinv.optim.LogPoissonLikelihood.d", false]], "d() (deepinv.optim.poissonlikelihood method)": [[155, "deepinv.optim.PoissonLikelihood.d", false]], "datafidelity (class in deepinv.optim)": [[143, "deepinv.optim.DataFidelity", false]], "dcgandiscriminator (class in deepinv.models)": [[115, "deepinv.models.DCGANDiscriminator", false]], "dcgangenerator (class in deepinv.models)": [[116, "deepinv.models.DCGANGenerator", false]], "ddrm (class in deepinv.sampling)": [[236, "deepinv.sampling.DDRM", false]], "decolorize (class in deepinv.physics)": [[177, "deepinv.physics.Decolorize", false]], "decomposablephysics (class in deepinv.physics)": [[178, "deepinv.physics.DecomposablePhysics", false]], "deepimageprior (class in deepinv.models)": [[118, "deepinv.models.DeepImagePrior", false]], "demosaicing (class in deepinv.physics)": [[179, "deepinv.physics.Demosaicing", false]], "denoising (class in deepinv.physics)": [[180, "deepinv.physics.Denoising", false]], "deq_builder() (in module deepinv.unfolded)": [[257, "deepinv.unfolded.DEQ_builder", false]], "diffpir (class in deepinv.sampling)": [[238, "deepinv.sampling.DiffPIR", false]], "diffractionblurgenerator (class in deepinv.physics.generator)": [[224, "deepinv.physics.generator.DiffractionBlurGenerator", false]], "diffractionblurgenerator3d (class in deepinv.physics.generator)": [[225, "deepinv.physics.generator.DiffractionBlurGenerator3D", false]], "diffunet (class in deepinv.models)": [[119, "deepinv.models.DiffUNet", false]], "diffusionsampler (class in deepinv.sampling)": [[239, "deepinv.sampling.DiffusionSampler", false]], "discriminatorloss (class in deepinv.loss.adversarial)": [[102, "deepinv.loss.adversarial.DiscriminatorLoss", false]], "discriminatormetric (class in deepinv.loss.adversarial)": [[103, "deepinv.loss.adversarial.DiscriminatorMetric", false]], "div2k (class in deepinv.datasets)": [[69, "deepinv.datasets.DIV2K", false]], "dncnn (class in deepinv.models)": [[120, "deepinv.models.DnCNN", false]], "downsampling (class in deepinv.physics)": [[181, "deepinv.physics.Downsampling", false]], "dpir (class in deepinv.optim)": [[142, "deepinv.optim.DPIR", false]], "dps (class in deepinv.sampling)": [[237, "deepinv.sampling.DPS", false]], "drsiteration (class in deepinv.optim.optim_iterators)": [[165, "deepinv.optim.optim_iterators.DRSIteration", false]], "drunet (class in deepinv.models)": [[117, "deepinv.models.DRUNet", false]], "dwt() (deepinv.models.waveletdenoiser method)": [[137, "deepinv.models.WaveletDenoiser.dwt", false]], "dynamicmri (class in deepinv.physics)": [[182, "deepinv.physics.DynamicMRI", false]], "eiloss (class in deepinv.loss)": [[81, "deepinv.loss.EILoss", false]], "epll (class in deepinv.optim)": [[144, "deepinv.optim.EPLL", false]], "eplldenoiser (class in deepinv.models)": [[121, "deepinv.models.EPLLDenoiser", false]], "epsilon() (deepinv.models.tgvdenoiser static method)": [[133, "deepinv.models.TGVDenoiser.epsilon", false]], "epsilon_adjoint() (deepinv.models.tgvdenoiser static method)": [[133, "deepinv.models.TGVDenoiser.epsilon_adjoint", false]], "equispacedmaskgenerator (class in deepinv.physics.generator)": [[226, "deepinv.physics.generator.EquispacedMaskGenerator", false]], "equivariantdenoiser (class in deepinv.models)": [[123, "deepinv.models.EquivariantDenoiser", false]], "esrgandiscriminator (class in deepinv.models)": [[122, "deepinv.models.ESRGANDiscriminator", false]], "euclidean (class in deepinv.transform.projective)": [[252, "deepinv.transform.projective.Euclidean", false]], "f_matern() (deepinv.physics.generator.motionblurgenerator method)": [[230, "deepinv.physics.generator.MotionBlurGenerator.f_matern", false]], "fastmrislicedataset (class in deepinv.datasets)": [[71, "deepinv.datasets.FastMRISliceDataset", false]], "fastmrislicedataset.slicesamplefileidentifier (class in deepinv.datasets)": [[71, "deepinv.datasets.FastMRISliceDataset.SliceSampleFileIdentifier", false]], "find_nearest() (deepinv.models.diffunet method)": [[119, "deepinv.models.DiffUNet.find_nearest", false]], "find_nearest() (deepinv.sampling.diffpir method)": [[238, "deepinv.sampling.DiffPIR.find_nearest", false]], "fistaiteration (class in deepinv.optim.optim_iterators)": [[166, "deepinv.optim.optim_iterators.FISTAIteration", false]], "fit() (deepinv.optim.utils.gaussianmixturemodel method)": [[171, "deepinv.optim.utils.GaussianMixtureModel.fit", false]], "fixedpoint (class in deepinv.optim)": [[145, "deepinv.optim.FixedPoint", false]], "flatten() (deepinv.utils.tensorlist method)": [[259, "deepinv.utils.TensorList.flatten", false]], "flatten_coeffs() (deepinv.models.waveletdenoiser method)": [[137, "deepinv.models.WaveletDenoiser.flatten_coeffs", false]], "flickr2khr (class in deepinv.datasets)": [[72, "deepinv.datasets.Flickr2kHR", false]], "fmd (class in deepinv.datasets)": [[70, "deepinv.datasets.FMD", false]], "fmd.noisysampleidentifier (class in deepinv.datasets)": [[70, "deepinv.datasets.FMD.NoisySampleIdentifier", false]], "fname (deepinv.datasets.fastmrislicedataset.slicesamplefileidentifier attribute)": [[71, "deepinv.datasets.FastMRISliceDataset.SliceSampleFileIdentifier.fname", false]], "fname (deepinv.datasets.fmd.noisysampleidentifier attribute)": [[70, "deepinv.datasets.FMD.NoisySampleIdentifier.fname", false]], "fnejacobianspectralnorm (class in deepinv.loss)": [[82, "deepinv.loss.FNEJacobianSpectralNorm", false]], "forward() (deepinv.loss.adversarial.discriminatorloss method)": [[102, "deepinv.loss.adversarial.DiscriminatorLoss.forward", false]], "forward() (deepinv.loss.adversarial.generatorloss method)": [[104, "deepinv.loss.adversarial.GeneratorLoss.forward", false]], "forward() (deepinv.loss.adversarial.supadversarialdiscriminatorloss method)": [[105, "deepinv.loss.adversarial.SupAdversarialDiscriminatorLoss.forward", false]], "forward() (deepinv.loss.adversarial.supadversarialgeneratorloss method)": [[106, "deepinv.loss.adversarial.SupAdversarialGeneratorLoss.forward", false]], "forward() (deepinv.loss.adversarial.uairgeneratorloss method)": [[107, "deepinv.loss.adversarial.UAIRGeneratorLoss.forward", false]], "forward() (deepinv.loss.adversarial.unsupadversarialdiscriminatorloss method)": [[108, "deepinv.loss.adversarial.UnsupAdversarialDiscriminatorLoss.forward", false]], "forward() (deepinv.loss.adversarial.unsupadversarialgeneratorloss method)": [[109, "deepinv.loss.adversarial.UnsupAdversarialGeneratorLoss.forward", false]], "forward() (deepinv.loss.artifact2artifactloss method)": [[80, "deepinv.loss.Artifact2ArtifactLoss.forward", false]], "forward() (deepinv.loss.eiloss method)": [[81, "deepinv.loss.EILoss.forward", false]], "forward() (deepinv.loss.fnejacobianspectralnorm method)": [[82, "deepinv.loss.FNEJacobianSpectralNorm.forward", false]], "forward() (deepinv.loss.jacobianspectralnorm method)": [[83, "deepinv.loss.JacobianSpectralNorm.forward", false]], "forward() (deepinv.loss.loss method)": [[85, "deepinv.loss.Loss.forward", false]], "forward() (deepinv.loss.lpips method)": [[84, "deepinv.loss.LPIPS.forward", false]], "forward() (deepinv.loss.lpnorm method)": [[86, "deepinv.loss.LpNorm.forward", false]], "forward() (deepinv.loss.mcloss method)": [[87, "deepinv.loss.MCLoss.forward", false]], "forward() (deepinv.loss.moiloss method)": [[88, "deepinv.loss.MOILoss.forward", false]], "forward() (deepinv.loss.neighbor2neighbor method)": [[90, "deepinv.loss.Neighbor2Neighbor.forward", false]], "forward() (deepinv.loss.niqe method)": [[89, "deepinv.loss.NIQE.forward", false]], "forward() (deepinv.loss.psnr method)": [[91, "deepinv.loss.PSNR.forward", false]], "forward() (deepinv.loss.r2rloss method)": [[93, "deepinv.loss.R2RLoss.forward", false]], "forward() (deepinv.loss.scoreloss method)": [[95, "deepinv.loss.ScoreLoss.forward", false]], "forward() (deepinv.loss.splittingloss method)": [[96, "deepinv.loss.SplittingLoss.forward", false]], "forward() (deepinv.loss.ssim method)": [[94, "deepinv.loss.SSIM.forward", false]], "forward() (deepinv.loss.suploss method)": [[97, "deepinv.loss.SupLoss.forward", false]], "forward() (deepinv.loss.suregaussianloss method)": [[98, "deepinv.loss.SureGaussianLoss.forward", false]], "forward() (deepinv.loss.surepgloss method)": [[99, "deepinv.loss.SurePGLoss.forward", false]], "forward() (deepinv.loss.surepoissonloss method)": [[100, "deepinv.loss.SurePoissonLoss.forward", false]], "forward() (deepinv.loss.tvloss method)": [[101, "deepinv.loss.TVLoss.forward", false]], "forward() (deepinv.models.artifactremoval method)": [[110, "deepinv.models.ArtifactRemoval.forward", false]], "forward() (deepinv.models.autoencoder method)": [[111, "deepinv.models.AutoEncoder.forward", false]], "forward() (deepinv.models.bm3d method)": [[112, "deepinv.models.BM3D.forward", false]], "forward() (deepinv.models.convdecoder method)": [[114, "deepinv.models.ConvDecoder.forward", false]], "forward() (deepinv.models.csgmgenerator method)": [[113, "deepinv.models.CSGMGenerator.forward", false]], "forward() (deepinv.models.dcgandiscriminator method)": [[115, "deepinv.models.DCGANDiscriminator.forward", false]], "forward() (deepinv.models.dcgangenerator method)": [[116, "deepinv.models.DCGANGenerator.forward", false]], "forward() (deepinv.models.deepimageprior method)": [[118, "deepinv.models.DeepImagePrior.forward", false]], "forward() (deepinv.models.diffunet method)": [[119, "deepinv.models.DiffUNet.forward", false]], "forward() (deepinv.models.dncnn method)": [[120, "deepinv.models.DnCNN.forward", false]], "forward() (deepinv.models.drunet method)": [[117, "deepinv.models.DRUNet.forward", false]], "forward() (deepinv.models.eplldenoiser method)": [[121, "deepinv.models.EPLLDenoiser.forward", false]], "forward() (deepinv.models.equivariantdenoiser method)": [[123, "deepinv.models.EquivariantDenoiser.forward", false]], "forward() (deepinv.models.esrgandiscriminator method)": [[122, "deepinv.models.ESRGANDiscriminator.forward", false]], "forward() (deepinv.models.icnn method)": [[125, "deepinv.models.ICNN.forward", false]], "forward() (deepinv.models.medianfilter method)": [[126, "deepinv.models.MedianFilter.forward", false]], "forward() (deepinv.models.patchgandiscriminator method)": [[129, "deepinv.models.PatchGANDiscriminator.forward", false]], "forward() (deepinv.models.pdnet_dualblock method)": [[127, "deepinv.models.PDNet_DualBlock.forward", false]], "forward() (deepinv.models.pdnet_primalblock method)": [[128, "deepinv.models.PDNet_PrimalBlock.forward", false]], "forward() (deepinv.models.restormer method)": [[130, "deepinv.models.Restormer.forward", false]], "forward() (deepinv.models.scunet method)": [[131, "deepinv.models.SCUNet.forward", false]], "forward() (deepinv.models.swinir method)": [[132, "deepinv.models.SwinIR.forward", false]], "forward() (deepinv.models.tgvdenoiser method)": [[133, "deepinv.models.TGVDenoiser.forward", false]], "forward() (deepinv.models.timeagnosticnet method)": [[135, "deepinv.models.TimeAgnosticNet.forward", false]], "forward() (deepinv.models.tvdenoiser method)": [[134, "deepinv.models.TVDenoiser.forward", false]], "forward() (deepinv.models.unet method)": [[136, "deepinv.models.UNet.forward", false]], "forward() (deepinv.models.waveletdenoiser method)": [[137, "deepinv.models.WaveletDenoiser.forward", false]], "forward() (deepinv.models.waveletdictdenoiser method)": [[138, "deepinv.models.WaveletDictDenoiser.forward", false]], "forward() (deepinv.optim.baseoptim method)": [[141, "deepinv.optim.BaseOptim.forward", false]], "forward() (deepinv.optim.datafidelity method)": [[143, "deepinv.optim.DataFidelity.forward", false]], "forward() (deepinv.optim.epll method)": [[144, "deepinv.optim.EPLL.forward", false]], "forward() (deepinv.optim.fixedpoint method)": [[145, "deepinv.optim.FixedPoint.forward", false]], "forward() (deepinv.optim.optim_iterators.admmiteration method)": [[163, "deepinv.optim.optim_iterators.ADMMIteration.forward", false]], "forward() (deepinv.optim.optim_iterators.cpiteration method)": [[164, "deepinv.optim.optim_iterators.CPIteration.forward", false]], "forward() (deepinv.optim.optim_iterators.drsiteration method)": [[165, "deepinv.optim.optim_iterators.DRSIteration.forward", false]], "forward() (deepinv.optim.optim_iterators.fistaiteration method)": [[166, "deepinv.optim.optim_iterators.FISTAIteration.forward", false]], "forward() (deepinv.optim.optim_iterators.gditeration method)": [[167, "deepinv.optim.optim_iterators.GDIteration.forward", false]], "forward() (deepinv.optim.optim_iterators.smiteration method)": [[170, "deepinv.optim.optim_iterators.SMIteration.forward", false]], "forward() (deepinv.optim.optimiterator method)": [[151, "deepinv.optim.OptimIterator.forward", false]], "forward() (deepinv.optim.patchnr method)": [[152, "deepinv.optim.PatchNR.forward", false]], "forward() (deepinv.optim.prior method)": [[156, "deepinv.optim.Prior.forward", false]], "forward() (deepinv.optim.utils.gaussianmixturemodel method)": [[171, "deepinv.optim.utils.GaussianMixtureModel.forward", false]], "forward() (deepinv.physics.functional.iradon method)": [[208, "deepinv.physics.functional.IRadon.forward", false]], "forward() (deepinv.physics.functional.radon method)": [[209, "deepinv.physics.functional.Radon.forward", false]], "forward() (deepinv.physics.gammanoise method)": [[183, "deepinv.physics.GammaNoise.forward", false]], "forward() (deepinv.physics.gaussiannoise method)": [[184, "deepinv.physics.GaussianNoise.forward", false]], "forward() (deepinv.physics.logpoissonnoise method)": [[188, "deepinv.physics.LogPoissonNoise.forward", false]], "forward() (deepinv.physics.pansharpen method)": [[190, "deepinv.physics.Pansharpen.forward", false]], "forward() (deepinv.physics.phaseretrieval method)": [[191, "deepinv.physics.PhaseRetrieval.forward", false]], "forward() (deepinv.physics.physics method)": [[192, "deepinv.physics.Physics.forward", false]], "forward() (deepinv.physics.poissongaussiannoise method)": [[193, "deepinv.physics.PoissonGaussianNoise.forward", false]], "forward() (deepinv.physics.poissonnoise method)": [[194, "deepinv.physics.PoissonNoise.forward", false]], "forward() (deepinv.physics.uniformgaussiannoise method)": [[201, "deepinv.physics.UniformGaussianNoise.forward", false]], "forward() (deepinv.physics.uniformnoise method)": [[202, "deepinv.physics.UniformNoise.forward", false]], "forward() (deepinv.sampling.ddrm method)": [[236, "deepinv.sampling.DDRM.forward", false]], "forward() (deepinv.sampling.diffpir method)": [[238, "deepinv.sampling.DiffPIR.forward", false]], "forward() (deepinv.sampling.dps method)": [[237, "deepinv.sampling.DPS.forward", false]], "forward() (deepinv.sampling.montecarlo method)": [[240, "deepinv.sampling.MonteCarlo.forward", false]], "forward() (deepinv.transform.homography method)": [[246, "deepinv.transform.Homography.forward", false]], "forward() (deepinv.transform.projective.affine method)": [[251, "deepinv.transform.projective.Affine.forward", false]], "forward() (deepinv.transform.projective.euclidean method)": [[252, "deepinv.transform.projective.Euclidean.forward", false]], "forward() (deepinv.transform.projective.pantiltrotate method)": [[253, "deepinv.transform.projective.PanTiltRotate.forward", false]], "forward() (deepinv.transform.projective.similarity method)": [[254, "deepinv.transform.projective.Similarity.forward", false]], "forward() (deepinv.transform.rotate method)": [[247, "deepinv.transform.Rotate.forward", false]], "forward() (deepinv.transform.scale method)": [[248, "deepinv.transform.Scale.forward", false]], "forward() (deepinv.transform.shift method)": [[249, "deepinv.transform.Shift.forward", false]], "forward() (deepinv.transform.transform method)": [[250, "deepinv.transform.Transform.forward", false]], "forward() (deepinv.unfolded.basedeq method)": [[255, "deepinv.unfolded.BaseDEQ.forward", false]], "forward_denoise() (deepinv.models.diffunet method)": [[119, "deepinv.models.DiffUNet.forward_denoise", false]], "forward_diffusion() (deepinv.models.diffunet method)": [[119, "deepinv.models.DiffUNet.forward_diffusion", false]], "forward_restormer() (deepinv.models.restormer method)": [[130, "deepinv.models.Restormer.forward_restormer", false]], "fov (deepinv.datasets.fmd.noisysampleidentifier attribute)": [[70, "deepinv.datasets.FMD.NoisySampleIdentifier.fov", false]], "g() (deepinv.optim.l1prior method)": [[148, "deepinv.optim.L1Prior.g", false]], "g() (deepinv.optim.patchprior method)": [[153, "deepinv.optim.PatchPrior.g", false]], "g() (deepinv.optim.prior method)": [[156, "deepinv.optim.Prior.g", false]], "g() (deepinv.optim.tikhonov method)": [[160, "deepinv.optim.Tikhonov.g", false]], "g() (deepinv.optim.tvprior method)": [[159, "deepinv.optim.TVPrior.g", false]], "g() (deepinv.optim.waveletprior method)": [[161, "deepinv.optim.WaveletPrior.g", false]], "gammanoise (class in deepinv.physics)": [[183, "deepinv.physics.GammaNoise", false]], "gaussian_blur() (in module deepinv.physics.blur)": [[206, "deepinv.physics.blur.gaussian_blur", false]], "gaussianmaskgenerator (class in deepinv.physics.generator)": [[227, "deepinv.physics.generator.GaussianMaskGenerator", false]], "gaussianmixturemodel (class in deepinv.optim.utils)": [[171, "deepinv.optim.utils.GaussianMixtureModel", false]], "gaussiannoise (class in deepinv.physics)": [[184, "deepinv.physics.GaussianNoise", false]], "gaussiansplittingmaskgenerator (class in deepinv.physics.generator)": [[228, "deepinv.physics.generator.GaussianSplittingMaskGenerator", false]], "gditeration (class in deepinv.optim.optim_iterators)": [[167, "deepinv.optim.optim_iterators.GDIteration", false]], "generate_coeff() (deepinv.physics.generator.diffractionblurgenerator method)": [[224, "deepinv.physics.generator.DiffractionBlurGenerator.generate_coeff", false]], "generate_dataset (class in deepinv.datasets)": [[79, "deepinv.datasets.generate_dataset", false]], "generatorloss (class in deepinv.loss.adversarial)": [[104, "deepinv.loss.adversarial.GeneratorLoss", false]], "generatormixture (class in deepinv.physics.generator)": [[229, "deepinv.physics.generator.GeneratorMixture", false]], "get_alpha_beta() (deepinv.sampling.diffpir method)": [[238, "deepinv.sampling.DiffPIR.get_alpha_beta", false]], "get_alpha_prod() (deepinv.models.diffunet method)": [[119, "deepinv.models.DiffUNet.get_alpha_prod", false]], "get_alpha_prod() (deepinv.sampling.diffpir method)": [[238, "deepinv.sampling.DiffPIR.get_alpha_prod", false]], "get_chain() (deepinv.sampling.montecarlo method)": [[240, "deepinv.sampling.MonteCarlo.get_chain", false]], "get_cov() (deepinv.optim.utils.gaussianmixturemodel method)": [[171, "deepinv.optim.utils.GaussianMixtureModel.get_cov", false]], "get_cov_inv_reg() (deepinv.optim.utils.gaussianmixturemodel method)": [[171, "deepinv.optim.utils.GaussianMixtureModel.get_cov_inv_reg", false]], "get_freer_gpu() (in module deepinv.utils)": [[261, "deepinv.utils.get_freer_gpu", false]], "get_noise_schedule() (deepinv.sampling.diffpir method)": [[238, "deepinv.sampling.DiffPIR.get_noise_schedule", false]], "get_pdf() (deepinv.physics.generator.gaussianmaskgenerator method)": [[227, "deepinv.physics.generator.GaussianMaskGenerator.get_pdf", false]], "get_pdf() (deepinv.physics.generator.randommaskgenerator method)": [[234, "deepinv.physics.generator.RandomMaskGenerator.get_pdf", false]], "get_samples() (deepinv.trainer method)": [[67, "deepinv.Trainer.get_samples", false]], "get_samples_offline() (deepinv.trainer method)": [[67, "deepinv.Trainer.get_samples_offline", false]], "get_samples_online() (deepinv.trainer method)": [[67, "deepinv.Trainer.get_samples_online", false]], "get_weights() (deepinv.optim.utils.gaussianmixturemodel method)": [[171, "deepinv.optim.utils.GaussianMixtureModel.get_weights", false]], "grad() (deepinv.optim.datafidelity method)": [[143, "deepinv.optim.DataFidelity.grad", false]], "grad() (deepinv.optim.prior method)": [[156, "deepinv.optim.Prior.grad", false]], "grad() (deepinv.optim.red method)": [[157, "deepinv.optim.RED.grad", false]], "grad() (deepinv.optim.scoreprior method)": [[158, "deepinv.optim.ScorePrior.grad", false]], "grad() (deepinv.optim.tikhonov method)": [[160, "deepinv.optim.Tikhonov.grad", false]], "grad_d() (deepinv.optim.amplitudeloss method)": [[140, "deepinv.optim.AmplitudeLoss.grad_d", false]], "grad_d() (deepinv.optim.datafidelity method)": [[143, "deepinv.optim.DataFidelity.grad_d", false]], "grad_d() (deepinv.optim.l1 method)": [[147, "deepinv.optim.L1.grad_d", false]], "grad_d() (deepinv.optim.l2 method)": [[149, "deepinv.optim.L2.grad_d", false]], "grad_d() (deepinv.optim.poissonlikelihood method)": [[155, "deepinv.optim.PoissonLikelihood.grad_d", false]], "gradient_descent (class in deepinv.optim.utils)": [[173, "deepinv.optim.utils.gradient_descent", false]], "gsdrunet (class in deepinv.models)": [[124, "deepinv.models.GSDRUNet", false]], "hard_threshold_topk() (deepinv.models.waveletdenoiser method)": [[137, "deepinv.models.WaveletDenoiser.hard_threshold_topk", false]], "haze (class in deepinv.physics)": [[185, "deepinv.physics.Haze", false]], "hdf5dataset (class in deepinv.datasets)": [[73, "deepinv.datasets.HDF5Dataset", false]], "histogram (class in deepinv.physics.functional)": [[216, "deepinv.physics.functional.histogram", false]], "histogramdd (class in deepinv.physics.functional)": [[217, "deepinv.physics.functional.histogramdd", false]], "homography (class in deepinv.transform)": [[246, "deepinv.transform.Homography", false]], "hqsiteration (class in deepinv.optim.optim_iterators)": [[168, "deepinv.optim.optim_iterators.HQSIteration", false]], "icnn (class in deepinv.models)": [[125, "deepinv.models.ICNN", false]], "img_type (deepinv.datasets.fmd.noisysampleidentifier attribute)": [[70, "deepinv.datasets.FMD.NoisySampleIdentifier.img_type", false]], "indicatorl2 (class in deepinv.optim)": [[146, "deepinv.optim.IndicatorL2", false]], "init_anderson_acceleration() (deepinv.optim.fixedpoint method)": [[145, "deepinv.optim.FixedPoint.init_anderson_acceleration", false]], "init_iterate_fn() (deepinv.optim.baseoptim method)": [[141, "deepinv.optim.BaseOptim.init_iterate_fn", false]], "init_metrics_fn() (deepinv.optim.baseoptim method)": [[141, "deepinv.optim.BaseOptim.init_metrics_fn", false]], "inpainting (class in deepinv.physics)": [[186, "deepinv.physics.Inpainting", false]], "iradon (class in deepinv.physics.functional)": [[208, "deepinv.physics.functional.IRadon", false]], "is_standard_deblurring_network() (deepinv.models.restormer method)": [[130, "deepinv.models.Restormer.is_standard_deblurring_network", false]], "is_standard_denoising_network() (deepinv.models.restormer method)": [[130, "deepinv.models.Restormer.is_standard_denoising_network", false]], "is_standard_deraining_network() (deepinv.models.restormer method)": [[130, "deepinv.models.Restormer.is_standard_deraining_network", false]], "iwt() (deepinv.models.waveletdenoiser method)": [[137, "deepinv.models.WaveletDenoiser.iwt", false]], "jacobianspectralnorm (class in deepinv.loss)": [[83, "deepinv.loss.JacobianSpectralNorm", false]], "l1 (class in deepinv.optim)": [[147, "deepinv.optim.L1", false]], "l1prior (class in deepinv.optim)": [[148, "deepinv.optim.L1Prior", false]], "l2 (class in deepinv.optim)": [[149, "deepinv.optim.L2", false]], "lidcidrislicedataset (class in deepinv.datasets)": [[74, "deepinv.datasets.LidcIdriSliceDataset", false]], "lidcidrislicedataset.slicesampleidentifier (class in deepinv.datasets)": [[74, "deepinv.datasets.LidcIdriSliceDataset.SliceSampleIdentifier", false]], "linearphysics (class in deepinv.physics)": [[187, "deepinv.physics.LinearPhysics", false]], "load_image() (in module deepinv.utils)": [[262, "deepinv.utils.load_image", false]], "load_state_dict() (deepinv.optim.utils.gaussianmixturemodel method)": [[171, "deepinv.optim.utils.GaussianMixtureModel.load_state_dict", false]], "load_url_image() (in module deepinv.utils)": [[263, "deepinv.utils.load_url_image", false]], "log_metrics_wandb() (deepinv.trainer method)": [[67, "deepinv.Trainer.log_metrics_wandb", false]], "logpoissonlikelihood (class in deepinv.optim)": [[150, "deepinv.optim.LogPoissonLikelihood", false]], "logpoissonnoise (class in deepinv.physics)": [[188, "deepinv.physics.LogPoissonNoise", false]], "loss (class in deepinv.loss)": [[85, "deepinv.loss.Loss", false]], "lpips (class in deepinv.loss)": [[84, "deepinv.loss.LPIPS", false]], "lpnorm (class in deepinv.loss)": [[86, "deepinv.loss.LpNorm", false]], "lsdirhr (class in deepinv.datasets)": [[75, "deepinv.datasets.LsdirHR", false]], "matern_kernel() (deepinv.physics.generator.motionblurgenerator method)": [[230, "deepinv.physics.generator.MotionBlurGenerator.matern_kernel", false]], "mcloss (class in deepinv.loss)": [[87, "deepinv.loss.MCLoss", false]], "mean_has_converged() (deepinv.sampling.montecarlo method)": [[240, "deepinv.sampling.MonteCarlo.mean_has_converged", false]], "medianfilter (class in deepinv.models)": [[126, "deepinv.models.MedianFilter", false]], "model_inference() (deepinv.trainer method)": [[67, "deepinv.Trainer.model_inference", false]], "moiloss (class in deepinv.loss)": [[88, "deepinv.loss.MOILoss", false]], "montecarlo (class in deepinv.sampling)": [[240, "deepinv.sampling.MonteCarlo", false]], "motionblurgenerator (class in deepinv.physics.generator)": [[230, "deepinv.physics.generator.MotionBlurGenerator", false]], "mri (class in deepinv.physics)": [[189, "deepinv.physics.MRI", false]], "multiplier (class in deepinv.physics.functional)": [[218, "deepinv.physics.functional.multiplier", false]], "multiplier_adjoint (class in deepinv.physics.functional)": [[219, "deepinv.physics.functional.multiplier_adjoint", false]], "nabla() (deepinv.models.tgvdenoiser static method)": [[133, "deepinv.models.TGVDenoiser.nabla", false]], "nabla() (deepinv.models.tvdenoiser static method)": [[134, "deepinv.models.TVDenoiser.nabla", false]], "nabla() (deepinv.optim.tvprior method)": [[159, "deepinv.optim.TVPrior.nabla", false]], "nabla_adjoint() (deepinv.models.tgvdenoiser static method)": [[133, "deepinv.models.TGVDenoiser.nabla_adjoint", false]], "nabla_adjoint() (deepinv.models.tvdenoiser static method)": [[134, "deepinv.models.TVDenoiser.nabla_adjoint", false]], "nabla_adjoint() (deepinv.optim.tvprior method)": [[159, "deepinv.optim.TVPrior.nabla_adjoint", false]], "negative_log_likelihood() (deepinv.optim.epll method)": [[144, "deepinv.optim.EPLL.negative_log_likelihood", false]], "neighbor2neighbor (class in deepinv.loss)": [[90, "deepinv.loss.Neighbor2Neighbor", false]], "niqe (class in deepinv.loss)": [[89, "deepinv.loss.NIQE", false]], "no_learning_inference() (deepinv.trainer method)": [[67, "deepinv.Trainer.no_learning_inference", false]], "noise() (deepinv.physics.dynamicmri method)": [[182, "deepinv.physics.DynamicMRI.noise", false]], "noise() (deepinv.physics.inpainting method)": [[186, "deepinv.physics.Inpainting.noise", false]], "noise() (deepinv.physics.physics method)": [[192, "deepinv.physics.Physics.noise", false]], "noise_dirname (deepinv.datasets.fmd.noisysampleidentifier attribute)": [[70, "deepinv.datasets.FMD.NoisySampleIdentifier.noise_dirname", false]], "ones_like() (in module deepinv.utils)": [[264, "deepinv.utils.ones_like", false]], "optim_builder() (in module deepinv.optim)": [[162, "deepinv.optim.optim_builder", false]], "optimiterator (class in deepinv.optim)": [[151, "deepinv.optim.OptimIterator", false]], "optimize_z() (deepinv.models.csgmgenerator method)": [[113, "deepinv.models.CSGMGenerator.optimize_z", false]], "pad_input() (deepinv.models.waveletdenoiser method)": [[137, "deepinv.models.WaveletDenoiser.pad_input", false]], "pansharpen (class in deepinv.physics)": [[190, "deepinv.physics.Pansharpen", false]], "pantiltrotate (class in deepinv.transform.projective)": [[253, "deepinv.transform.projective.PanTiltRotate", false]], "patchdataset (class in deepinv.datasets)": [[76, "deepinv.datasets.PatchDataset", false]], "patchgandiscriminator (class in deepinv.models)": [[129, "deepinv.models.PatchGANDiscriminator", false]], "patchnr (class in deepinv.optim)": [[152, "deepinv.optim.PatchNR", false]], "patchprior (class in deepinv.optim)": [[153, "deepinv.optim.PatchPrior", false]], "patient_id (deepinv.datasets.lidcidrislicedataset.slicesampleidentifier attribute)": [[74, "deepinv.datasets.LidcIdriSliceDataset.SliceSampleIdentifier.patient_id", false]], "pdnet_dualblock (class in deepinv.models)": [[127, "deepinv.models.PDNet_DualBlock", false]], "pdnet_primalblock (class in deepinv.models)": [[128, "deepinv.models.PDNet_PrimalBlock", false]], "pgditeration (class in deepinv.optim.optim_iterators)": [[169, "deepinv.optim.optim_iterators.PGDIteration", false]], "phase2phaseloss (class in deepinv.loss)": [[92, "deepinv.loss.Phase2PhaseLoss", false]], "phase2phasesplittingmaskgenerator (class in deepinv.physics.generator)": [[231, "deepinv.physics.generator.Phase2PhaseSplittingMaskGenerator", false]], "phaseretrieval (class in deepinv.physics)": [[191, "deepinv.physics.PhaseRetrieval", false]], "physics (class in deepinv.physics)": [[192, "deepinv.physics.Physics", false]], "physicsgenerator (class in deepinv.physics.generator)": [[232, "deepinv.physics.generator.PhysicsGenerator", false]], "plot() (deepinv.trainer method)": [[67, "deepinv.Trainer.plot", false]], "plot() (in module deepinv.utils)": [[265, "deepinv.utils.plot", false]], "plot_curves() (in module deepinv.utils)": [[266, "deepinv.utils.plot_curves", false]], "plot_inset() (in module deepinv.utils)": [[267, "deepinv.utils.plot_inset", false]], "plot_ortho3d() (in module deepinv.utils)": [[268, "deepinv.utils.plot_ortho3D", false]], "plot_parameters() (in module deepinv.utils)": [[269, "deepinv.utils.plot_parameters", false]], "plot_videos() (in module deepinv.utils)": [[270, "deepinv.utils.plot_videos", false]], "pnp (class in deepinv.optim)": [[154, "deepinv.optim.PnP", false]], "poissongaussiannoise (class in deepinv.physics)": [[193, "deepinv.physics.PoissonGaussianNoise", false]], "poissonlikelihood (class in deepinv.optim)": [[155, "deepinv.optim.PoissonLikelihood", false]], "poissonnoise (class in deepinv.physics)": [[194, "deepinv.physics.PoissonNoise", false]], "prior (class in deepinv.optim)": [[156, "deepinv.optim.Prior", false]], "product_convolution2d (class in deepinv.physics.functional)": [[220, "deepinv.physics.functional.product_convolution2d", false]], "productconvolutionblurgenerator (class in deepinv.physics.generator)": [[233, "deepinv.physics.generator.ProductConvolutionBlurGenerator", false]], "prox() (deepinv.optim.datafidelity method)": [[143, "deepinv.optim.DataFidelity.prox", false]], "prox() (deepinv.optim.indicatorl2 method)": [[146, "deepinv.optim.IndicatorL2.prox", false]], "prox() (deepinv.optim.l1 method)": [[147, "deepinv.optim.L1.prox", false]], "prox() (deepinv.optim.l1prior method)": [[148, "deepinv.optim.L1Prior.prox", false]], "prox() (deepinv.optim.l2 method)": [[149, "deepinv.optim.L2.prox", false]], "prox() (deepinv.optim.pnp method)": [[154, "deepinv.optim.PnP.prox", false]], "prox() (deepinv.optim.prior method)": [[156, "deepinv.optim.Prior.prox", false]], "prox() (deepinv.optim.tikhonov method)": [[160, "deepinv.optim.Tikhonov.prox", false]], "prox() (deepinv.optim.tvprior method)": [[159, "deepinv.optim.TVPrior.prox", false]], "prox() (deepinv.optim.waveletprior method)": [[161, "deepinv.optim.WaveletPrior.prox", false]], "prox_conjugate() (deepinv.optim.datafidelity method)": [[143, "deepinv.optim.DataFidelity.prox_conjugate", false]], "prox_conjugate() (deepinv.optim.prior method)": [[156, "deepinv.optim.Prior.prox_conjugate", false]], "prox_d() (deepinv.optim.datafidelity method)": [[143, "deepinv.optim.DataFidelity.prox_d", false]], "prox_d() (deepinv.optim.indicatorl2 method)": [[146, "deepinv.optim.IndicatorL2.prox_d", false]], "prox_d() (deepinv.optim.l1 method)": [[147, "deepinv.optim.L1.prox_d", false]], "prox_d() (deepinv.optim.l2 method)": [[149, "deepinv.optim.L2.prox_d", false]], "prox_d() (deepinv.optim.poissonlikelihood method)": [[155, "deepinv.optim.PoissonLikelihood.prox_d", false]], "prox_d_conjugate() (deepinv.optim.datafidelity method)": [[143, "deepinv.optim.DataFidelity.prox_d_conjugate", false]], "prox_l0() (deepinv.models.waveletdenoiser method)": [[137, "deepinv.models.WaveletDenoiser.prox_l0", false]], "prox_l1() (deepinv.models.waveletdenoiser method)": [[137, "deepinv.models.WaveletDenoiser.prox_l1", false]], "prox_l2() (deepinv.physics.decomposablephysics method)": [[178, "deepinv.physics.DecomposablePhysics.prox_l2", false]], "prox_l2() (deepinv.physics.downsampling method)": [[181, "deepinv.physics.Downsampling.prox_l2", false]], "prox_l2() (deepinv.physics.linearphysics method)": [[187, "deepinv.physics.LinearPhysics.prox_l2", false]], "prox_tau_fx() (deepinv.models.tvdenoiser method)": [[134, "deepinv.models.TVDenoiser.prox_tau_fx", false]], "psi() (deepinv.models.waveletdenoiser static method)": [[137, "deepinv.models.WaveletDenoiser.psi", false]], "psi() (deepinv.models.waveletdictdenoiser method)": [[138, "deepinv.models.WaveletDictDenoiser.psi", false]], "psi() (deepinv.optim.waveletprior method)": [[161, "deepinv.optim.WaveletPrior.psi", false]], "psnr (class in deepinv.loss)": [[91, "deepinv.loss.PSNR", false]], "r2rloss (class in deepinv.loss)": [[93, "deepinv.loss.R2RLoss", false]], "radiointerferometry (class in deepinv.physics)": [[195, "deepinv.physics.RadioInterferometry", false]], "radon (class in deepinv.physics.functional)": [[209, "deepinv.physics.functional.Radon", false]], "rand_like() (in module deepinv.utils)": [[271, "deepinv.utils.rand_like", false]], "randn_like() (in module deepinv.utils)": [[272, "deepinv.utils.randn_like", false]], "random_latent() (deepinv.models.csgmgenerator method)": [[113, "deepinv.models.CSGMGenerator.random_latent", false]], "randommaskgenerator (class in deepinv.physics.generator)": [[234, "deepinv.physics.generator.RandomMaskGenerator", false]], "randomphaseretrieval (class in deepinv.physics)": [[196, "deepinv.physics.RandomPhaseRetrieval", false]], "red (class in deepinv.optim)": [[157, "deepinv.optim.RED", false]], "relaxation_step() (deepinv.optim.optimiterator method)": [[151, "deepinv.optim.OptimIterator.relaxation_step", false]], "reset() (deepinv.sampling.montecarlo method)": [[240, "deepinv.sampling.MonteCarlo.reset", false]], "reset_metrics() (deepinv.trainer method)": [[67, "deepinv.Trainer.reset_metrics", false]], "reset_rng() (deepinv.physics.generator.physicsgenerator method)": [[232, "deepinv.physics.generator.PhysicsGenerator.reset_rng", false]], "reshape() (deepinv.utils.tensorlist method)": [[259, "deepinv.utils.TensorList.reshape", false]], "reshape_ths() (deepinv.models.waveletdenoiser method)": [[137, "deepinv.models.WaveletDenoiser.reshape_ths", false]], "restormer (class in deepinv.models)": [[130, "deepinv.models.Restormer", false]], "rng_manual_seed() (deepinv.physics.generator.physicsgenerator method)": [[232, "deepinv.physics.generator.PhysicsGenerator.rng_manual_seed", false]], "rotate (class in deepinv.transform)": [[247, "deepinv.transform.Rotate", false]], "sample_mask() (deepinv.physics.generator.basemaskgenerator method)": [[222, "deepinv.physics.generator.BaseMaskGenerator.sample_mask", false]], "sample_mask() (deepinv.physics.generator.equispacedmaskgenerator method)": [[226, "deepinv.physics.generator.EquispacedMaskGenerator.sample_mask", false]], "sample_mask() (deepinv.physics.generator.randommaskgenerator method)": [[234, "deepinv.physics.generator.RandomMaskGenerator.sample_mask", false]], "save_model() (deepinv.trainer method)": [[67, "deepinv.Trainer.save_model", false]], "save_model() (deepinv.training.adversarialtrainer method)": [[245, "deepinv.training.AdversarialTrainer.save_model", false]], "scale (class in deepinv.transform)": [[248, "deepinv.transform.Scale", false]], "scan_folder (deepinv.datasets.lidcidrislicedataset.slicesampleidentifier attribute)": [[74, "deepinv.datasets.LidcIdriSliceDataset.SliceSampleIdentifier.scan_folder", false]], "scoreloss (class in deepinv.loss)": [[95, "deepinv.loss.ScoreLoss", false]], "scoreprior (class in deepinv.optim)": [[158, "deepinv.optim.ScorePrior", false]], "scunet (class in deepinv.models)": [[131, "deepinv.models.SCUNet", false]], "sensor() (deepinv.physics.physics method)": [[192, "deepinv.physics.Physics.sensor", false]], "set14hr (class in deepinv.datasets)": [[77, "deepinv.datasets.Set14HR", false]], "set_cov() (deepinv.optim.utils.gaussianmixturemodel method)": [[171, "deepinv.optim.utils.GaussianMixtureModel.set_cov", false]], "set_cov_reg() (deepinv.optim.utils.gaussianmixturemodel method)": [[171, "deepinv.optim.utils.GaussianMixtureModel.set_cov_reg", false]], "set_weights() (deepinv.optim.utils.gaussianmixturemodel method)": [[171, "deepinv.optim.utils.GaussianMixtureModel.set_weights", false]], "setup_train() (deepinv.trainer method)": [[67, "deepinv.Trainer.setup_train", false]], "setup_train() (deepinv.training.adversarialtrainer method)": [[245, "deepinv.training.AdversarialTrainer.setup_train", false]], "shift (class in deepinv.transform)": [[249, "deepinv.transform.Shift", false]], "sigmagenerator (class in deepinv.physics.generator)": [[235, "deepinv.physics.generator.SigmaGenerator", false]], "similarity (class in deepinv.transform.projective)": [[254, "deepinv.transform.projective.Similarity", false]], "sinc_filter() (in module deepinv.physics.blur)": [[207, "deepinv.physics.blur.sinc_filter", false]], "singlephotonlidar (class in deepinv.physics)": [[197, "deepinv.physics.SinglePhotonLidar", false]], "singlepixelcamera (class in deepinv.physics)": [[198, "deepinv.physics.SinglePixelCamera", false]], "skrock (class in deepinv.sampling)": [[241, "deepinv.sampling.SKRock", false]], "slice_fname (deepinv.datasets.lidcidrislicedataset.slicesampleidentifier attribute)": [[74, "deepinv.datasets.LidcIdriSliceDataset.SliceSampleIdentifier.slice_fname", false]], "slice_ind (deepinv.datasets.fastmrislicedataset.slicesamplefileidentifier attribute)": [[71, "deepinv.datasets.FastMRISliceDataset.SliceSampleFileIdentifier.slice_ind", false]], "smiteration (class in deepinv.optim.optim_iterators)": [[170, "deepinv.optim.optim_iterators.SMIteration", false]], "spacevaryingblur (class in deepinv.physics)": [[199, "deepinv.physics.SpaceVaryingBlur", false]], "split() (deepinv.loss.phase2phaseloss static method)": [[92, "deepinv.loss.Phase2PhaseLoss.split", false]], "split() (deepinv.loss.splittingloss static method)": [[96, "deepinv.loss.SplittingLoss.split", false]], "splittingloss (class in deepinv.loss)": [[96, "deepinv.loss.SplittingLoss", false]], "ssim (class in deepinv.loss)": [[94, "deepinv.loss.SSIM", false]], "step() (deepinv.physics.generator.basemaskgenerator method)": [[222, "deepinv.physics.generator.BaseMaskGenerator.step", false]], "step() (deepinv.physics.generator.bernoullisplittingmaskgenerator method)": [[223, "deepinv.physics.generator.BernoulliSplittingMaskGenerator.step", false]], "step() (deepinv.physics.generator.diffractionblurgenerator method)": [[224, "deepinv.physics.generator.DiffractionBlurGenerator.step", false]], "step() (deepinv.physics.generator.diffractionblurgenerator3d method)": [[225, "deepinv.physics.generator.DiffractionBlurGenerator3D.step", false]], "step() (deepinv.physics.generator.generatormixture method)": [[229, "deepinv.physics.generator.GeneratorMixture.step", false]], "step() (deepinv.physics.generator.motionblurgenerator method)": [[230, "deepinv.physics.generator.MotionBlurGenerator.step", false]], "step() (deepinv.physics.generator.physicsgenerator method)": [[232, "deepinv.physics.generator.PhysicsGenerator.step", false]], "step() (deepinv.physics.generator.productconvolutionblurgenerator method)": [[233, "deepinv.physics.generator.ProductConvolutionBlurGenerator.step", false]], "step() (deepinv.physics.generator.sigmagenerator method)": [[235, "deepinv.physics.generator.SigmaGenerator.step", false]], "step() (deepinv.trainer method)": [[67, "deepinv.Trainer.step", false]], "sum() (deepinv.utils.tensorlist method)": [[259, "deepinv.utils.TensorList.sum", false]], "supadversarialdiscriminatorloss (class in deepinv.loss.adversarial)": [[105, "deepinv.loss.adversarial.SupAdversarialDiscriminatorLoss", false]], "supadversarialgeneratorloss (class in deepinv.loss.adversarial)": [[106, "deepinv.loss.adversarial.SupAdversarialGeneratorLoss", false]], "suploss (class in deepinv.loss)": [[97, "deepinv.loss.SupLoss", false]], "suregaussianloss (class in deepinv.loss)": [[98, "deepinv.loss.SureGaussianLoss", false]], "surepgloss (class in deepinv.loss)": [[99, "deepinv.loss.SurePGLoss", false]], "surepoissonloss (class in deepinv.loss)": [[100, "deepinv.loss.SurePoissonLoss", false]], "swinir (class in deepinv.models)": [[132, "deepinv.models.SwinIR", false]], "tensorlist (class in deepinv.utils)": [[259, "deepinv.utils.TensorList", false]], "test() (deepinv.trainer method)": [[67, "deepinv.Trainer.test", false]], "test() (in module deepinv)": [[243, "deepinv.test", false]], "tgvdenoiser (class in deepinv.models)": [[133, "deepinv.models.TGVDenoiser", false]], "threshold_3d() (deepinv.models.waveletdenoiser method)": [[137, "deepinv.models.WaveletDenoiser.threshold_3D", false]], "threshold_nd() (deepinv.models.waveletdenoiser method)": [[137, "deepinv.models.WaveletDenoiser.threshold_ND", false]], "thresold_2d() (deepinv.models.waveletdenoiser method)": [[137, "deepinv.models.WaveletDenoiser.thresold_2D", false]], "thresold_func() (deepinv.models.waveletdenoiser method)": [[137, "deepinv.models.WaveletDenoiser.thresold_func", false]], "tikhonov (class in deepinv.optim)": [[160, "deepinv.optim.Tikhonov", false]], "timeagnosticnet (class in deepinv.models)": [[135, "deepinv.models.TimeAgnosticNet", false]], "to_complex_denoiser (class in deepinv.models.complex)": [[139, "deepinv.models.complex.to_complex_denoiser", false]], "to_static_mri() (deepinv.physics.dynamicmri method)": [[182, "deepinv.physics.DynamicMRI.to_static_mri", false]], "tomography (class in deepinv.physics)": [[200, "deepinv.physics.Tomography", false]], "train() (deepinv.trainer method)": [[67, "deepinv.Trainer.train", false]], "train() (in module deepinv)": [[244, "deepinv.train", false]], "trainer (class in deepinv)": [[67, "deepinv.Trainer", false]], "transform (class in deepinv.transform)": [[250, "deepinv.transform.Transform", false]], "tvdenoiser (class in deepinv.models)": [[134, "deepinv.models.TVDenoiser", false]], "tvloss (class in deepinv.loss)": [[101, "deepinv.loss.TVLoss", false]], "tvprior (class in deepinv.optim)": [[159, "deepinv.optim.TVPrior", false]], "uairgeneratorloss (class in deepinv.loss.adversarial)": [[107, "deepinv.loss.adversarial.UAIRGeneratorLoss", false]], "ula (class in deepinv.sampling)": [[242, "deepinv.sampling.ULA", false]], "unet (class in deepinv.models)": [[136, "deepinv.models.UNet", false]], "unfolded_builder() (in module deepinv.unfolded)": [[258, "deepinv.unfolded.unfolded_builder", false]], "uniformgaussiannoise (class in deepinv.physics)": [[201, "deepinv.physics.UniformGaussianNoise", false]], "uniformnoise (class in deepinv.physics)": [[202, "deepinv.physics.UniformNoise", false]], "unsupadversarialdiscriminatorloss (class in deepinv.loss.adversarial)": [[108, "deepinv.loss.adversarial.UnsupAdversarialDiscriminatorLoss", false]], "unsupadversarialgeneratorloss (class in deepinv.loss.adversarial)": [[109, "deepinv.loss.adversarial.UnsupAdversarialGeneratorLoss", false]], "update() (deepinv.physics.physics method)": [[192, "deepinv.physics.Physics.update", false]], "update_data_fidelity_fn() (deepinv.optim.baseoptim method)": [[141, "deepinv.optim.BaseOptim.update_data_fidelity_fn", false]], "update_metrics_fn() (deepinv.optim.baseoptim method)": [[141, "deepinv.optim.BaseOptim.update_metrics_fn", false]], "update_parameters() (deepinv.physics.blur method)": [[174, "deepinv.physics.Blur.update_parameters", false]], "update_parameters() (deepinv.physics.blurfft method)": [[175, "deepinv.physics.BlurFFT.update_parameters", false]], "update_parameters() (deepinv.physics.decomposablephysics method)": [[178, "deepinv.physics.DecomposablePhysics.update_parameters", false]], "update_parameters() (deepinv.physics.gammanoise method)": [[183, "deepinv.physics.GammaNoise.update_parameters", false]], "update_parameters() (deepinv.physics.gaussiannoise method)": [[184, "deepinv.physics.GaussianNoise.update_parameters", false]], "update_parameters() (deepinv.physics.logpoissonnoise method)": [[188, "deepinv.physics.LogPoissonNoise.update_parameters", false]], "update_parameters() (deepinv.physics.mri method)": [[189, "deepinv.physics.MRI.update_parameters", false]], "update_parameters() (deepinv.physics.poissongaussiannoise method)": [[193, "deepinv.physics.PoissonGaussianNoise.update_parameters", false]], "update_parameters() (deepinv.physics.poissonnoise method)": [[194, "deepinv.physics.PoissonNoise.update_parameters", false]], "update_parameters() (deepinv.physics.spacevaryingblur method)": [[199, "deepinv.physics.SpaceVaryingBlur.update_parameters", false]], "update_parameters() (deepinv.physics.uniformnoise method)": [[202, "deepinv.physics.UniformNoise.update_parameters", false]], "update_params_fn() (deepinv.optim.baseoptim method)": [[141, "deepinv.optim.BaseOptim.update_params_fn", false]], "update_prior_fn() (deepinv.optim.baseoptim method)": [[141, "deepinv.optim.BaseOptim.update_prior_fn", false]], "urban100hr (class in deepinv.datasets)": [[78, "deepinv.datasets.Urban100HR", false]], "var_has_converged() (deepinv.sampling.montecarlo method)": [[240, "deepinv.sampling.MonteCarlo.var_has_converged", false]], "verify_split_dataset_integrity() (deepinv.datasets.div2k method)": [[69, "deepinv.datasets.DIV2K.verify_split_dataset_integrity", false]], "verify_split_dataset_integrity() (deepinv.datasets.lsdirhr method)": [[75, "deepinv.datasets.LsdirHR.verify_split_dataset_integrity", false]], "waveletdenoiser (class in deepinv.models)": [[137, "deepinv.models.WaveletDenoiser", false]], "waveletdictdenoiser (class in deepinv.models)": [[138, "deepinv.models.WaveletDictDenoiser", false]], "waveletprior (class in deepinv.optim)": [[161, "deepinv.optim.WaveletPrior", false]], "zeros_like() (in module deepinv.utils)": [[273, "deepinv.utils.zeros_like", false]]}, "objects": {"deepinv": [[67, 0, 1, "", "Trainer"], [243, 3, 1, "", "test"], [244, 3, 1, "", "train"]], "deepinv.Trainer": [[67, 1, 1, "", "check_clip_grad"], [67, 1, 1, "", "compute_loss"], [67, 1, 1, "", "compute_metrics"], [67, 1, 1, "", "get_samples"], [67, 1, 1, "", "get_samples_offline"], [67, 1, 1, "", "get_samples_online"], [67, 1, 1, "", "log_metrics_wandb"], [67, 1, 1, "", "model_inference"], [67, 1, 1, "", "no_learning_inference"], [67, 1, 1, "", "plot"], [67, 1, 1, "", "reset_metrics"], [67, 1, 1, "", "save_model"], [67, 1, 1, "", "setup_train"], [67, 1, 1, "", "step"], [67, 1, 1, "", "test"], [67, 1, 1, "", "train"]], "deepinv.datasets": [[68, 0, 1, "", "CBSD68"], [69, 0, 1, "", "DIV2K"], [70, 0, 1, "", "FMD"], [71, 0, 1, "", "FastMRISliceDataset"], [72, 0, 1, "", "Flickr2kHR"], [73, 0, 1, "", "HDF5Dataset"], [74, 0, 1, "", "LidcIdriSliceDataset"], [75, 0, 1, "", "LsdirHR"], [76, 0, 1, "", "PatchDataset"], [77, 0, 1, "", "Set14HR"], [78, 0, 1, "", "Urban100HR"], [79, 0, 1, "", "generate_dataset"]], "deepinv.datasets.CBSD68": [[68, 1, 1, "", "check_dataset_exists"]], "deepinv.datasets.DIV2K": [[69, 1, 1, "", "verify_split_dataset_integrity"]], "deepinv.datasets.FMD": [[70, 0, 1, "", "NoisySampleIdentifier"]], "deepinv.datasets.FMD.NoisySampleIdentifier": [[70, 2, 1, "", "fname"], [70, 2, 1, "", "fov"], [70, 2, 1, "", "img_type"], [70, 2, 1, "", "noise_dirname"]], "deepinv.datasets.FastMRISliceDataset": [[71, 0, 1, "", "SliceSampleFileIdentifier"]], "deepinv.datasets.FastMRISliceDataset.SliceSampleFileIdentifier": [[71, 2, 1, "", "fname"], [71, 2, 1, "", "slice_ind"]], "deepinv.datasets.Flickr2kHR": [[72, 1, 1, "", "check_dataset_exists"]], "deepinv.datasets.LidcIdriSliceDataset": [[74, 0, 1, "", "SliceSampleIdentifier"]], "deepinv.datasets.LidcIdriSliceDataset.SliceSampleIdentifier": [[74, 2, 1, "", "patient_id"], [74, 2, 1, "", "scan_folder"], [74, 2, 1, "", "slice_fname"]], "deepinv.datasets.LsdirHR": [[75, 1, 1, "", "verify_split_dataset_integrity"]], "deepinv.datasets.Set14HR": [[77, 1, 1, "", "check_dataset_exists"]], "deepinv.datasets.Urban100HR": [[78, 1, 1, "", "check_dataset_exists"]], "deepinv.loss": [[80, 0, 1, "", "Artifact2ArtifactLoss"], [81, 0, 1, "", "EILoss"], [82, 0, 1, "", "FNEJacobianSpectralNorm"], [83, 0, 1, "", "JacobianSpectralNorm"], [84, 0, 1, "", "LPIPS"], [85, 0, 1, "", "Loss"], [86, 0, 1, "", "LpNorm"], [87, 0, 1, "", "MCLoss"], [88, 0, 1, "", "MOILoss"], [89, 0, 1, "", "NIQE"], [90, 0, 1, "", "Neighbor2Neighbor"], [91, 0, 1, "", "PSNR"], [92, 0, 1, "", "Phase2PhaseLoss"], [93, 0, 1, "", "R2RLoss"], [94, 0, 1, "", "SSIM"], [95, 0, 1, "", "ScoreLoss"], [96, 0, 1, "", "SplittingLoss"], [97, 0, 1, "", "SupLoss"], [98, 0, 1, "", "SureGaussianLoss"], [99, 0, 1, "", "SurePGLoss"], [100, 0, 1, "", "SurePoissonLoss"], [101, 0, 1, "", "TVLoss"]], "deepinv.loss.Artifact2ArtifactLoss": [[80, 1, 1, "", "forward"]], "deepinv.loss.EILoss": [[81, 1, 1, "", "forward"]], "deepinv.loss.FNEJacobianSpectralNorm": [[82, 1, 1, "", "forward"]], "deepinv.loss.JacobianSpectralNorm": [[83, 1, 1, "", "forward"]], "deepinv.loss.LPIPS": [[84, 1, 1, "", "forward"]], "deepinv.loss.Loss": [[85, 1, 1, "", "adapt_model"], [85, 1, 1, "", "forward"]], "deepinv.loss.LpNorm": [[86, 1, 1, "", "forward"]], "deepinv.loss.MCLoss": [[87, 1, 1, "", "forward"]], "deepinv.loss.MOILoss": [[88, 1, 1, "", "forward"]], "deepinv.loss.NIQE": [[89, 1, 1, "", "forward"]], "deepinv.loss.Neighbor2Neighbor": [[90, 1, 1, "", "forward"]], "deepinv.loss.PSNR": [[91, 1, 1, "", "forward"]], "deepinv.loss.Phase2PhaseLoss": [[92, 1, 1, "", "adapt_model"], [92, 1, 1, "", "split"]], "deepinv.loss.R2RLoss": [[93, 1, 1, "", "adapt_model"], [93, 1, 1, "", "forward"]], "deepinv.loss.SSIM": [[94, 1, 1, "", "forward"]], "deepinv.loss.ScoreLoss": [[95, 1, 1, "", "adapt_model"], [95, 1, 1, "", "forward"]], "deepinv.loss.SplittingLoss": [[96, 1, 1, "", "adapt_model"], [96, 1, 1, "", "forward"], [96, 1, 1, "", "split"]], "deepinv.loss.SupLoss": [[97, 1, 1, "", "forward"]], "deepinv.loss.SureGaussianLoss": [[98, 1, 1, "", "forward"]], "deepinv.loss.SurePGLoss": [[99, 1, 1, "", "forward"]], "deepinv.loss.SurePoissonLoss": [[100, 1, 1, "", "forward"]], "deepinv.loss.TVLoss": [[101, 1, 1, "", "forward"]], "deepinv.loss.adversarial": [[102, 0, 1, "", "DiscriminatorLoss"], [103, 0, 1, "", "DiscriminatorMetric"], [104, 0, 1, "", "GeneratorLoss"], [105, 0, 1, "", "SupAdversarialDiscriminatorLoss"], [106, 0, 1, "", "SupAdversarialGeneratorLoss"], [107, 0, 1, "", "UAIRGeneratorLoss"], [108, 0, 1, "", "UnsupAdversarialDiscriminatorLoss"], [109, 0, 1, "", "UnsupAdversarialGeneratorLoss"]], "deepinv.loss.adversarial.DiscriminatorLoss": [[102, 1, 1, "", "adversarial_loss"], [102, 1, 1, "", "forward"]], "deepinv.loss.adversarial.GeneratorLoss": [[104, 1, 1, "", "adversarial_loss"], [104, 1, 1, "", "forward"]], "deepinv.loss.adversarial.SupAdversarialDiscriminatorLoss": [[105, 1, 1, "", "forward"]], "deepinv.loss.adversarial.SupAdversarialGeneratorLoss": [[106, 1, 1, "", "forward"]], "deepinv.loss.adversarial.UAIRGeneratorLoss": [[107, 1, 1, "", "forward"]], "deepinv.loss.adversarial.UnsupAdversarialDiscriminatorLoss": [[108, 1, 1, "", "forward"]], "deepinv.loss.adversarial.UnsupAdversarialGeneratorLoss": [[109, 1, 1, "", "forward"]], "deepinv.models": [[110, 0, 1, "", "ArtifactRemoval"], [111, 0, 1, "", "AutoEncoder"], [112, 0, 1, "", "BM3D"], [113, 0, 1, "", "CSGMGenerator"], [114, 0, 1, "", "ConvDecoder"], [115, 0, 1, "", "DCGANDiscriminator"], [116, 0, 1, "", "DCGANGenerator"], [117, 0, 1, "", "DRUNet"], [118, 0, 1, "", "DeepImagePrior"], [119, 0, 1, "", "DiffUNet"], [120, 0, 1, "", "DnCNN"], [121, 0, 1, "", "EPLLDenoiser"], [122, 0, 1, "", "ESRGANDiscriminator"], [123, 0, 1, "", "EquivariantDenoiser"], [124, 0, 1, "", "GSDRUNet"], [125, 0, 1, "", "ICNN"], [126, 0, 1, "", "MedianFilter"], [127, 0, 1, "", "PDNet_DualBlock"], [128, 0, 1, "", "PDNet_PrimalBlock"], [129, 0, 1, "", "PatchGANDiscriminator"], [130, 0, 1, "", "Restormer"], [131, 0, 1, "", "SCUNet"], [132, 0, 1, "", "SwinIR"], [133, 0, 1, "", "TGVDenoiser"], [134, 0, 1, "", "TVDenoiser"], [135, 0, 1, "", "TimeAgnosticNet"], [136, 0, 1, "", "UNet"], [137, 0, 1, "", "WaveletDenoiser"], [138, 0, 1, "", "WaveletDictDenoiser"]], "deepinv.models.ArtifactRemoval": [[110, 1, 1, "", "forward"]], "deepinv.models.AutoEncoder": [[111, 1, 1, "", "forward"]], "deepinv.models.BM3D": [[112, 1, 1, "", "forward"]], "deepinv.models.CSGMGenerator": [[113, 1, 1, "", "forward"], [113, 1, 1, "", "optimize_z"], [113, 1, 1, "", "random_latent"]], "deepinv.models.ConvDecoder": [[114, 1, 1, "", "forward"]], "deepinv.models.DCGANDiscriminator": [[115, 1, 1, "", "forward"]], "deepinv.models.DCGANGenerator": [[116, 1, 1, "", "forward"]], "deepinv.models.DRUNet": [[117, 1, 1, "", "forward"]], "deepinv.models.DeepImagePrior": [[118, 1, 1, "", "forward"]], "deepinv.models.DiffUNet": [[119, 1, 1, "", "convert_to_fp16"], [119, 1, 1, "", "convert_to_fp32"], [119, 1, 1, "", "find_nearest"], [119, 1, 1, "", "forward"], [119, 1, 1, "", "forward_denoise"], [119, 1, 1, "", "forward_diffusion"], [119, 1, 1, "", "get_alpha_prod"]], "deepinv.models.DnCNN": [[120, 1, 1, "", "forward"]], "deepinv.models.EPLLDenoiser": [[121, 1, 1, "", "forward"]], "deepinv.models.ESRGANDiscriminator": [[122, 1, 1, "", "forward"]], "deepinv.models.EquivariantDenoiser": [[123, 1, 1, "", "forward"]], "deepinv.models.ICNN": [[125, 1, 1, "", "forward"]], "deepinv.models.MedianFilter": [[126, 1, 1, "", "forward"]], "deepinv.models.PDNet_DualBlock": [[127, 1, 1, "", "forward"]], "deepinv.models.PDNet_PrimalBlock": [[128, 1, 1, "", "forward"]], "deepinv.models.PatchGANDiscriminator": [[129, 1, 1, "", "forward"]], "deepinv.models.Restormer": [[130, 1, 1, "", "forward"], [130, 1, 1, "", "forward_restormer"], [130, 1, 1, "", "is_standard_deblurring_network"], [130, 1, 1, "", "is_standard_denoising_network"], [130, 1, 1, "", "is_standard_deraining_network"]], "deepinv.models.SCUNet": [[131, 1, 1, "", "forward"]], "deepinv.models.SwinIR": [[132, 1, 1, "", "forward"]], "deepinv.models.TGVDenoiser": [[133, 1, 1, "", "epsilon"], [133, 1, 1, "", "epsilon_adjoint"], [133, 1, 1, "", "forward"], [133, 1, 1, "", "nabla"], [133, 1, 1, "", "nabla_adjoint"]], "deepinv.models.TVDenoiser": [[134, 1, 1, "", "forward"], [134, 1, 1, "", "nabla"], [134, 1, 1, "", "nabla_adjoint"], [134, 1, 1, "", "prox_tau_fx"]], "deepinv.models.TimeAgnosticNet": [[135, 1, 1, "", "forward"]], "deepinv.models.UNet": [[136, 1, 1, "", "forward"]], "deepinv.models.WaveletDenoiser": [[137, 1, 1, "", "crop_output"], [137, 1, 1, "", "dwt"], [137, 1, 1, "", "flatten_coeffs"], [137, 1, 1, "", "forward"], [137, 1, 1, "", "hard_threshold_topk"], [137, 1, 1, "", "iwt"], [137, 1, 1, "", "pad_input"], [137, 1, 1, "", "prox_l0"], [137, 1, 1, "", "prox_l1"], [137, 1, 1, "", "psi"], [137, 1, 1, "", "reshape_ths"], [137, 1, 1, "", "threshold_3D"], [137, 1, 1, "", "threshold_ND"], [137, 1, 1, "", "thresold_2D"], [137, 1, 1, "", "thresold_func"]], "deepinv.models.WaveletDictDenoiser": [[138, 1, 1, "", "forward"], [138, 1, 1, "", "psi"]], "deepinv.models.complex": [[139, 0, 1, "", "to_complex_denoiser"]], "deepinv.optim": [[140, 0, 1, "", "AmplitudeLoss"], [141, 0, 1, "", "BaseOptim"], [142, 0, 1, "", "DPIR"], [143, 0, 1, "", "DataFidelity"], [144, 0, 1, "", "EPLL"], [145, 0, 1, "", "FixedPoint"], [146, 0, 1, "", "IndicatorL2"], [147, 0, 1, "", "L1"], [148, 0, 1, "", "L1Prior"], [149, 0, 1, "", "L2"], [150, 0, 1, "", "LogPoissonLikelihood"], [151, 0, 1, "", "OptimIterator"], [152, 0, 1, "", "PatchNR"], [153, 0, 1, "", "PatchPrior"], [154, 0, 1, "", "PnP"], [155, 0, 1, "", "PoissonLikelihood"], [156, 0, 1, "", "Prior"], [157, 0, 1, "", "RED"], [158, 0, 1, "", "ScorePrior"], [159, 0, 1, "", "TVPrior"], [160, 0, 1, "", "Tikhonov"], [161, 0, 1, "", "WaveletPrior"], [162, 3, 1, "", "optim_builder"]], "deepinv.optim.AmplitudeLoss": [[140, 1, 1, "", "d"], [140, 1, 1, "", "grad_d"]], "deepinv.optim.BaseOptim": [[141, 1, 1, "", "check_conv_fn"], [141, 1, 1, "", "check_iteration_fn"], [141, 1, 1, "", "forward"], [141, 1, 1, "", "init_iterate_fn"], [141, 1, 1, "", "init_metrics_fn"], [141, 1, 1, "", "update_data_fidelity_fn"], [141, 1, 1, "", "update_metrics_fn"], [141, 1, 1, "", "update_params_fn"], [141, 1, 1, "", "update_prior_fn"]], "deepinv.optim.DataFidelity": [[143, 1, 1, "", "d"], [143, 1, 1, "", "forward"], [143, 1, 1, "", "grad"], [143, 1, 1, "", "grad_d"], [143, 1, 1, "", "prox"], [143, 1, 1, "", "prox_conjugate"], [143, 1, 1, "", "prox_d"], [143, 1, 1, "", "prox_d_conjugate"]], "deepinv.optim.EPLL": [[144, 1, 1, "", "forward"], [144, 1, 1, "", "negative_log_likelihood"]], "deepinv.optim.FixedPoint": [[145, 1, 1, "", "anderson_acceleration_step"], [145, 1, 1, "", "forward"], [145, 1, 1, "", "init_anderson_acceleration"]], "deepinv.optim.IndicatorL2": [[146, 1, 1, "", "d"], [146, 1, 1, "", "prox"], [146, 1, 1, "", "prox_d"]], "deepinv.optim.L1": [[147, 1, 1, "", "d"], [147, 1, 1, "", "grad_d"], [147, 1, 1, "", "prox"], [147, 1, 1, "", "prox_d"]], "deepinv.optim.L1Prior": [[148, 1, 1, "", "g"], [148, 1, 1, "", "prox"]], "deepinv.optim.L2": [[149, 1, 1, "", "d"], [149, 1, 1, "", "grad_d"], [149, 1, 1, "", "prox"], [149, 1, 1, "", "prox_d"]], "deepinv.optim.LogPoissonLikelihood": [[150, 1, 1, "", "d"]], "deepinv.optim.OptimIterator": [[151, 1, 1, "", "forward"], [151, 1, 1, "", "relaxation_step"]], "deepinv.optim.PatchNR": [[152, 1, 1, "", "forward"]], "deepinv.optim.PatchPrior": [[153, 1, 1, "", "g"]], "deepinv.optim.PnP": [[154, 1, 1, "", "prox"]], "deepinv.optim.PoissonLikelihood": [[155, 1, 1, "", "d"], [155, 1, 1, "", "grad_d"], [155, 1, 1, "", "prox_d"]], "deepinv.optim.Prior": [[156, 1, 1, "", "forward"], [156, 1, 1, "", "g"], [156, 1, 1, "", "grad"], [156, 1, 1, "", "prox"], [156, 1, 1, "", "prox_conjugate"]], "deepinv.optim.RED": [[157, 1, 1, "", "grad"]], "deepinv.optim.ScorePrior": [[158, 1, 1, "", "grad"]], "deepinv.optim.TVPrior": [[159, 1, 1, "", "g"], [159, 1, 1, "", "nabla"], [159, 1, 1, "", "nabla_adjoint"], [159, 1, 1, "", "prox"]], "deepinv.optim.Tikhonov": [[160, 1, 1, "", "g"], [160, 1, 1, "", "grad"], [160, 1, 1, "", "prox"]], "deepinv.optim.WaveletPrior": [[161, 1, 1, "", "g"], [161, 1, 1, "", "prox"], [161, 1, 1, "", "psi"]], "deepinv.optim.optim_iterators": [[163, 0, 1, "", "ADMMIteration"], [164, 0, 1, "", "CPIteration"], [165, 0, 1, "", "DRSIteration"], [166, 0, 1, "", "FISTAIteration"], [167, 0, 1, "", "GDIteration"], [168, 0, 1, "", "HQSIteration"], [169, 0, 1, "", "PGDIteration"], [170, 0, 1, "", "SMIteration"]], "deepinv.optim.optim_iterators.ADMMIteration": [[163, 1, 1, "", "forward"]], "deepinv.optim.optim_iterators.CPIteration": [[164, 1, 1, "", "forward"]], "deepinv.optim.optim_iterators.DRSIteration": [[165, 1, 1, "", "forward"]], "deepinv.optim.optim_iterators.FISTAIteration": [[166, 1, 1, "", "forward"]], "deepinv.optim.optim_iterators.GDIteration": [[167, 1, 1, "", "forward"]], "deepinv.optim.optim_iterators.SMIteration": [[170, 1, 1, "", "forward"]], "deepinv.optim.utils": [[171, 0, 1, "", "GaussianMixtureModel"], [172, 0, 1, "", "conjugate_gradient"], [173, 0, 1, "", "gradient_descent"]], "deepinv.optim.utils.GaussianMixtureModel": [[171, 1, 1, "", "classify"], [171, 1, 1, "", "component_log_likelihoods"], [171, 1, 1, "", "fit"], [171, 1, 1, "", "forward"], [171, 1, 1, "", "get_cov"], [171, 1, 1, "", "get_cov_inv_reg"], [171, 1, 1, "", "get_weights"], [171, 1, 1, "", "load_state_dict"], [171, 1, 1, "", "set_cov"], [171, 1, 1, "", "set_cov_reg"], [171, 1, 1, "", "set_weights"]], "deepinv.physics": [[174, 0, 1, "", "Blur"], [175, 0, 1, "", "BlurFFT"], [176, 0, 1, "", "CompressedSensing"], [177, 0, 1, "", "Decolorize"], [178, 0, 1, "", "DecomposablePhysics"], [179, 0, 1, "", "Demosaicing"], [180, 0, 1, "", "Denoising"], [181, 0, 1, "", "Downsampling"], [182, 0, 1, "", "DynamicMRI"], [183, 0, 1, "", "GammaNoise"], [184, 0, 1, "", "GaussianNoise"], [185, 0, 1, "", "Haze"], [186, 0, 1, "", "Inpainting"], [187, 0, 1, "", "LinearPhysics"], [188, 0, 1, "", "LogPoissonNoise"], [189, 0, 1, "", "MRI"], [190, 0, 1, "", "Pansharpen"], [191, 0, 1, "", "PhaseRetrieval"], [192, 0, 1, "", "Physics"], [193, 0, 1, "", "PoissonGaussianNoise"], [194, 0, 1, "", "PoissonNoise"], [195, 0, 1, "", "RadioInterferometry"], [196, 0, 1, "", "RandomPhaseRetrieval"], [197, 0, 1, "", "SinglePhotonLidar"], [198, 0, 1, "", "SinglePixelCamera"], [199, 0, 1, "", "SpaceVaryingBlur"], [200, 0, 1, "", "Tomography"], [201, 0, 1, "", "UniformGaussianNoise"], [202, 0, 1, "", "UniformNoise"], [203, 0, 1, "", "adjoint_function"]], "deepinv.physics.Blur": [[174, 1, 1, "", "A"], [174, 1, 1, "", "A_adjoint"], [174, 1, 1, "", "update_parameters"]], "deepinv.physics.BlurFFT": [[175, 1, 1, "", "A"], [175, 1, 1, "", "A_adjoint"], [175, 1, 1, "", "update_parameters"]], "deepinv.physics.CompressedSensing": [[176, 1, 1, "", "A"], [176, 1, 1, "", "A_adjoint"], [176, 1, 1, "", "A_dagger"]], "deepinv.physics.DecomposablePhysics": [[178, 1, 1, "", "A"], [178, 1, 1, "", "A_A_adjoint"], [178, 1, 1, "", "A_adjoint"], [178, 1, 1, "", "A_adjoint_A"], [178, 1, 1, "", "A_dagger"], [178, 1, 1, "", "prox_l2"], [178, 1, 1, "", "update_parameters"]], "deepinv.physics.Downsampling": [[181, 1, 1, "", "A"], [181, 1, 1, "", "A_adjoint"], [181, 1, 1, "", "prox_l2"]], "deepinv.physics.DynamicMRI": [[182, 1, 1, "", "A"], [182, 1, 1, "", "A_adjoint"], [182, 1, 1, "", "A_dagger"], [182, 1, 1, "", "check_mask"], [182, 1, 1, "", "noise"], [182, 1, 1, "", "to_static_mri"]], "deepinv.physics.GammaNoise": [[183, 1, 1, "", "forward"], [183, 1, 1, "", "update_parameters"]], "deepinv.physics.GaussianNoise": [[184, 1, 1, "", "forward"], [184, 1, 1, "", "update_parameters"]], "deepinv.physics.Haze": [[185, 1, 1, "", "A"], [185, 1, 1, "", "A_dagger"]], "deepinv.physics.Inpainting": [[186, 1, 1, "", "__mul__"], [186, 1, 1, "", "noise"]], "deepinv.physics.LinearPhysics": [[187, 1, 1, "", "A_A_adjoint"], [187, 1, 1, "", "A_adjoint"], [187, 1, 1, "", "A_adjoint_A"], [187, 1, 1, "", "A_dagger"], [187, 1, 1, "", "A_vjp"], [187, 1, 1, "", "__add__"], [187, 1, 1, "", "__mul__"], [187, 1, 1, "", "adjointness_test"], [187, 1, 1, "", "compute_norm"], [187, 1, 1, "", "prox_l2"]], "deepinv.physics.LogPoissonNoise": [[188, 1, 1, "", "forward"], [188, 1, 1, "", "update_parameters"]], "deepinv.physics.MRI": [[189, 1, 1, "", "check_mask"], [189, 1, 1, "", "update_parameters"]], "deepinv.physics.Pansharpen": [[190, 1, 1, "", "A"], [190, 1, 1, "", "A_adjoint"], [190, 1, 1, "", "forward"]], "deepinv.physics.PhaseRetrieval": [[191, 1, 1, "", "A"], [191, 1, 1, "", "A_dagger"], [191, 1, 1, "", "A_vjp"], [191, 1, 1, "", "B_dagger"], [191, 1, 1, "", "forward"]], "deepinv.physics.Physics": [[192, 1, 1, "", "A"], [192, 1, 1, "", "A_dagger"], [192, 1, 1, "", "A_vjp"], [192, 1, 1, "", "__add__"], [192, 1, 1, "", "__mul__"], [192, 1, 1, "", "forward"], [192, 1, 1, "", "noise"], [192, 1, 1, "", "sensor"], [192, 1, 1, "", "update"]], "deepinv.physics.PoissonGaussianNoise": [[193, 1, 1, "", "forward"], [193, 1, 1, "", "update_parameters"]], "deepinv.physics.PoissonNoise": [[194, 1, 1, "", "forward"], [194, 1, 1, "", "update_parameters"]], "deepinv.physics.RadioInterferometry": [[195, 1, 1, "", "A"], [195, 1, 1, "", "A_adjoint"]], "deepinv.physics.SinglePhotonLidar": [[197, 1, 1, "", "A"], [197, 1, 1, "", "A_dagger"]], "deepinv.physics.SpaceVaryingBlur": [[199, 1, 1, "", "A"], [199, 1, 1, "", "A_adjoint"], [199, 1, 1, "", "update_parameters"]], "deepinv.physics.Tomography": [[200, 1, 1, "", "A"], [200, 1, 1, "", "A_adjoint"], [200, 1, 1, "", "A_dagger"]], "deepinv.physics.UniformGaussianNoise": [[201, 1, 1, "", "forward"]], "deepinv.physics.UniformNoise": [[202, 1, 1, "", "forward"], [202, 1, 1, "", "update_parameters"]], "deepinv.physics.blur": [[204, 3, 1, "", "bicubic_filter"], [205, 3, 1, "", "bilinear_filter"], [206, 3, 1, "", "gaussian_blur"], [207, 3, 1, "", "sinc_filter"]], "deepinv.physics.functional": [[208, 0, 1, "", "IRadon"], [209, 0, 1, "", "Radon"], [210, 0, 1, "", "conv2d"], [211, 0, 1, "", "conv2d_fft"], [212, 0, 1, "", "conv3d_fft"], [213, 0, 1, "", "conv_transpose2d"], [214, 0, 1, "", "conv_transpose2d_fft"], [215, 0, 1, "", "conv_transpose3d_fft"], [216, 0, 1, "", "histogram"], [217, 0, 1, "", "histogramdd"], [218, 0, 1, "", "multiplier"], [219, 0, 1, "", "multiplier_adjoint"], [220, 0, 1, "", "product_convolution2d"]], "deepinv.physics.functional.IRadon": [[208, 1, 1, "", "forward"]], "deepinv.physics.functional.Radon": [[209, 1, 1, "", "forward"]], "deepinv.physics.generator": [[221, 0, 1, "", "Artifact2ArtifactSplittingMaskGenerator"], [222, 0, 1, "", "BaseMaskGenerator"], [223, 0, 1, "", "BernoulliSplittingMaskGenerator"], [224, 0, 1, "", "DiffractionBlurGenerator"], [225, 0, 1, "", "DiffractionBlurGenerator3D"], [226, 0, 1, "", "EquispacedMaskGenerator"], [227, 0, 1, "", "GaussianMaskGenerator"], [228, 0, 1, "", "GaussianSplittingMaskGenerator"], [229, 0, 1, "", "GeneratorMixture"], [230, 0, 1, "", "MotionBlurGenerator"], [231, 0, 1, "", "Phase2PhaseSplittingMaskGenerator"], [232, 0, 1, "", "PhysicsGenerator"], [233, 0, 1, "", "ProductConvolutionBlurGenerator"], [234, 0, 1, "", "RandomMaskGenerator"], [235, 0, 1, "", "SigmaGenerator"]], "deepinv.physics.generator.Artifact2ArtifactSplittingMaskGenerator": [[221, 1, 1, "", "batch_step"]], "deepinv.physics.generator.BaseMaskGenerator": [[222, 1, 1, "", "sample_mask"], [222, 1, 1, "", "step"]], "deepinv.physics.generator.BernoulliSplittingMaskGenerator": [[223, 1, 1, "", "batch_step"], [223, 1, 1, "", "check_pixelwise"], [223, 1, 1, "", "step"]], "deepinv.physics.generator.DiffractionBlurGenerator": [[224, 1, 1, "", "generate_coeff"], [224, 1, 1, "", "step"]], "deepinv.physics.generator.DiffractionBlurGenerator3D": [[225, 1, 1, "", "step"]], "deepinv.physics.generator.EquispacedMaskGenerator": [[226, 1, 1, "", "sample_mask"]], "deepinv.physics.generator.GaussianMaskGenerator": [[227, 1, 1, "", "get_pdf"]], "deepinv.physics.generator.GaussianSplittingMaskGenerator": [[228, 1, 1, "", "batch_step"]], "deepinv.physics.generator.GeneratorMixture": [[229, 1, 1, "", "step"]], "deepinv.physics.generator.MotionBlurGenerator": [[230, 1, 1, "", "f_matern"], [230, 1, 1, "", "matern_kernel"], [230, 1, 1, "", "step"]], "deepinv.physics.generator.Phase2PhaseSplittingMaskGenerator": [[231, 1, 1, "", "batch_step"]], "deepinv.physics.generator.PhysicsGenerator": [[232, 1, 1, "", "__add__"], [232, 1, 1, "", "reset_rng"], [232, 1, 1, "", "rng_manual_seed"], [232, 1, 1, "", "step"]], "deepinv.physics.generator.ProductConvolutionBlurGenerator": [[233, 1, 1, "", "step"]], "deepinv.physics.generator.RandomMaskGenerator": [[234, 1, 1, "", "get_pdf"], [234, 1, 1, "", "sample_mask"]], "deepinv.physics.generator.SigmaGenerator": [[235, 1, 1, "", "step"]], "deepinv.sampling": [[236, 0, 1, "", "DDRM"], [237, 0, 1, "", "DPS"], [238, 0, 1, "", "DiffPIR"], [239, 0, 1, "", "DiffusionSampler"], [240, 0, 1, "", "MonteCarlo"], [241, 0, 1, "", "SKRock"], [242, 0, 1, "", "ULA"]], "deepinv.sampling.DDRM": [[236, 1, 1, "", "forward"]], "deepinv.sampling.DPS": [[237, 1, 1, "", "compute_alpha_betas"], [237, 1, 1, "", "forward"]], "deepinv.sampling.DiffPIR": [[238, 1, 1, "", "find_nearest"], [238, 1, 1, "", "forward"], [238, 1, 1, "", "get_alpha_beta"], [238, 1, 1, "", "get_alpha_prod"], [238, 1, 1, "", "get_noise_schedule"]], "deepinv.sampling.MonteCarlo": [[240, 1, 1, "", "forward"], [240, 1, 1, "", "get_chain"], [240, 1, 1, "", "mean_has_converged"], [240, 1, 1, "", "reset"], [240, 1, 1, "", "var_has_converged"]], "deepinv.training": [[245, 0, 1, "", "AdversarialTrainer"]], "deepinv.training.AdversarialTrainer": [[245, 1, 1, "", "check_clip_grad_D"], [245, 1, 1, "", "compute_loss"], [245, 1, 1, "", "save_model"], [245, 1, 1, "", "setup_train"]], "deepinv.transform": [[246, 0, 1, "", "Homography"], [247, 0, 1, "", "Rotate"], [248, 0, 1, "", "Scale"], [249, 0, 1, "", "Shift"], [250, 0, 1, "", "Transform"]], "deepinv.transform.Homography": [[246, 1, 1, "", "forward"]], "deepinv.transform.Rotate": [[247, 1, 1, "", "forward"]], "deepinv.transform.Scale": [[248, 1, 1, "", "forward"]], "deepinv.transform.Shift": [[249, 1, 1, "", "forward"]], "deepinv.transform.Transform": [[250, 1, 1, "", "__add__"], [250, 1, 1, "", "__mul__"], [250, 1, 1, "", "forward"]], "deepinv.transform.projective": [[251, 0, 1, "", "Affine"], [252, 0, 1, "", "Euclidean"], [253, 0, 1, "", "PanTiltRotate"], [254, 0, 1, "", "Similarity"]], "deepinv.transform.projective.Affine": [[251, 1, 1, "", "forward"]], "deepinv.transform.projective.Euclidean": [[252, 1, 1, "", "forward"]], "deepinv.transform.projective.PanTiltRotate": [[253, 1, 1, "", "forward"]], "deepinv.transform.projective.Similarity": [[254, 1, 1, "", "forward"]], "deepinv.unfolded": [[255, 0, 1, "", "BaseDEQ"], [256, 0, 1, "", "BaseUnfold"], [257, 3, 1, "", "DEQ_builder"], [258, 3, 1, "", "unfolded_builder"]], "deepinv.unfolded.BaseDEQ": [[255, 1, 1, "", "forward"]], "deepinv.utils": [[259, 0, 1, "", "TensorList"], [260, 3, 1, "", "cal_psnr"], [261, 3, 1, "", "get_freer_gpu"], [262, 3, 1, "", "load_image"], [263, 3, 1, "", "load_url_image"], [264, 3, 1, "", "ones_like"], [265, 3, 1, "", "plot"], [266, 3, 1, "", "plot_curves"], [267, 3, 1, "", "plot_inset"], [268, 3, 1, "", "plot_ortho3D"], [269, 3, 1, "", "plot_parameters"], [270, 3, 1, "", "plot_videos"], [271, 3, 1, "", "rand_like"], [272, 3, 1, "", "randn_like"], [273, 3, 1, "", "zeros_like"]], "deepinv.utils.TensorList": [[259, 1, 1, "", "__add__"], [259, 1, 1, "", "__mul__"], [259, 1, 1, "", "__neg__"], [259, 1, 1, "", "__sub__"], [259, 1, 1, "", "__truediv__"], [259, 1, 1, "", "append"], [259, 1, 1, "", "conj"], [259, 1, 1, "", "flatten"], [259, 1, 1, "", "reshape"], [259, 1, 1, "", "sum"]]}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "function", "Python function"]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:attribute", "3": "py:function"}, "terms": {"": [0, 2, 4, 5, 6, 7, 10, 11, 13, 16, 18, 19, 20, 23, 24, 26, 27, 28, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 53, 62, 67, 93, 95, 107, 117, 119, 120, 124, 125, 131, 132, 133, 134, 142, 158, 176, 178, 181, 182, 189, 224, 230, 240, 243, 244, 245, 254, 259, 267], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 59, 61, 62, 63, 66, 67, 70, 71, 74, 79, 80, 81, 82, 83, 86, 88, 90, 91, 92, 93, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 118, 119, 124, 125, 126, 130, 131, 132, 134, 137, 138, 141, 142, 143, 145, 146, 147, 148, 149, 150, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 209, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 246, 249, 251, 252, 253, 254, 255, 256, 257, 258, 260, 265, 267, 268, 271], "00": [2, 5, 6, 7, 10, 13, 16, 17, 20, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 49, 50, 51, 66, 75], "000": [13, 44, 48, 70], "0000": [59, 143, 174, 175, 177, 178, 182, 186, 189, 232], "00000": 68, "0000001": 75, "000001": 72, "00001": 68, "0000250": 75, "0001": [13, 69, 74, 113, 119, 141, 145, 238, 255], "0001000": 75, "001": [2, 31, 39, 74, 82, 83, 95, 99, 100, 143, 156, 187, 192, 240, 241, 242], "0014": [4, 11], "00143": 181, "002": [42, 48, 49], "0022": [4, 11], "0025926860568749816": 26, "002650": 72, "003": [2, 26, 48], "0031489511452764073": 48, "0037754386042555175": 26, "00378": 26, "004": [2, 26], "00490826": 164, "005": [2, 20, 22, 45, 48, 66], "006": [16, 49], "0064": [4, 11], "007": 41, "008": [2, 16, 37], "0084001": 75, "0084991": 75, "0085000": 75, "0087": 196, "0089": [4, 11], "0096": [4, 11], "00e": [5, 21, 32], "00it": [2, 24], "01": [1, 10, 17, 20, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 41, 46, 49, 50, 55, 66, 98, 99, 100, 106, 113, 118, 134, 235], "0100": 10, "0109": [4, 11], "012": 45, "014": [39, 45], "0144": 10, "0145": [4, 11], "0146": [10, 181], "014818510884248723": 5, "015": [5, 16, 45], "0157": 10, "016": [26, 45], "0164964717730083": 26, "01831": 123, "01it": [7, 24, 42], "02": [3, 14, 22, 24, 25, 28, 29, 30, 31, 32, 33, 34, 38, 43, 51, 66, 119, 150, 188, 238], "020": 42, "0200106671353986": 42, "0202": 83, "0204": [4, 11], "022": 37, "0225": 196, "0241": 181, "0247": [4, 11], "026": 43, "0271": 10, "028": 48, "03": [5, 14, 17, 24, 26, 27, 28, 29, 30, 32, 33, 34, 37, 38, 43, 45, 50, 51, 66, 267], "0306": 10, "0318": [4, 11], "032": [5, 17, 41, 66], "0322": [4, 11], "0335": [4, 11], "0349": [4, 11], "035": 48, "03521": 176, "036": 48, "03679": 110, "0398": 181, "03981": 120, "03it": 41, "04": [13, 17, 24, 33, 34, 36, 38, 66, 226, 227, 234], "0431": [4, 11], "04715": 242, "04it": [7, 24], "05": [5, 13, 15, 16, 20, 21, 24, 25, 28, 33, 34, 38, 48, 51, 53, 61, 66, 113, 133, 134, 141, 146, 147, 162, 171, 172, 173, 238, 241, 242], "0501": [4, 11], "0515": [4, 11], "0519": [4, 11], "052": [41, 48], "0523137744435074": 41, "0559": [4, 11], "055921363830567": 41, "056": [41, 45], "0568": [4, 11], "0588": 10, "05it": [7, 24], "06": [5, 21, 24, 33, 34, 38, 46], "0603": 189, "062": 46, "0623": [4, 11], "0642": [4, 11], "06474": [127, 128], "065753936767578": 48, "066": 48, "0667": 10, "0671": 10, "06it": [2, 7, 41, 42], "06m": 50, "07": [17, 22, 24, 28, 34, 38, 40, 66], "0707": [4, 11], "071": 45, "0712": [180, 186], "0732": [4, 11], "077": [48, 200, 209], "077b83af57538aa183971a2fe0971ec1": 95, "07886": 207, "08": [0, 24, 30, 34, 36, 61, 66, 159, 172], "0800": 69, "0801": 69, "082": 45, "0845": 196, "0872": 10, "08845": 241, "08995": 238, "08it": [34, 42], "09": [30, 34, 51, 66], "0900": 69, "09327": [246, 253], "094": 50, "094568888346355": 49, "095": 49, "09500349114552311": 11, "0995518799995156": 45, "09it": 24, "0m": [26, 38, 50], "0mb": [24, 26], "0mib": [26, 38, 50], "0x7fd8b0d18d90": [7, 15, 35], "1": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 59, 61, 62, 63, 67, 70, 71, 74, 80, 81, 83, 85, 88, 91, 92, 93, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 114, 117, 119, 121, 123, 124, 130, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 265, 267, 268, 270, 271], "10": [4, 9, 11, 12, 13, 14, 19, 23, 24, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 61, 66, 70, 82, 83, 91, 113, 120, 138, 170, 174, 175, 176, 181, 196, 200, 209, 216, 217, 233, 236, 240, 241, 260], "100": [2, 5, 6, 7, 8, 9, 10, 13, 16, 20, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 45, 46, 48, 49, 50, 67, 69, 72, 78, 113, 116, 125, 141, 146, 147, 162, 171, 172, 173, 176, 187, 236, 238, 239, 244, 245], "1000": [13, 16, 33, 34, 41, 45, 46, 47, 50, 95, 111, 119, 133, 134, 159, 230, 237, 238, 240, 241, 242], "10000": 24, "1006": [186, 232], "101": [2, 24, 34, 37], "1010": 74, "1018": 74, "101mb": 42, "102": [24, 34], "1024": [24, 150, 188], "102m": 38, "103": [24, 34], "1031": 9, "10337": 103, "104": [24, 34], "105": [24, 34], "106": [7, 24, 34], "1068": 200, "107": [24, 34], "108": [7, 19, 24, 34], "1080": 11, "10811517": 42, "1081344": 42, "109": [7, 24, 34], "10it": [24, 34, 46], "10x": [46, 47], "11": [2, 7, 11, 16, 24, 26, 29, 33, 34, 38, 42, 46, 47, 70, 113, 134, 207], "110": [7, 24, 34], "1102": 207, "110m": 38, "111": [7, 24, 34], "111m": 26, "112": [24, 34], "11232": 81, "113": [24, 34], "1135": 182, "1137": 120, "114": [24, 34], "1140": 14, "1145": 20, "115": [24, 34], "116": [24, 34, 45], "117": [10, 17, 24, 34, 66], "11793": 236, "117m": 38, "118": [24, 34], "11888": 32, "118m": 13, "119": [24, 34], "1195108068754911": 49, "11it": [7, 24, 34], "12": [19, 24, 33, 34, 35, 38, 46, 47, 70, 113, 140], "120": [24, 34, 49], "121": [24, 33, 34], "12151": 88, "12191684": 42, "122": [24, 33, 34], "1227": 186, "123": [24, 34], "124": [24, 34], "124956766764324": 45, "124m": 34, "125": [4, 24, 33, 34, 45], "1258500": 41, "125m": [2, 13, 38], "126": [24, 34], "127": [24, 34], "128": [2, 14, 16, 24, 26, 34, 38, 48, 49, 54, 113, 116, 117, 119, 124, 132], "128x128": [2, 16, 38, 49], "129": [24, 34], "129m": [2, 37], "12it": [24, 34], "13": [5, 11, 13, 17, 24, 33, 34, 39, 45, 70, 113], "130": [24, 34], "131": [24, 34, 45], "132": [24, 34], "1322": 48, "13247v2": [82, 83], "132m": 38, "133": [24, 34], "1332": 48, "1336402183278356": 26, "134": [24, 26, 34], "13439562": 41, "135": [24, 34], "135388067": [2, 37], "13547210": 46, "136": [24, 34], "137": [24, 34], "138": [24, 34], "138m": 26, "139": [24, 34], "139m": 38, "13it": [24, 34], "13m": 41, "14": [13, 16, 21, 24, 25, 33, 34, 37, 38, 39, 43, 50, 66, 70, 77, 207], "140": [24, 34, 50], "1406": 230, "140e": 11, "141": [24, 34], "1416162": 46, "142": [24, 34], "143": [24, 34, 37, 47], "144": [24, 34, 37, 47], "1444344": 42, "145": [24, 34, 47], "1455907821655273": 50, "145mb": 2, "146": [24, 34, 37, 47, 50], "14687": 237, "147": [2, 24, 34, 47], "14756": 81, "147m": 38, "148": [24, 34, 37, 47], "149": [24, 34], "149mb": 27, "14it": [24, 34], "14m": [40, 42], "15": [0, 1, 5, 20, 24, 28, 31, 33, 34, 47, 49, 54, 66, 70, 132, 224, 225], "150": [24, 34, 38], "1506": 176, "151": [24, 34], "1510": 181, "152": [24, 34, 37, 47], "153": [2, 24, 34], "154": [24, 34, 37], "154m": 38, "155": [24, 34, 47], "156": [24, 34], "1561": 196, "157": [2, 24, 34], "158": [24, 34, 133, 134], "158m": 34, "159": [24, 34], "15it": [24, 34], "16": [2, 4, 12, 16, 23, 24, 26, 29, 33, 34, 37, 38, 56, 61, 63, 70, 75, 121, 144, 174, 175, 181, 187, 198, 199, 246, 251, 252, 253, 254, 258, 268, 270], "160": [23, 24, 34], "1608": 120, "161": [2, 24, 34], "1611": 110, "162": [24, 34, 37], "162m": 38, "162mb": 41, "163": [24, 34], "164": [24, 34], "164637247721355": 26, "1648877": [41, 42, 46], "165": [24, 26, 34], "1650": 200, "166": [24, 26, 34], "1666": 200, "1668": 176, "166m": 26, "167": [24, 34], "168": [24, 34], "169": [24, 34], "169m": 38, "16it": 34, "16x16": [61, 174, 175, 187, 246, 251, 252, 253, 254], "17": [5, 16, 24, 31, 33, 34, 70, 265, 268], "170": [24, 34], "1707": [127, 128], "171": [2, 24, 34], "1711": 103, "172": [24, 34], "173": [4, 24, 34], "173828125": 0, "174": [24, 34], "175": [14, 17, 24, 34, 66], "175mb": 35, "176": [24, 34], "176m": 38, "177": [24, 34], "178": [24, 34, 49], "1788": [178, 186], "179": [13, 24, 34], "17it": [24, 34], "17m": 38, "18": [5, 13, 24, 33, 34, 37, 38, 70, 134], "180": [24, 34, 132, 200, 208, 209, 246, 251, 252, 253, 254], "181": [24, 34], "1814": 189, "182": [24, 34, 38], "1820": 186, "183": [24, 34], "1830": 21, "183m": 38, "184": [24, 34], "185": [24, 34], "18513633": 46, "186": [24, 34], "1866436004638672": 26, "187": [24, 26, 34, 47], "187019": 38, "188": [24, 34, 50], "188165": 45, "188174": 50, "1883839260449329": 50, "189": [24, 34], "18it": [24, 34], "19": [2, 7, 16, 24, 26, 32, 33, 34, 37, 38, 40, 42, 43, 48, 49, 66, 70, 245], "190": [24, 34], "1908": 241, "191": [24, 34], "191m": [34, 38], "192": [24, 34], "19204162": 41, "193": [24, 34], "194": [24, 34], "195": [24, 34], "196": [24, 34, 48], "197": [24, 34], "197m": 38, "198": [24, 34], "1985": 180, "199": [24, 34], "1991": 11, "199m": 26, "19it": 34, "1_alex": 26, "1conv": 132, "1d": [227, 228, 234], "1e": [0, 2, 5, 7, 12, 14, 16, 19, 20, 24, 28, 37, 38, 39, 40, 41, 42, 45, 48, 49, 50, 59, 83, 113, 133, 134, 140, 141, 145, 146, 147, 159, 171, 172, 173, 175, 255], "1e16": 146, "1e2": 31, "1e3": [31, 240], "1e4": 48, "1f": 168, "1j": [0, 13], "1m": [13, 28, 37, 49], "1mib": [6, 20, 38, 49, 50], "1z2us9zhjdgolu6r1jee0s2bbej2xv5": 24, "2": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 54, 55, 56, 59, 61, 62, 70, 71, 74, 80, 81, 86, 87, 88, 90, 92, 93, 95, 96, 97, 98, 99, 100, 101, 113, 117, 118, 119, 121, 123, 124, 126, 130, 132, 133, 134, 135, 136, 137, 138, 140, 141, 143, 144, 145, 146, 147, 149, 151, 158, 159, 160, 161, 164, 165, 169, 170, 174, 175, 176, 178, 181, 182, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 205, 206, 207, 210, 212, 221, 223, 224, 225, 226, 227, 228, 230, 234, 237, 238, 239, 240, 241, 242, 245, 252, 254, 265, 267, 268, 270], "20": [0, 2, 10, 12, 13, 15, 16, 20, 23, 24, 25, 32, 33, 34, 38, 41, 45, 47, 48, 49, 54, 59, 70, 91, 120, 260], "200": [8, 17, 24, 27, 34, 46, 47, 49, 66, 121, 144], "2000": 20, "2007": 112, "2009": [5, 19, 20, 21, 26, 28, 134], "2010": 133, "2011": 144, "2012": [82, 83], "2013": [133, 134], "2017": [5, 26, 142, 220], "2018": [7, 48, 118], "201856231689455": 41, "202": [21, 41], "2020": 48, "2021": 95, "2022": [7, 31, 32, 35], "2024": 0, "2031": 196, "2040": 69, "2046604146865518": 16, "2046610611577739": 49, "2048": 15, "205": [16, 49], "205m": 38, "2064": 180, "2067533657179195": 45, "2067779": 16, "2069441": 39, "207": [21, 22, 45, 66], "20it": [24, 34, 42], "20m1387961": 120, "21": [20, 24, 26, 27, 33, 34, 45, 50, 207, 225], "2103": [81, 242], "212m": 38, "2139": 180, "219": 46, "2197": 176, "219m": 38, "21it": [24, 34], "22": [16, 24, 33, 34, 38, 46, 50], "2201": [88, 236], "2209": [32, 237], "222": 13, "224": [8, 24], "224x224": 8, "225m": 34, "227m": 38, "22980131": 42, "22it": [24, 34], "23": [2, 3, 7, 23, 24, 26, 27, 30, 31, 33, 34, 39, 42, 48, 66], "230": [26, 30, 66], "2305": 238, "2312": [81, 123], "233m": 26, "234m": 38, "238": 41, "238416862487792": 41, "23it": [5, 24, 34], "24": [2, 7, 16, 21, 24, 32, 33, 34, 37, 38, 40, 41, 42, 45, 48, 49, 51, 66], "2403": [246, 253], "2419": 134, "241m": 38, "2434": 134, "243mb": 23, "246mb": 37, "249": 45, "249m": 38, "249mb": 23, "24it": 34, "25": [0, 2, 11, 13, 23, 24, 31, 32, 33, 34, 48, 54, 132, 195, 224, 225, 230, 233, 238], "250": 75, "2500": [61, 113, 118, 174, 175], "2532": [232, 235], "254": 2, "255": [23, 24, 33, 34, 35, 54, 132], "2550": 14, "256": [2, 4, 5, 6, 15, 20, 21, 28, 37, 45, 54, 71, 113, 114, 117, 119, 124, 125, 131, 152, 199, 224, 265], "256m": 38, "256x256": [33, 34], "257": [9, 17, 66], "258": [200, 209], "258m": 34, "25it": [34, 37], "25m": 38, "26": [24, 26, 28, 32, 33, 34, 38, 48], "263515028235034": 38, "264": 38, "2640": 200, "264m": 38, "265": 47, "265mb": 13, "2674": 200, "269": [16, 17, 66], "269918537139894": 2, "26it": 34, "27": [2, 24, 33, 34, 38, 48, 49, 66], "270": [2, 28], "271m": 38, "275": 45, "276": [50, 77], "277": [41, 43, 66], "277mb": 34, "278m": 38, "278mb": 26, "27it": [2, 24, 34, 42], "28": [17, 23, 24, 31, 33, 34, 39, 41, 46, 47, 48, 53, 61], "280mb": 28, "285": 207, "285mb": 28, "28690": 0, "286m": 38, "286mb": 26, "287": [35, 36, 66], "287mb": 26, "288": [45, 46, 47], "28881": [41, 42, 46], "28crop": [7, 31, 32, 35], "28it": [24, 34, 35], "29": [2, 7, 15, 23, 24, 28, 31, 32, 33, 34, 35, 38, 41, 49, 50], "2908": 189, "290m": 34, "290mb": 28, "292": [31, 36, 66], "292mb": 26, "293": [16, 45], "293m": 38, "294": 45, "296": 46, "2989": 14, "299mb": 39, "29it": [24, 34], "2_2": [2, 91, 107, 260], "2a": 99, "2ax_": 27, "2cm": 145, "2d": [0, 4, 15, 37, 61, 71, 74, 137, 174, 182, 189, 195, 198, 210, 211, 213, 214, 220, 224, 228, 230, 246, 247, 248, 249, 254], "2e": [0, 2, 14], "2f": [0, 7, 12, 13, 14, 19, 20, 21, 23, 24, 27, 29, 31, 32, 35, 82], "2m": [2, 23, 38, 176, 196], "2mb": 24, "2mib": [38, 50], "2nd": 133, "2x2": [61, 174, 175, 189], "2x_": [27, 49], "3": [0, 2, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 16, 19, 20, 21, 22, 24, 26, 27, 28, 29, 31, 32, 33, 34, 37, 38, 39, 41, 45, 46, 47, 48, 49, 50, 54, 56, 61, 63, 70, 71, 74, 83, 95, 113, 115, 116, 117, 119, 120, 121, 124, 125, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 144, 149, 161, 166, 176, 177, 178, 179, 180, 186, 187, 190, 196, 197, 198, 200, 203, 204, 207, 223, 224, 225, 228, 229, 230, 232, 236, 238, 245, 246, 251, 252, 253, 254, 265, 268, 270], "30": [2, 13, 24, 26, 28, 29, 32, 33, 34, 37, 46, 48, 49], "300": [13, 20, 21, 53, 61], "300m": 38, "300mb": 13, "304": 48, "3043": 196, "305mb": 26, "307": 16, "307m": 38, "307mb": 34, "3087291770605716": 50, "309": 50, "309mb": [13, 26], "30e": 5, "30it": 24, "31": [2, 4, 20, 24, 34, 38, 41, 50], "311": [38, 43, 66], "312": 45, "313": [6, 17, 25, 66], "3132": 14, "314": [29, 30, 66], "314m": 38, "314mb": 13, "315": 49, "315mb": 13, "317mb": 2, "31it": 34, "32": [2, 4, 6, 7, 10, 13, 14, 16, 23, 24, 26, 28, 29, 31, 32, 34, 35, 37, 40, 42, 45, 48, 49, 50, 54, 61, 80, 92, 111, 121, 127, 128, 144, 176, 181, 187, 190, 198, 199, 236, 238], "320": [23, 182, 189], "320x320": 38, "3223": 180, "322m": [34, 38], "322mb": 2, "323mb": 37, "324mb": [2, 34], "326": 47, "327mb": 2, "328": [45, 51, 66], "329m": 38, "329mb": 2, "32it": [24, 34], "32x32": [16, 49, 181, 187, 190, 198, 236, 238], "33": [5, 24, 28, 32, 33, 34, 36, 38, 49, 50, 51, 66], "332": [2, 3, 66], "332mb": 34, "333": 220, "334": 5, "334139506022137": 5, "334mb": 34, "335": 2, "336m": 38, "337mb": 34, "33it": [24, 34, 46], "34": [7, 24, 34, 38], "340mb": 34, "342": 17, "342mb": 34, "343m": 38, "344mb": [34, 37], "345mb": 34, "346": [40, 42], "346022415161134": [40, 42], "3479": 13, "348": 220, "348mb": 37, "349": 49, "34it": [34, 41, 46], "34m": 49, "35": [11, 13, 16, 23, 24, 26, 34, 38], "351m": 38, "354m": 34, "355": 50, "3553": 196, "357": 119, "357m": 34, "358m": 38, "35it": [24, 37], "36": [24, 34, 38], "360": [200, 247], "3608000": 2, "3609": 37, "362": 24, "3624": 180, "365": 39, "3650075554457994": 39, "365m": 38, "36it": 41, "37": [24, 33, 34, 38, 48, 49, 50], "371": [46, 47], "372": 0, "3731": 186, "373m": 38, "374": 48, "3744": 189, "375": 39, "3750401284061127": 39, "376": [15, 17, 66], "38": [24, 34], "380m": 38, "3856": 200, "385k": [6, 20, 26, 50], "388799536718082": 38, "388m": 38, "389": 38, "38e": 5, "38it": 24, "39": [24, 34, 38], "3929": [26, 142], "3938": [26, 142], "395e": 11, "395m": 38, "396": 45, "3986": [178, 186], "399m": 38, "3c353_gdth": 0, "3conv": 132, "3d": [17, 18, 22, 37, 66, 71, 112, 137, 138, 161, 174, 184, 187, 192, 212, 215, 225, 232, 253, 260, 261, 265, 268], "3f": 13, "3k": 10, "3m": 50, "3mb": 38, "3mib": [16, 38, 50], "3x3": [176, 177, 180, 186, 187, 196, 200], "4": [0, 2, 4, 5, 6, 9, 11, 13, 15, 16, 19, 21, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 38, 39, 40, 42, 45, 46, 47, 48, 49, 50, 53, 54, 59, 61, 70, 71, 74, 79, 80, 92, 113, 114, 117, 121, 123, 126, 130, 131, 132, 135, 136, 141, 143, 144, 145, 174, 175, 179, 187, 190, 200, 203, 204, 207, 222, 225, 226, 227, 228, 234, 255, 265, 267, 268], "40": [23, 24, 32, 33, 34, 37, 41], "400": [13, 34, 36, 66], "402": 26, "40240923563639325": 26, "403": [12, 17, 41, 42, 46, 66], "4033": [178, 186], "4099398": 98, "40it": [7, 46], "41": [24, 28, 34, 38, 48, 66], "411": [31, 38], "4114185158882959": 38, "416": 48, "42": [8, 24, 34, 38, 50], "421": 16, "422": [24, 25, 66], "424": 36, "4290": 189, "43": [19, 20, 22, 24, 33, 34, 66], "432": [4, 17, 66], "4322": 180, "433": [37, 43, 66], "4375": 0, "4385263457617437": 41, "439": 41, "43it": [24, 37], "44": [24, 34, 38, 42, 50], "440": [27, 30, 66], "441": 48, "444737": [40, 41, 42], "444867": [2, 37], "4453": 182, "4468231766275783": 26, "447": [14, 26], "449": 45, "44it": [2, 24, 31, 32], "45": [6, 7, 13, 14, 15, 24, 34, 200], "4542": [41, 42, 46, 196], "456": [50, 51, 66], "4564": 189, "457": 66, "458": 47, "46": [0, 24, 34, 38, 46, 47, 51, 66], "460": [133, 134], "469": [11, 17, 66], "46it": [2, 24], "47": [24, 26, 31, 33, 34, 45], "470": 31, "471": 45, "4710702896118164": 45, "475": 2, "47516133287508394": 2, "479": [133, 134], "48": [2, 12, 20, 24, 26, 34, 36, 38, 46, 50, 130, 198], "482": 49, "4860": 200, "4882": 200, "489e": 11, "49": [24, 34, 38, 83], "492": 133, "4935460805892946": 2, "494": 2, "4947767872317561": 2, "495": 2, "4a": 204, "4e": 2, "4m": [2, 13, 26, 38, 50], "4mib": [38, 49], "4x": 182, "4x4": [179, 200], "5": [0, 2, 4, 5, 7, 10, 11, 12, 13, 14, 15, 16, 19, 23, 24, 26, 28, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 54, 55, 59, 61, 63, 70, 71, 93, 95, 96, 99, 100, 107, 113, 119, 127, 128, 132, 133, 134, 136, 141, 143, 145, 152, 175, 176, 180, 187, 200, 201, 203, 204, 205, 209, 224, 229, 230, 235, 236, 238, 242, 246, 248, 251, 252, 253, 254, 255, 256, 258, 267, 270], "50": [0, 2, 9, 10, 15, 16, 23, 24, 32, 33, 34, 37, 38, 39, 40, 49, 54, 61, 70, 83, 132, 143, 145, 156, 170, 187, 192, 197, 207, 246, 251, 252, 253, 254, 255], "500": 5, "5000": [0, 23, 70], "501": 40, "5013128598076784": 40, "502": [39, 43, 66], "505": 47, "507": 41, "5073731023586285": 41, "50742681": 41, "50799597": 46, "50th": 9, "51": [2, 11, 21, 24, 34, 38, 43, 83, 225], "512": [55, 70, 74, 77, 113, 117, 124, 225], "513": 37, "51it": [2, 24, 37], "52": [2, 22, 24, 34, 38, 50], "526": [45, 133], "5281": [200, 209], "5282": 176, "529": [2, 47], "52it": [24, 32], "53": [24, 33, 34, 38, 50], "532": 51, "534": 47, "538": [16, 47], "53it": 24, "54": [0, 24, 26, 34, 50], "5410": [178, 186], "543": 47, "544": [7, 17, 66], "54425024": 42, "54879093170166": 41, "549": 41, "54it": 33, "55": [5, 11, 24, 28, 34, 38], "553": 47, "5567108": 185, "558": [40, 42], "55it": 24, "55m": 27, "56": [13, 24, 34, 38, 48], "5684": [176, 178, 186], "56it": [32, 37], "56m": 35, "57": [0, 7, 24, 28, 33, 34, 38, 45, 200, 209], "571": 45, "5720": 200, "575": 28, "576": 49, "5779": 176, "579": 47, "57it": [24, 32], "58": [24, 34, 38, 220], "583": 2, "5842": 207, "586": 16, "5870": 14, "58it": [24, 32], "59": [24, 26, 34, 38, 50], "594": [49, 51, 66], "5976": 0, "59it": [32, 37], "5a": 204, "5d": [11, 60, 80, 92], "5e": [16, 38, 39, 40, 42, 45, 47, 50], "5e3": 35, "5j": 13, "5m": [16, 26, 34, 38, 50], "5mb": [10, 40], "5mib": [16, 38], "5x5": [31, 33], "6": [0, 4, 11, 16, 19, 23, 24, 32, 33, 34, 37, 41, 43, 45, 46, 47, 48, 49, 50, 51, 70, 76, 113, 121, 128, 130, 132, 144, 152, 153, 223, 228], "60": [21, 24, 32, 33, 34, 70], "6051660": 46, "60it": [24, 32, 41], "61": [2, 24, 34, 38], "610797882080078": 48, "611": 48, "6160": 176, "6162207": 41, "61e": 32, "61it": 32, "62": [24, 34, 38], "6209": 189, "622592": [41, 46], "623": 38, "6233009603086459": 38, "626": 48, "62it": [24, 32], "63": [13, 24, 33, 34, 38, 50], "633": 40, "633205032348634": 40, "638": 48, "639": 49, "63it": [24, 32], "64": [4, 7, 12, 14, 15, 20, 21, 24, 27, 28, 33, 34, 38, 39, 40, 46, 47, 50, 113, 115, 116, 117, 120, 124, 129, 131, 226, 227, 233, 234], "6418031": 86, "643": 2, "6454185": 42, "647": [47, 51, 66], "648": [40, 43, 66], "64it": [5, 32], "64x64": [15, 33, 34], "65": [23, 24, 34, 37], "6500308": 41, "6536": 200, "655360": 41, "657634639739991": 39, "658": 39, "65it": 37, "66": [24, 31, 34, 37, 38, 130], "667": [48, 51, 66], "6687": 14, "66it": 46, "67": [5, 24, 28, 32, 33, 34, 37, 38, 50], "671": [0, 1, 47, 66], "6714502": [99, 100], "6752": 176, "677": 47, "678": 46, "679": 46, "67e": 14, "67it": [7, 24], "68": [12, 16, 24, 34, 38, 68], "689": 39, "689457225799561": 39, "68it": 24, "69": [2, 7, 24, 34, 38], "693": 2, "697": 2, "6995": 200, "69it": [24, 31], "6m": 2, "6mib": [38, 50], "7": [0, 5, 12, 16, 20, 23, 24, 32, 33, 34, 37, 38, 45, 47, 48, 49, 50, 61, 70, 113, 114, 127, 174, 175, 181, 186, 195, 207, 233, 238], "70": [2, 24, 32, 33, 34, 38, 50, 186], "707": [33, 36, 66], "70e": [5, 11], "70it": 7, "70m": 2, "71": [10, 13, 24, 26, 32, 34, 38, 50], "7137": 200, "717": 50, "7193": [178, 186], "72": [2, 16, 24, 34, 38, 133], "720896": 42, "722": 47, "723": 48, "73": [16, 24, 33, 34, 38, 49], "7302": 180, "7340": 200, "735633850097656": 5, "736": 5, "738": [32, 36, 41, 66], "7380147046892569": 41, "739k": 24, "74": [24, 34, 38, 50], "7412": 13, "7444": 230, "75": [15, 24, 33, 34, 38, 47, 49, 50, 182, 248], "755": [13, 17, 66], "75595": 48, "757126": 0, "75it": 35, "76": [24, 34, 37, 49], "768": 77, "769": 47, "76it": 33, "77": [24, 33, 34, 38], "771": [19, 22, 66], "776": 47, "7769": 176, "777": 45, "7791949": 46, "77it": [24, 33, 41], "78": [0, 9, 24, 34, 46, 47], "786": [40, 42], "7863402359700375": [40, 42], "786432": 46, "789": 37, "78it": [24, 33], "79": [24, 32, 34, 35, 38], "795": [46, 47], "7969": 182, "797": 47, "79it": 24, "7be5be79": 26, "7db": 41, "7m": [23, 50], "7mib": [38, 50], "8": [0, 2, 4, 5, 7, 11, 15, 16, 20, 21, 23, 24, 26, 28, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 54, 61, 70, 74, 93, 96, 113, 121, 123, 130, 132, 134, 135, 144, 159, 174, 175, 187, 190, 207, 226, 227, 228, 233, 234, 268, 270], "80": [7, 23, 24, 32, 33, 34], "8064": 180, "807": 48, "80it": [24, 33], "81": [7, 13, 24, 34, 38], "8137": 182, "817": 2, "8181": 176, "819": 45, "81it": [5, 24], "82": [24, 26, 34, 35, 37], "826": 37, "82it": 33, "83": [24, 33, 34, 35, 37, 38], "8307932": [200, 209], "835": 30, "8380": 186, "83it": [24, 33, 42], "84": [13, 24, 32, 34, 38, 50], "840": [46, 51, 66], "843": 48, "8457": 200, "84883312141983502": 16, "849": 16, "84it": [24, 33], "85": [0, 24, 26, 28, 34, 236], "850": [28, 30, 66], "8518": 196, "856": [42, 43, 48, 66], "8567": 186, "859": 16, "85it": [24, 33], "86": [2, 24, 34, 35, 38], "8607": 13, "8622": 189, "864": 50, "8668": 196, "86it": [24, 33], "87": [2, 24, 27, 33, 34, 38], "871": 2, "876": 42, "876024627685545": 42, "877": 48, "87it": [5, 33], "87k": 26, "88": [13, 24, 28, 34, 38], "889": 2, "88it": 33, "88m": 16, "89": [24, 34], "891": [23, 25, 66], "8994": 232, "8996505737304688": 49, "8996507326761884": 16, "89it": [24, 33], "8a": 204, "8m": [16, 28, 34, 37, 38, 39, 49, 50], "8mib": [16, 38, 49, 50], "8x64x64": [226, 227, 234], "9": [2, 4, 5, 11, 16, 21, 24, 26, 27, 28, 32, 33, 34, 35, 37, 38, 45, 47, 48, 49, 70, 96, 113, 126, 141, 187, 223, 228, 245], "90": [4, 19, 24, 32, 33, 34, 35, 38, 54, 123], "900": [16, 38, 49], "9002": 200, "902": [13, 28], "9026777601592963": 5, "903": 5, "908": 16, "909": 48, "90it": 33, "90m": 37, "91": [24, 32, 34], "9127841": 197, "915": 2, "91it": [24, 33], "92": [2, 24, 34, 38], "921": 16, "921340942382812": 16, "92it": 33, "93": [7, 24, 33, 34], "9332": 176, "9360": 200, "93it": [7, 33], "94": [23, 24, 34, 38], "9493": 200, "95": [13, 24, 34, 38, 50, 207], "956": 48, "9577798": 93, "95it": 24, "96": [2, 14, 23, 24, 34], "9605e": 61, "96it": [24, 46], "97": [24, 33, 34, 37, 38], "973": 38, "9793": 200, "97it": 24, "98": [24, 28, 34, 37], "983": 22, "9851": 13, "9860": 182, "9897": 200, "99": [24, 27, 34, 38, 45, 48, 134], "9912422": [41, 42, 46], "996": 50, "9960276285807295": 50, "9971": 200, "999": 13, "99e": 21, "9k": 24, "9m": [28, 38, 50], "9mib": [38, 50], "A": [0, 5, 10, 14, 16, 17, 18, 19, 20, 21, 23, 24, 27, 28, 29, 31, 33, 34, 39, 44, 45, 46, 47, 48, 49, 56, 58, 59, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 83, 87, 93, 96, 98, 99, 100, 110, 117, 119, 133, 134, 137, 141, 143, 145, 146, 147, 151, 164, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 203, 206, 207, 210, 211, 212, 213, 214, 215, 216, 217, 222, 224, 226, 227, 229, 230, 232, 233, 234, 241, 242, 243, 245, 256, 261, 263, 265, 270], "And": [130, 136], "As": [0, 2, 19, 23, 24, 26, 33, 34, 37, 38, 39, 161], "At": [80, 92, 95, 113, 130], "By": [4, 67, 80, 81, 87, 88, 90, 92, 95, 96, 97, 98, 130, 141, 143, 151, 156, 157, 187, 190, 192, 240, 241, 242, 244, 246, 248], "For": [0, 2, 4, 7, 10, 11, 16, 19, 20, 21, 24, 27, 29, 33, 34, 37, 38, 41, 45, 46, 47, 49, 50, 53, 55, 56, 57, 59, 61, 67, 71, 96, 102, 104, 130, 133, 134, 141, 156, 161, 172, 176, 188, 197, 211, 214, 223, 226, 227, 234, 241, 242, 246, 255], "If": [0, 10, 12, 14, 24, 38, 39, 46, 47, 49, 52, 61, 62, 65, 67, 68, 69, 70, 72, 75, 77, 78, 79, 80, 86, 91, 96, 98, 99, 100, 102, 104, 105, 106, 107, 108, 109, 110, 117, 118, 119, 120, 123, 124, 131, 132, 137, 141, 144, 146, 151, 152, 158, 161, 162, 163, 164, 165, 174, 175, 176, 178, 181, 182, 183, 184, 186, 187, 188, 190, 192, 193, 194, 195, 196, 198, 199, 200, 202, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 228, 231, 232, 240, 241, 242, 243, 245, 255, 256, 257, 258, 260, 262, 263, 265, 268], "In": [0, 2, 4, 5, 8, 9, 10, 11, 12, 13, 15, 16, 19, 20, 21, 23, 24, 26, 27, 28, 31, 32, 33, 34, 35, 38, 39, 40, 42, 45, 46, 47, 48, 49, 50, 54, 57, 59, 61, 63, 67, 71, 74, 79, 92, 119, 134, 140, 142, 147, 164, 187, 198, 200], "It": [4, 11, 12, 20, 21, 24, 26, 38, 49, 54, 58, 61, 63, 64, 67, 68, 78, 79, 81, 89, 101, 119, 120, 126, 149, 152, 172, 174, 175, 176, 181, 187, 188, 190, 192, 198, 199, 204, 205, 236, 245, 259], "No": [0, 121, 144, 189, 228], "On": 24, "One": [4, 34, 46], "The": [2, 4, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 24, 26, 27, 28, 29, 31, 32, 35, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 74, 75, 77, 78, 79, 80, 81, 83, 87, 88, 90, 92, 93, 95, 96, 97, 98, 99, 100, 103, 107, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 151, 152, 155, 156, 166, 167, 168, 169, 170, 174, 176, 177, 178, 179, 180, 182, 185, 186, 187, 188, 189, 190, 191, 192, 195, 197, 198, 200, 203, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 222, 224, 225, 226, 227, 229, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 253, 255, 259, 265, 267, 268, 269], "Their": 48, "Then": [4, 24, 123, 207], "There": [0, 34, 42, 70, 74, 150, 195], "These": [2, 15, 37, 46, 47, 56, 61, 156, 200, 251, 252, 254, 256], "To": [4, 11, 15, 23, 33, 41, 45, 49, 50, 60, 71, 74, 80, 92, 93, 96, 130, 156, 221, 231, 270], "With": [8, 13, 34], "_": [0, 2, 13, 19, 20, 21, 24, 27, 33, 34, 39, 46, 47, 49, 55, 59, 61, 74, 83, 88, 103, 105, 106, 107, 108, 109, 123, 133, 134, 141, 143, 146, 147, 148, 149, 154, 156, 157, 158, 159, 161, 163, 164, 165, 166, 168, 169, 170, 178, 229, 237, 238], "_0": 34, "_1": [19, 46, 141, 145, 147, 148], "_2": [0, 2, 5, 19, 20, 21, 34, 39, 42, 46, 47, 49, 59, 82, 83, 93, 98, 99, 100, 101, 133, 134, 141, 145, 146, 147, 149, 160, 200, 241, 242], "__add__": [187, 192, 232, 250, 259], "__class__": 37, "__init__": [0, 5, 8, 14, 27, 28, 31, 48, 80, 92, 102, 104, 105, 106, 107, 108, 109, 240], "__iter__": 8, "__mul__": [186, 187, 192, 250, 259], "__name__": 37, "__neg__": 259, "__sub__": 259, "__truediv__": 259, "_c": [7, 15, 35, 232], "_f": [63, 151, 256], "_g": [59, 63, 151, 256], "_i": [91, 260], "_k": 2, "_m": 96, "_n": [137, 138], "_p": 86, "_t": [33, 34, 237, 238], "_vf": 37, "_x": [143, 187, 192], "_z": 2, "a_": [39, 88, 176, 187, 191, 192], "a_1": [12, 40, 41, 90, 96, 186, 187, 192], "a_2": [12, 40, 41, 90, 96, 186, 187, 192], "a_a_adjoint": [178, 187], "a_adjoint": [0, 7, 10, 14, 15, 20, 21, 27, 29, 31, 32, 35, 46, 47, 49, 61, 67, 141, 143, 145, 174, 175, 176, 178, 181, 182, 187, 190, 195, 199, 200, 203, 243, 245], "a_adjoint_a": [178, 187], "a_dagg": [0, 9, 12, 13, 14, 15, 24, 41, 48, 61, 67, 98, 176, 178, 182, 185, 187, 191, 192, 197, 200, 243], "a_forward": [141, 143, 145], "a_g": 88, "a_t": [34, 237], "a_vjp": [143, 187, 191, 192], "aa": [178, 187], "ab": [4, 11, 32, 33, 35, 81, 82, 83, 88, 103, 120, 123, 127, 128, 176, 181, 198, 236, 237, 238, 241, 242, 246, 253], "aberr": [4, 11], "abl": [8, 33, 34], "about": [0, 13, 42, 54, 56], "about_mapstyle_vs_iter": 8, "abov": [0, 2, 37, 59, 61, 141, 164, 182, 189, 270], "abs_angl": [13, 139], "absenc": 155, "absolut": [132, 139, 172, 173, 187, 192], "abstract": [86, 98, 99, 100, 185, 197], "abus": 151, "ac": 72, "acar": [96, 228], "acceler": [15, 31, 38, 45, 61, 114, 141, 145, 182, 189, 212, 215, 222, 226, 227, 234, 241, 255], "accept": 139, "access": [8, 37, 71, 74, 77, 78], "accord": [93, 113, 179, 198, 222, 223, 226, 227, 228, 229, 234], "accordingli": [67, 121, 144], "account": [31, 52, 56, 117], "accur": 4, "achiev": [41, 80, 92, 93, 141], "acknowledg": 52, "acquir": 13, "acquisit": [38, 61, 141, 187, 192, 198, 240, 241, 242], "across": [10, 38, 46, 47, 49, 50, 67, 79, 141, 198, 222, 226, 227, 234, 255, 267], "act": [7, 42, 59, 61, 135, 141, 188], "act_mod": [117, 124], "action": [123, 251, 252, 253, 254], "activ": [4, 11, 117, 120, 124, 125, 129, 224, 225], "actual": [34, 92, 151], "ad": [12, 18, 33, 58, 64, 93, 184, 187, 188, 193, 194, 201, 202, 232], "ad_": 118, "adam": [2, 7, 16, 24, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 118, 245], "adapt": [6, 41, 56, 60, 64, 80, 85, 90, 92, 93, 95, 96, 98, 99, 100, 113, 119, 129, 130, 132, 133, 134, 135, 141, 142, 200, 209, 228], "adapt_model": [41, 80, 85, 92, 93, 95, 96], "add": [0, 5, 6, 19, 20, 21, 26, 28, 61, 80, 92, 93, 130, 132, 183, 184, 187, 188, 192, 193, 194, 201, 202, 227, 259], "add_safe_glob": [24, 26, 38, 49], "addit": [2, 13, 34, 56, 59, 67, 82, 93, 117, 124, 130, 141, 149, 162, 176, 187, 190, 200, 245, 257, 258], "addition": [34, 245, 248], "address": 52, "adj_project": 0, "adjnufftobj": 0, "adjoint": [0, 14, 20, 21, 29, 48, 49, 58, 61, 133, 134, 144, 159, 174, 175, 176, 178, 181, 182, 187, 190, 195, 199, 200, 203, 210, 211, 212, 214, 215, 218, 219], "adjoint_funct": 187, "adjointness_test": [12, 14, 187], "adjust": [5, 178, 227], "adler": 48, "admit": 19, "admm": [5, 59, 65, 145, 162, 163, 256, 257, 258], "adv": [2, 105, 106, 107, 108, 109], "advanc": [1, 4, 11, 66, 113], "advantag": 31, "adversari": [3, 66, 67, 73, 78, 79, 85, 97, 102, 103, 104, 105, 106, 107, 108, 109, 113, 115, 116, 122, 129, 136, 174, 187, 192, 230, 232, 245, 261, 265], "adversarial_loss": [102, 104], "adversarialoptim": [2, 245], "adversarialschedul": 2, "adversarialtrain": [2, 56], "advis": 34, "af_": 7, "aff": [37, 251], "affect": [61, 79, 146, 187, 192], "affin": [37, 113, 246], "after": [0, 2, 10, 19, 24, 31, 41, 52, 130, 132, 145, 195, 240, 245, 269, 270], "afterward": [48, 86, 111, 114, 116, 125, 126, 127, 128, 131, 208, 209], "again": [68, 69, 70, 72, 75, 77, 78], "aghabigl": 0, "agnost": [60, 135], "ahead": 245, "ai": [0, 67], "aim": [0, 52, 63], "airi": [0, 4, 11], "al": [0, 2, 5, 7, 20, 21, 26, 28, 33, 34, 37, 54, 60, 96, 105, 106, 107, 108, 109, 112, 113, 115, 116, 118, 119, 120, 122, 129, 133, 136, 227, 228, 246, 253], "alexnet": 26, "algebra": 31, "algorithm": [0, 10, 13, 14, 18, 30, 36, 38, 49, 51, 59, 65, 66, 67, 68, 73, 77, 79, 85, 97, 113, 120, 126, 127, 128, 133, 134, 138, 141, 142, 143, 145, 146, 147, 149, 151, 154, 156, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 178, 181, 184, 187, 192, 198, 200, 206, 227, 237, 238, 239, 240, 241, 242, 243, 255, 256, 257, 258, 260, 261, 263, 265, 266, 269], "alia": [70, 71, 74, 244], "alias": 207, "align": [19, 27, 33, 34, 49, 55, 63, 163, 164, 165, 166, 167, 168, 169, 170, 206, 237, 238, 256], "all": [0, 4, 5, 6, 7, 8, 13, 16, 18, 19, 26, 27, 28, 29, 34, 37, 38, 39, 40, 42, 45, 46, 47, 49, 50, 52, 53, 54, 56, 57, 59, 61, 66, 67, 68, 71, 72, 74, 76, 77, 78, 80, 85, 86, 92, 96, 111, 114, 116, 117, 118, 121, 123, 125, 126, 127, 128, 130, 131, 137, 141, 143, 144, 151, 153, 161, 162, 186, 200, 208, 209, 217, 221, 223, 228, 231, 256, 257, 258, 267, 270], "allclos": [13, 61, 187, 203], "allow": [24, 26, 38, 49, 134, 175, 186, 198, 245, 259], "allowlist": [24, 26, 38, 49], "almost": 223, "alon": [56, 81], "along": [0, 5, 20, 21, 27, 29, 48, 128, 141, 145, 182, 206, 243, 246, 247, 249, 250, 251, 252, 253, 254, 259], "alongsid": 245, "alpha": [31, 33, 34, 35, 93, 119, 124, 125, 237, 238, 240, 241, 242], "alpha_j": 34, "alpha_k": 166, "alpha_t": 34, "alphas_cumprod": 33, "alreadi": [29, 68, 69, 70, 72, 75, 77, 78], "also": [2, 4, 11, 12, 13, 14, 15, 29, 32, 34, 41, 42, 46, 47, 52, 54, 55, 56, 59, 61, 62, 63, 64, 65, 67, 79, 117, 119, 120, 124, 131, 132, 137, 147, 156, 158, 175, 178, 182, 186, 187, 217, 245], "altern": [2, 8, 26, 29, 33, 34, 60, 151, 163, 182, 186], "although": [86, 96, 111, 114, 116, 125, 126, 127, 128, 131, 156, 208, 209], "altogeth": 41, "alwai": [34, 59, 198, 228], "amazonaw": [41, 42, 46], "ambientgan": [108, 109, 113], "among": [4, 8, 20, 21, 26, 48, 57, 59, 70, 74, 161], "amount": [29, 33, 58, 242], "amplitud": [11, 140, 202, 225], "an": [0, 2, 4, 5, 6, 8, 10, 13, 14, 15, 16, 17, 18, 23, 24, 26, 27, 28, 31, 32, 34, 35, 37, 38, 39, 42, 46, 47, 49, 52, 53, 56, 59, 60, 61, 63, 65, 66, 67, 74, 80, 82, 92, 98, 99, 100, 113, 114, 117, 118, 119, 120, 123, 124, 129, 131, 133, 134, 137, 138, 141, 149, 151, 152, 155, 156, 161, 162, 164, 166, 171, 176, 178, 182, 184, 186, 187, 191, 192, 196, 198, 206, 223, 225, 228, 237, 238, 240, 241, 242, 243, 245, 246, 248, 253, 255, 256, 257, 258, 260, 261, 262, 263, 265, 268, 270], "analog": 245, "ancestr": 34, "anderson": [45, 141, 145, 255], "anderson_acceler": [45, 141, 145], "anderson_acceleration_backward": [45, 255], "anderson_acceleration_forward": 45, "anderson_acceleration_step": 145, "anderson_history_s": 45, "andrew": 65, "angap": 11, "angl": [4, 11, 13, 15, 18, 23, 25, 29, 41, 48, 54, 66, 67, 76, 121, 143, 144, 150, 152, 153, 156, 178, 180, 187, 188, 192, 200, 202, 206, 208, 209, 246, 247, 260, 265], "angular": 11, "ani": [2, 6, 8, 13, 14, 24, 26, 38, 49, 52, 54, 55, 60, 63, 65, 67, 80, 81, 87, 88, 90, 92, 96, 97, 98, 103, 113, 123, 152, 164, 182, 187, 189, 192, 200, 209, 227, 234, 243, 244, 255, 256], "anim": 270, "anim_kwarg": 270, "anim_writ": 270, "anisotrop": 206, "anneal": 95, "annot": 74, "anoth": [12, 80], "ansi": 4, "ansi_standard_indic": 4, "anti": 207, "antiproportion": 188, "ap": 132, "apertur": [11, 225], "appear": [0, 61], "append": [13, 34, 259], "appli": [0, 2, 4, 7, 19, 20, 21, 24, 27, 31, 32, 33, 34, 35, 41, 46, 50, 55, 59, 60, 70, 73, 92, 96, 112, 119, 123, 133, 134, 136, 137, 139, 141, 158, 159, 161, 174, 175, 178, 181, 182, 186, 187, 189, 190, 191, 195, 197, 198, 199, 208, 212, 215, 223, 228, 246, 247, 248, 249, 251, 252, 253, 254], "applic": [0, 61, 133, 134], "apply_nois": [81, 88], "approach": [0, 39, 48, 57, 110, 113], "appropri": [33, 80, 92, 96, 123, 137, 149], "approx": [31, 34, 35, 58, 83, 95, 200], "approxim": [0, 11, 15, 24, 29, 31, 35, 47, 54, 62, 93, 95, 98, 99, 100, 123, 137, 144, 158, 161, 200, 220, 223, 228, 237, 241], "ar": [0, 2, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 37, 38, 39, 40, 42, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 67, 70, 71, 74, 79, 80, 87, 88, 91, 92, 93, 95, 96, 103, 113, 118, 120, 127, 128, 130, 134, 136, 137, 138, 139, 141, 145, 151, 155, 161, 163, 164, 165, 168, 174, 176, 177, 178, 181, 182, 185, 186, 187, 189, 190, 192, 196, 199, 200, 206, 208, 209, 213, 217, 220, 221, 223, 224, 226, 227, 228, 231, 232, 233, 237, 240, 241, 242, 243, 245, 246, 247, 251, 252, 254, 256, 260, 262, 263, 265, 267, 268, 269, 270], "arang": [80, 92, 208, 209], "arbitrari": [13, 24, 26, 33, 34, 38, 49, 53, 137], "arch": 26, "arch_util": 26, "architectur": [2, 7, 10, 16, 33, 38, 40, 41, 42, 45, 49, 50, 54, 55, 63, 65, 110, 111, 114, 117, 120, 124, 130, 131, 132, 136, 258], "arg": [0, 5, 19, 24, 28, 47, 48, 49, 55, 59, 102, 104, 113, 116, 121, 133, 134, 137, 138, 141, 143, 144, 145, 148, 153, 154, 156, 157, 158, 159, 160, 161, 171, 187, 192, 222, 223, 226, 227, 228, 234, 244, 247, 248, 249, 250, 255, 256, 270], "argentina": [7, 31, 32, 35], "argmin": [2, 33, 119, 146, 147, 149, 238], "args_model": 82, "argument": [8, 37, 53, 82, 121, 130, 141, 144, 145, 150, 162, 216, 244, 245, 256, 257, 258], "aris": 24, "around": [9, 64, 206], "arrai": [0, 15, 33, 74, 119, 236, 238, 260], "arridg": 48, "arrow": 68, "art": [0, 65], "artefact": 54, "artifact": [39, 67, 110, 132, 200, 209, 243, 244], "artifact2artifact": [80, 221], "artifact2artifactloss": 221, "artifact_remov": 49, "artifactremov": [16, 39, 40, 41, 42, 57, 176, 187, 190, 200], "arxiv": [32, 81, 82, 83, 88, 103, 110, 120, 123, 127, 128, 176, 181, 230, 236, 237, 238, 241, 242, 246, 253], "asarrai": 33, "ask": 52, "assert": [0, 13, 61], "assign": [79, 190], "associ": [0, 9, 15, 33, 46, 53, 54, 67, 79, 80, 81, 85, 87, 88, 90, 93, 95, 96, 98, 99, 100, 102, 104, 133, 134, 141, 143, 145, 149, 159, 217, 240], "assum": [33, 34, 81, 106, 107, 109, 119, 146, 175, 200, 208, 209, 241, 242], "assumpt": [164, 237], "astigmat": 4, "at_next": 34, "atan": 29, "aten": [9, 37], "atmospher": [61, 185], "attent": [29, 119, 130, 132], "attn_drop_r": 132, "attr": 37, "attribut": [6, 33, 57, 113, 163, 164, 165, 184, 188, 193, 194, 201, 202, 269], "atu": 128, "au": [146, 147, 149], "augment": [56, 76, 79, 81, 88, 270], "author": [33, 34, 48, 54, 93, 119, 132], "authorship": 52, "auto_exampl": [1, 3, 17, 22, 25, 30, 36, 43, 44, 51], "auto_examples_jupyt": 18, "auto_examples_python": 18, "autocalibr": 228, "autoencod": [80, 92], "autograd": [34, 61], "automat": [5, 11, 13, 29, 34, 52, 54, 61, 143, 156, 157, 187, 192], "aux": 141, "aux_x": 34, "auxiliari": [133, 141, 145], "avail": [0, 4, 8, 16, 19, 49, 53, 54, 55, 61, 63, 117, 119, 120, 124, 131, 132, 137, 138, 146, 147, 161, 187, 220], "averag": [14, 19, 32, 35, 41, 54, 61, 70, 93, 96, 117, 123, 124, 150, 174, 175, 187, 188, 243, 260], "avg": [24, 67], "avg16": 70, "avg2": 70, "avg4": 70, "avg8": 70, "avgpool": [117, 124], "avoid": [7, 8, 31, 118, 140, 153, 240, 245], "awgn": 34, "ax": [0, 5, 20, 21, 23, 24, 35, 46, 47, 49, 61, 62, 141, 144, 145, 147, 149, 164, 172, 176, 178, 187, 200, 206, 265], "ax_": 31, "ax_cur": 127, "ax_k": [46, 47], "axi": [19, 33, 200, 209, 246], "axial": 11, "b": [2, 7, 9, 10, 11, 13, 23, 24, 26, 27, 28, 31, 32, 34, 35, 37, 38, 39, 40, 41, 42, 47, 49, 56, 60, 61, 80, 91, 92, 98, 99, 100, 126, 132, 135, 140, 143, 146, 149, 170, 172, 174, 182, 189, 191, 196, 197, 199, 203, 210, 211, 212, 213, 214, 215, 218, 219, 220, 221, 222, 226, 231, 233, 234, 240, 241, 242, 246, 247, 248, 249, 250, 251, 252, 253, 254, 260, 265, 268, 270], "b4": [7, 31, 32, 35], "b_": [9, 196, 197], "b_dagger": 191, "b_i": [98, 140], "b_t": [34, 237], "back": [0, 46, 47, 67, 200], "backbon": [7, 16, 46, 57, 63, 95, 113], "backbone_gener": 113, "backbone_net": [39, 80, 92, 110, 135], "backend": 0, "background": [9, 155, 197], "backproject": [0, 15, 24, 46, 47, 48, 128], "backpropag": [34, 82, 83, 112, 152], "backtrack": [5, 21, 28, 141], "backtrak": 5, "backward": [5, 24, 45, 63, 65, 67, 106, 107, 109, 146, 147, 200, 245, 255], "ball": [49, 146, 147], "band": [46, 161], "bar": [16, 34, 38, 39, 40, 42, 45, 46, 47, 48, 49, 50, 67, 79, 113, 238, 243], "barbara": [4, 27], "base": [2, 7, 23, 31, 34, 48, 53, 55, 56, 59, 61, 62, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 259], "base_dir": [5, 6, 10, 13, 16, 19, 20, 21, 26, 27, 28, 29, 38, 39, 40, 42, 45, 46, 47, 48, 49, 50], "basedeq": [63, 257], "baselin": 41, "basemaskgener": [226, 227, 234], "baseoptim": [26, 28, 29, 59, 142, 162, 256, 258], "baseunfold": [63, 255, 257, 258], "basi": [10, 19, 46, 49], "basic": [15, 17, 61, 65, 66, 174, 175, 187, 245, 246], "basplib": 0, "batch": [6, 8, 20, 21, 24, 26, 28, 38, 39, 46, 47, 60, 67, 74, 76, 79, 80, 85, 92, 95, 102, 104, 112, 117, 118, 119, 120, 121, 129, 135, 136, 140, 141, 143, 144, 146, 149, 152, 171, 182, 186, 189, 197, 203, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 234, 235, 243, 246, 250, 251, 252, 253, 254, 260, 265, 267, 268], "batch_dimens": 171, "batch_norm": [2, 16, 37, 129, 136], "batch_siz": [2, 4, 5, 6, 8, 11, 16, 23, 24, 26, 28, 34, 38, 39, 40, 42, 45, 46, 47, 48, 49, 50, 53, 61, 74, 79, 84, 89, 91, 94, 98, 99, 100, 101, 117, 121, 127, 128, 144, 186, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235], "batch_step": [221, 223, 228, 231], "batchnorm": 136, "batchnorm2d": [113, 136], "bay": 34, "bayer": [15, 179], "bayer_filt": 179, "bayesian": 35, "beam": [200, 209], "becaus": [10, 49], "beck": 134, "been": [0, 2, 5, 6, 7, 16, 26, 28, 29, 37, 38, 39, 40, 41, 42, 45, 46, 47, 49, 50, 67, 68, 69, 72, 75, 77, 78, 90, 145], "befor": [2, 33, 34, 49, 80, 83, 85, 92, 93, 96, 118, 132, 145, 162, 181, 186, 194, 256, 257, 258, 269], "begin": [0, 12, 19, 20, 21, 24, 27, 33, 34, 46, 49, 55, 59, 63, 67, 141, 146, 161, 163, 164, 165, 166, 167, 168, 169, 170, 187, 192, 204, 205, 206, 207, 237, 238, 255, 256], "beginn": [115, 116], "behav": 133, "being": [13, 33, 67], "below": [0, 2, 4, 11, 52, 56, 58, 80, 92, 186], "benchmark": [68, 188], "berkelei": 68, "bernoulli": [42, 99, 100, 186, 223], "bernoullisplittingmaskgener": [41, 96, 186, 228, 231], "besid": 13, "bessel": 195, "best": [13, 33, 34, 40, 41, 42, 93, 96, 113], "beta": [23, 33, 34, 48, 50, 59, 121, 125, 144, 145, 151, 155, 163, 164, 165, 185, 207, 237, 238], "beta_": 34, "beta_anderson_acc": [141, 145], "beta_anderson_acc_backward": 255, "beta_end": [33, 34, 119, 238], "beta_softplu": 125, "beta_start": [33, 34, 119, 238], "beta_t": 34, "better": [13, 16, 19, 38, 39, 40, 42, 45, 46, 47, 48, 49, 50, 64, 93, 96], "between": [0, 2, 5, 7, 12, 24, 26, 28, 29, 33, 34, 55, 58, 59, 67, 69, 70, 71, 75, 81, 82, 84, 96, 105, 106, 108, 109, 111, 134, 136, 141, 143, 151, 156, 187, 191, 192, 195, 200, 209, 225, 233, 238, 240, 242, 265, 268], "beyond": [37, 38], "bfbatchnorm2d": 136, "bia": [16, 38, 39, 40, 42, 45, 46, 47, 48, 49, 50, 113, 120, 127, 128, 129, 130, 132, 136], "bias": [67, 120, 136], "biasfre": [130, 136], "bicub": [28, 61, 181, 190, 204, 248], "bigger": [96, 176, 198, 265, 268], "bilinear": [61, 181, 190, 205, 246, 251, 252, 253, 254], "bin": [9, 197, 216, 217], "binari": [15, 39, 178, 182, 186, 189, 198, 223, 228], "biolog": 70, "bkg": 155, "bkg_level": 9, "black": [52, 61, 174, 175, 181, 187], "blank": [182, 189, 221, 231], "blind": [2, 61, 105, 106, 129, 131, 136], "bling": 130, "blob": [24, 26, 38, 49, 122, 228], "block": [54, 57, 103, 117, 124, 127, 128, 130, 132, 152, 228], "blue": 9, "blur": [2, 11, 17, 18, 21, 28, 31, 33, 45, 50, 65, 66, 175, 178, 181, 187, 190, 192, 199, 204, 205, 206, 207, 210, 213, 220, 224, 229, 230, 232, 233, 263, 265], "blur_col": 11, "blur_confoc": 11, "blur_gener": 2, "blurfft": [4, 5, 20, 26, 31, 33, 45], "bmatrix": [12, 187, 192], "bool": [0, 67, 68, 69, 70, 71, 72, 73, 75, 77, 78, 79, 81, 82, 83, 84, 88, 91, 94, 96, 99, 103, 110, 113, 117, 118, 119, 120, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 136, 141, 145, 151, 153, 161, 162, 171, 176, 186, 187, 194, 195, 196, 198, 200, 208, 209, 210, 211, 212, 213, 214, 215, 217, 221, 223, 228, 236, 237, 238, 239, 240, 241, 242, 243, 245, 255, 256, 257, 258, 260, 262, 263, 265, 266, 267, 268, 269, 270], "boolean": [71, 126, 152, 240], "bora": [2, 105, 106, 108, 109, 113], "borrow": 217, "both": [2, 11, 24, 29, 41, 46, 47, 48, 54, 61, 67, 71, 198, 200, 228, 230, 245], "bottom": [71, 267], "bound": [216, 217], "boundari": [0, 4, 153, 233], "box": [31, 240, 241, 242], "brain": [19, 70, 71], "brainweb": 19, "brainweb_t1_icbm_1mm_subject_0": [11, 19], "breath": [80, 92, 221, 231], "bredi": 133, "briefli": 54, "briggs_weight": 0, "bright": 0, "broad": 130, "broadcast": [186, 210, 211, 213, 214, 218, 219], "bsd68": 68, "bsds500": [23, 54, 121, 144], "buffer_s": 8, "build": [0, 6, 18, 27, 35, 36, 54, 57, 63, 65, 66, 76, 103, 126, 143, 149, 153, 156, 158, 162, 175, 178, 184, 187, 192, 240, 242, 257, 258, 260, 261, 263, 265], "builder": 63, "built": 152, "burn": [240, 241, 242], "burnin": [31, 239], "burnin_ratio": [31, 239, 240, 241, 242], "butterfli": [33, 34], "bx": [61, 191], "byaman14": 228, "bytesio": 24, "bz": 173, "c": [0, 11, 15, 19, 47, 49, 56, 60, 61, 80, 91, 92, 99, 118, 119, 130, 132, 135, 146, 174, 175, 176, 178, 179, 182, 186, 189, 195, 196, 198, 199, 203, 210, 211, 212, 213, 214, 215, 218, 219, 220, 221, 222, 223, 226, 227, 228, 231, 233, 234, 246, 247, 248, 249, 250, 251, 252, 253, 254, 260, 265, 268, 270], "c2": 34, "c_": 161, "cach": [2, 10, 13, 23, 24, 26, 27, 28, 34, 35, 37, 38, 39, 40, 41, 42, 71], "cal": 187, "cal_psnr": [0, 7, 13, 19, 20, 21, 23, 24, 27, 29, 31, 32, 35, 187, 236, 238], "calcul": [31, 143, 148, 156, 157, 160], "call": [4, 11, 13, 34, 54, 55, 61, 62, 63, 64, 67, 85, 86, 102, 104, 111, 114, 116, 125, 126, 127, 128, 131, 134, 145, 151, 186, 187, 203, 208, 209, 221, 243, 270], "callabl": [68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 98, 123, 143, 153, 154, 156, 157, 162, 172, 173, 178, 187, 192, 203, 232, 239, 257, 258], "camera": [27, 37, 54, 56, 198, 251, 252, 253, 254], "cameraman": 55, "can": [0, 2, 4, 5, 6, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 26, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 61, 62, 63, 64, 65, 67, 71, 79, 80, 81, 87, 88, 90, 92, 93, 96, 97, 98, 99, 100, 103, 110, 111, 113, 117, 118, 119, 120, 123, 124, 131, 132, 135, 136, 137, 138, 139, 141, 145, 149, 152, 158, 161, 162, 176, 181, 182, 186, 187, 189, 190, 191, 192, 195, 196, 198, 199, 200, 203, 209, 210, 211, 212, 213, 214, 215, 218, 219, 222, 223, 226, 228, 232, 234, 236, 237, 240, 243, 244, 255, 256, 257, 258, 267, 269, 270], "cancer": 74, "cancerimagingarch": 74, "capac": 8, "captur": [58, 61, 187, 192], "care": [31, 86, 111, 114, 116, 125, 126, 127, 128, 131, 208, 209, 238], "carefulli": 33, "carlo": [31, 35, 54, 80, 93, 96, 98, 99, 100, 123, 239, 240, 241, 242], "cartesian": [15, 61, 182, 189, 226, 227, 234], "cascad": 227, "case": [0, 4, 6, 8, 9, 11, 19, 20, 24, 26, 27, 34, 38, 41, 46, 49, 53, 54, 55, 57, 59, 67, 79, 80, 92, 95, 119, 140, 146, 147, 151, 176, 187, 192, 198, 200, 204, 205, 207, 237, 251, 252, 253, 254], "cat": [9, 14, 15, 34, 136], "caus": 136, "caveat": [34, 67], "cbar": [0, 265], "cbsb68": 68, "cbsbd68": 68, "cbsd500": [45, 50], "cbsd68": [5, 15, 16, 49], "cbsd_0010": [4, 15, 23], "cc": 95, "cdot": [2, 19, 33, 34, 59, 62, 63, 137, 138, 141, 143, 146, 158, 161, 170, 205, 207, 237, 238], "celeba": [53, 79], "celeba_exampl": 37, "cell": 70, "center": [49, 146, 147, 174, 175, 181, 187, 210, 212, 222, 226, 227, 228, 234], "center_block": 228, "center_fract": [222, 226, 227, 234], "centercrop": [2, 5, 6, 16, 20, 21, 26, 28, 37, 45, 49, 50], "certain": [7, 8, 53, 118], "cfloat": [176, 196], "cg": 172, "chain": [56, 143, 239, 240, 241, 242, 250], "challeng": [0, 69, 71], "chambol": [10, 18, 48, 51, 66, 67, 73, 79, 85, 97, 133, 134, 137, 143, 146, 154, 156, 162, 164, 166, 178, 186, 187, 192, 243, 256, 257, 258, 261], "chang": [4, 52, 67, 141, 145, 174], "channel": [4, 6, 7, 9, 12, 14, 15, 19, 20, 21, 23, 26, 28, 48, 54, 76, 96, 114, 115, 116, 117, 119, 120, 121, 124, 125, 127, 128, 129, 130, 131, 132, 136, 144, 152, 176, 177, 179, 182, 186, 189, 196, 197, 198, 210, 211, 212, 213, 214, 215, 222, 223, 224, 225, 226, 227, 228, 230, 234, 265, 268], "channelwis": [15, 176, 196], "chaofengc": 26, "character": [61, 187, 192], "characteris": 2, "cheap": 137, "chebyshev": 241, "check": [0, 47, 49, 52, 67, 68, 69, 70, 72, 75, 77, 78, 130, 141, 145, 187, 223, 245], "check_clip_grad": [67, 245], "check_clip_grad_d": 245, "check_conv_fn": [141, 145], "check_dataset_exist": [68, 72, 77, 78], "check_grad": [67, 245], "check_iteration_fn": [141, 145], "check_mask": [182, 189], "check_pixelwis": 223, "checkpoint": [2, 5, 10, 13, 23, 24, 26, 27, 28, 34, 35, 37, 38, 39, 40, 41, 42, 67, 132], "checksum": 69, "chen": [37, 65], "child": [222, 226, 234, 255, 256], "choic": [23, 24, 29, 55, 58, 59, 98, 99, 100, 121, 142, 144], "choos": [5, 10, 15, 16, 24, 27, 33, 34, 38, 39, 40, 42, 45, 46, 47, 48, 49, 50, 63, 80, 90, 116, 119, 141, 145, 161, 179, 210, 212, 213, 215], "choosen": 24, "chose": [20, 21, 26], "chosen": [23, 29, 33, 45, 50, 67, 79, 93, 123, 132, 141, 187, 188, 243], "chung": 34, "chunk": [80, 221], "chw": [91, 260], "circ": [59, 86, 186, 187, 192], "circl": [29, 48, 200, 208, 209], "circular": [2, 4, 11, 61, 136, 174, 175, 181, 187, 190, 199, 200, 209, 210, 211, 212, 213, 214, 215, 220, 233, 249], "circular_pad": [2, 37, 136], "ckp_": 67, "ckp_10_demo_sur": 42, "ckp_50_demo_n2n": 40, "ckp_interv": [38, 39, 67, 245], "ckpt": [2, 10, 16, 28, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50], "ckpt_dir": [10, 16, 38, 39, 40, 42, 45, 46, 47, 48, 49, 50], "ckpt_path": 110, "ckpt_pretrain": [67, 245], "ckpt_state_dict": 10, "claim": 141, "clamp": [0, 21, 161], "clamp_max": 161, "clamp_min": [0, 161], "class": [0, 4, 5, 6, 8, 11, 13, 14, 15, 16, 19, 20, 21, 24, 26, 27, 29, 32, 33, 34, 35, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 59, 61, 63, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259], "classif": 245, "classifi": [102, 104, 129, 171], "clean": [48, 50, 70, 93, 176, 182, 186, 190, 192, 200], "click": 74, "clip": [13, 23, 24, 31, 34, 55, 67, 194, 239, 240, 241, 242, 243, 245, 265, 268], "clip_posit": 194, "clone": [15, 19, 24, 33, 34], "close": [14, 19, 31, 32, 61, 93, 137, 138, 146, 147, 150, 176, 181, 187, 192, 200], "closer": [13, 187, 236, 238], "cm": [200, 209], "cmap": [0, 19, 265, 267, 268], "cnn": [7, 26, 117, 142], "co": [2, 8, 10, 11, 13, 19, 23, 24, 27, 28, 34, 35, 37, 38, 39, 40, 41, 42, 55, 68, 72, 78, 206], "code": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 52, 54, 55, 57, 61, 67, 90, 119, 132, 133, 134, 226], "coeff": [4, 11, 137, 224, 225], "coeff_col": 11, "coeffic": 137, "coeffici": [4, 11, 15, 137, 138, 161, 224, 225], "coil": [38, 61, 71, 182, 189], "coincid": 11, "colab": 18, "coll": 11, "collabor": 112, "collect": [11, 59, 61, 63, 65, 74, 80, 92], "colon": 58, "color": [4, 5, 6, 12, 13, 14, 15, 16, 20, 21, 26, 27, 28, 29, 45, 48, 49, 50, 54, 68, 121, 144, 179, 190], "colormap": [0, 265, 268], "colour": [4, 14, 177], "column": [46, 47, 186, 227, 234, 265, 268], "com": [18, 24, 26, 38, 41, 42, 46, 49, 65, 77, 90, 119, 122, 132, 226, 228], "combett": 19, "combin": [33, 54, 57, 61, 232, 233, 238], "come": [59, 156, 187], "command": 52, "commerci": 70, "common": [0, 7, 31, 32, 35, 45, 46, 50, 59, 161], "commonli": [77, 78, 145], "commun": 52, "commut": 123, "compar": [31, 32, 35, 67, 69, 80, 103, 113, 221, 255], "compare_no_learn": [67, 245], "comparison": [67, 103, 243], "compat": [57, 137], "compens": 0, "complet": 245, "complex": [0, 10, 13, 15, 19, 139, 161, 176, 182, 189, 195, 198, 265, 268], "complex64": [0, 196], "complex_denois": 54, "compliant": 52, "complic": 2, "compon": [24, 34, 121, 144, 171], "component_log_likelihood": 171, "compos": [2, 5, 6, 8, 16, 20, 21, 26, 28, 37, 38, 39, 40, 41, 42, 45, 46, 47, 49, 50, 53, 71, 74, 103, 120, 138, 147, 187], "composit": [61, 133, 134], "compound": 250, "comprehens": 52, "compress": [2, 18, 51, 53, 66, 67, 73, 79, 85, 97, 105, 106, 113, 132, 143, 149, 156, 161, 169, 176, 187, 192, 256, 258, 261, 265, 269], "compressedsens": [15, 46, 47, 53, 61], "comput": [0, 4, 5, 6, 7, 12, 13, 14, 16, 18, 19, 20, 21, 23, 26, 27, 28, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 54, 59, 61, 62, 67, 74, 76, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 111, 114, 116, 120, 121, 125, 126, 127, 128, 131, 133, 134, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 175, 176, 178, 180, 181, 182, 184, 186, 187, 188, 190, 191, 192, 195, 198, 200, 202, 203, 207, 208, 209, 212, 215, 216, 217, 230, 237, 238, 239, 240, 241, 242, 243, 245, 255, 256, 258, 259, 260, 261, 263, 265, 266], "compute_alpha": 34, "compute_alpha_beta": 237, "compute_loss": [24, 67, 245], "compute_metr": [0, 13, 20, 21, 27, 29, 67, 141, 145, 255], "compute_norm": [0, 12, 14, 59, 187, 242], "concanten": [186, 192], "concaten": [17, 18, 64, 66, 127, 128, 132, 177, 178, 181, 186, 187, 190, 192, 246, 247, 249, 251, 252, 253, 254, 259, 261, 265], "conclus": 13, "condat": [18, 30, 55, 66, 120, 133, 134, 141, 143, 149, 151, 154, 156, 162, 178, 184, 187, 192, 198, 260, 261, 263, 265, 266], "condatvu": 27, "condit": [4, 33, 39, 61, 105, 106, 119, 129, 212, 215, 233, 238], "confer": [26, 28, 142], "config": [9, 33, 131], "config_matplotlib": [9, 33], "confoc": 70, "confocal_bpae_b": 70, "confocal_bpae_g": 70, "confocal_bpae_r": 70, "confocal_fish": 70, "confocal_mic": 70, "confocalblurgenerator3d": 11, "conj": [170, 187, 259], "conjug": [27, 143, 156, 164, 172, 176, 181, 187, 200, 259], "conjugate_gradi": [176, 187, 200], "conjugate_gradient_method": 172, "conjunct": [67, 243], "connect": [111, 132, 136], "consecut": [5, 28, 143, 156], "consequ": 188, "consid": [15, 23, 24, 34, 48, 71, 121, 144, 152, 211, 214, 221, 223, 224, 225, 228, 231], "consider": 226, "consist": [0, 10, 15, 27, 33, 34, 38, 39, 49, 54, 58, 63, 70, 74, 77, 80, 87, 88, 90, 92, 96, 97, 105, 106, 107, 108, 109, 113, 141, 190], "consol": [67, 79, 171, 243], "consortium": 74, "const": 24, "constant": [23, 34, 45, 56, 98, 99, 100, 130, 133, 134, 150, 173, 177, 185, 187, 188, 210, 237, 240, 241, 242], "constrain": [10, 18, 51, 66, 67, 73, 79, 85, 97, 134, 137, 143, 146, 154, 156, 178, 186, 187, 192, 243, 256, 258, 261], "constraint": [54, 240, 241, 242], "construct": [2, 11, 15, 24, 26, 33, 38, 41, 49, 61, 80, 92, 105, 106, 108, 109], "constructor": [229, 244], "consumpt": [121, 144], "contain": [4, 6, 9, 10, 11, 27, 46, 54, 56, 59, 61, 62, 63, 67, 68, 70, 71, 72, 73, 74, 77, 78, 79, 88, 123, 137, 138, 141, 145, 151, 162, 163, 164, 165, 166, 167, 170, 171, 174, 175, 193, 195, 197, 200, 209, 233, 240, 241, 242, 247, 249, 256, 257, 258, 262, 263, 269], "content": [24, 69], "context": [2, 8], "continu": 37, "contrarili": 210, "contrast": 24, "contribut": 217, "contributor": 52, "control": [24, 26, 29, 31, 33, 35, 38, 41, 49, 56, 58, 71, 96, 98, 136, 142, 183, 237, 242], "conv": [129, 130, 131, 132], "conv1d": 9, "conv2d": [61, 174, 211, 213], "conv2d_fft": 214, "conv3d": 174, "conv3d_fft": [174, 215], "conv_transpose2d": 61, "conv_transpose3d_fft": 212, "conv_transposed2d": 210, "conv_transposed2d_fft": 211, "convdecod": [7, 118], "conveni": [19, 20, 21, 31], "convent": [19, 137, 177, 224], "converg": [0, 5, 12, 14, 19, 20, 21, 26, 27, 28, 29, 32, 48, 59, 67, 82, 83, 133, 134, 141, 143, 145, 146, 147, 151, 156, 159, 168, 187, 239, 240, 241, 242], "convers": 65, "convert": [12, 13, 14, 32, 54, 62, 119, 139, 177, 178, 182, 260, 262, 263], "convert_to_fp16": 119, "convert_to_fp32": 119, "convex": [49, 59, 125, 133, 134, 143, 146, 156], "convolut": [0, 5, 7, 9, 20, 35, 55, 60, 61, 62, 114, 115, 116, 117, 118, 120, 124, 127, 128, 130, 132, 136, 158, 174, 175, 195, 199, 210, 211, 212, 213, 214, 215, 220, 227], "convolv": [4, 62, 158, 210, 211, 212, 213, 214, 215], "convtranspos": [117, 124], "convtranspose2d": 113, "coordin": [0, 206, 230, 267], "copi": [9, 11, 15, 19, 33, 45, 46, 47, 49, 50], "core": 8, "corner": 267, "correct": [0, 29, 113, 195], "correct_global_phas": 13, "correctli": [49, 68, 69, 72, 75, 77, 78], "correl": [40, 210, 211, 213], "correspond": [0, 4, 11, 15, 24, 27, 28, 33, 34, 46, 47, 54, 59, 70, 92, 113, 130, 141, 150, 151, 164, 170, 182, 183, 187, 188, 189, 191, 192, 210, 211, 212, 213, 214, 215, 232, 245, 251, 252, 253, 254, 267], "corrupt": [40, 42, 95], "cosin": 13, "cosine_similar": 13, "cosineannealinglr": 48, "cost": [5, 20, 21, 27, 28, 59, 99, 141, 145, 151, 162, 163, 164, 165, 166, 167, 187, 257, 258], "cost_tv": 20, "cost_tv_prox": 20, "cost_wv": 21, "cost_wv_prox": 21, "could": [7, 24, 26, 38, 49], "count": 217, "coupl": 24, "cov": 171, "cov_regular": 171, "covari": [170, 171, 230], "coverag": 0, "cp": [10, 49, 59, 162, 256, 257, 258], "cpiter": [48, 49], "cpp": [9, 37], "cpu": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 19, 20, 21, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 55, 67, 79, 80, 84, 89, 92, 94, 102, 103, 104, 105, 106, 107, 108, 109, 110, 117, 120, 121, 124, 125, 130, 131, 135, 137, 138, 144, 152, 161, 171, 174, 175, 176, 177, 179, 181, 182, 186, 189, 190, 195, 196, 197, 198, 199, 200, 203, 208, 209, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 234, 235, 236, 237, 238, 243, 245, 246, 251, 252, 253, 254, 256, 258, 262, 263], "creat": [5, 12, 13, 17, 18, 26, 27, 60, 61, 63, 64, 66, 71, 73, 79, 80, 83, 92, 96, 103, 121, 141, 143, 144, 145, 176, 178, 180, 182, 184, 186, 187, 189, 192, 196, 221, 222, 223, 227, 228, 231, 232, 234, 236, 240, 244, 250, 258, 261, 265], "creation": 14, "crit": [5, 21, 32, 133, 134], "crit_conv": [5, 28, 141, 146, 147, 240, 242], "criteria": [5, 26, 28, 113, 240], "criterion": [19, 133, 134, 141, 145, 146, 147, 159, 187], "critic": [102, 104, 245], "crop": [137, 262, 263], "crop_output": 137, "cross": [210, 213], "crucial": [29, 55], "csgm": 113, "csgmgener": 2, "csv": 74, "ct": [18, 23, 24, 30, 51, 65, 66, 67, 74, 85, 96, 97, 120, 121, 127, 128, 141, 143, 144, 149, 151, 152, 154, 156, 162, 164, 184, 187, 188, 192, 200, 256, 258, 260, 261, 263, 265, 266], "ct_small": 24, "ct_toi": 24, "cubic": [19, 161], "cuda": [0, 2, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 19, 20, 21, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 57, 67, 83, 121, 142, 144, 174, 175, 199, 232, 236, 238], "cumprod": [33, 34], "cup_": [7, 31, 32, 35], "cur_data_fidel": [27, 48, 145, 151, 163, 164, 165, 166, 167], "cur_param": [27, 145, 151, 163, 164, 165, 166, 167, 170], "cur_prior": [27, 48, 145, 151, 163, 164, 165, 166, 167, 170], "curr_sigma": 33, "current": [5, 21, 24, 26, 27, 31, 32, 33, 34, 38, 48, 49, 67, 127, 128, 141, 145, 151, 163, 164, 165, 166, 167, 170, 171, 174, 175, 178, 181, 182, 183, 184, 188, 193, 194, 199, 202, 232, 245], "current_log": 24, "curv": [0, 5, 13, 16, 20, 21, 27, 29, 38, 39, 40, 42, 45, 46, 47, 48, 49, 50], "custom": [6, 10, 13, 17, 18, 29, 30, 36, 41, 49, 51, 55, 64, 65, 66, 67, 73, 79, 85, 97, 120, 126, 141, 143, 149, 151, 154, 156, 158, 162, 169, 175, 176, 178, 181, 184, 187, 190, 192, 198, 206, 240, 242, 243, 244, 256, 257, 258, 260, 261, 263, 265, 266, 269], "custom_init": [0, 10, 29, 48, 49, 141], "custom_init_cp": [10, 49], "custom_metr": 141, "custom_output": [28, 48], "customtrain": 67, "cutoff": [4, 11, 224, 225], "cv": 72, "cviter": 27, "cyclegan": 2, "d": [0, 2, 9, 11, 19, 31, 35, 49, 59, 62, 82, 86, 101, 102, 104, 105, 106, 107, 108, 109, 119, 123, 133, 134, 140, 143, 144, 146, 147, 149, 150, 154, 155, 157, 158, 159, 174, 176, 185, 195, 196, 197, 212, 215, 217, 245, 268], "d_": [9, 49, 55, 118, 197, 237, 238], "dagger": [98, 110, 178, 182], "damp": 241, "daniil": [133, 134], "data": [0, 2, 7, 13, 24, 37, 53, 55, 56, 57, 58, 61, 63, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 87, 88, 90, 92, 96, 97, 98, 99, 100, 121, 131, 135, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 161, 162, 163, 164, 165, 166, 167, 170, 171, 195, 208, 209, 221, 228, 231, 232, 235, 237, 238, 243, 244, 245, 246, 251, 252, 253, 254, 256, 257, 258], "data_dir": [5, 6, 10, 16, 19, 20, 21, 26, 28, 38, 39, 40, 42, 45, 46, 47, 48, 49, 50], "data_fidel": [0, 5, 10, 13, 20, 21, 24, 26, 27, 28, 29, 31, 33, 34, 35, 38, 45, 46, 47, 48, 49, 50, 55, 59, 63, 141, 143, 145, 151, 162, 163, 164, 165, 166, 167, 237, 238, 240, 241, 242, 256, 257, 258], "data_init": 171, "data_test": 53, "data_train": 53, "databas": 74, "datafid": [24, 55, 58, 59, 63, 141, 143, 147, 149, 150, 155], "datafidel": [27, 48, 59, 62, 140, 141, 145, 146, 147, 149, 150, 151, 155, 156, 162, 163, 164, 165, 166, 167, 237, 238, 240, 241, 242, 256, 257, 258], "datafidnam": [55, 59, 141, 143, 149], "dataload": [2, 5, 16, 24, 26, 27, 28, 29, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 53, 67, 74, 171, 243, 244, 245], "dataparallel": 57, "datapoint": 79, "dataset": [10, 11, 13, 15, 17, 18, 19, 23, 24, 29, 34, 37, 41, 54, 55, 56, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 96, 121, 144, 178, 180, 184, 187, 188, 192, 243, 245, 261, 265], "dataset_cach": 71, "dataset_filenam": [16, 38, 39, 40, 42, 45, 46, 47, 49, 50, 79], "dataset_info": 68, "dataset_nam": [5, 6, 20, 21, 26, 27, 28], "dataset_path": [2, 5, 28], "dataweight": [0, 195], "daubechi": 0, "davob": 112, "db": [0, 7, 13, 19, 20, 21, 27, 29, 31, 32, 35], "db1": [0, 19, 161], "db2": [0, 19, 137, 161], "db3": [0, 19], "db4": [0, 19, 138, 161], "db5": 0, "db6": 0, "db7": 0, "db8": [0, 10, 19, 21, 46, 49, 137, 138, 161], "dcgan": [2, 113, 115, 116], "dcgan_faces_tutori": [115, 116], "dcgandiscrimin": [2, 106, 107, 109], "dcgangener": [2, 113], "dcm": 74, "dd_hh": 67, "ddim": [34, 237], "ddpm": 34, "ddrm": [14, 32], "deblock": 75, "deblur": [2, 17, 18, 22, 30, 33, 37, 51, 61, 65, 66, 67, 73, 75, 79, 84, 85, 91, 97, 105, 106, 117, 120, 129, 130, 134, 141, 142, 143, 149, 154, 156, 159, 162, 175, 178, 184, 187, 192, 206, 243, 248, 255, 257, 260, 261, 265, 266], "deblurgan": [2, 105, 106, 129], "deblurgan_model": 2, "debug": 111, "dec": 137, "decid": 52, "decod": [7, 55, 114, 117, 118, 130], "decolor": [12, 14, 61], "decolorizesvd": 14, "decompos": [0, 195], "decomposablephys": [4, 14, 31, 32, 61, 67, 175, 177, 180, 182, 186, 189, 198, 236], "decomposit": [4, 11, 14, 31, 32, 61, 137, 138, 161, 175, 178, 182, 186, 189, 198, 224, 225, 236], "deconvolut": 63, "decreas": [33, 34, 141, 171, 236, 237, 238], "dedic": 70, "deep": [6, 13, 17, 18, 26, 51, 52, 60, 66, 67, 73, 79, 80, 84, 85, 92, 97, 110, 114, 115, 116, 117, 118, 120, 141, 142, 143, 149, 154, 156, 162, 175, 178, 184, 186, 187, 192, 206, 221, 227, 231, 243, 255, 256, 257, 260, 261, 263, 265], "deepimageprior": [7, 114], "deepinv": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273], "deepinv_dataset_path": 5, "deepinv_datasets_path": [16, 38, 39, 40, 41, 42, 49], "deepinvers": [1, 15, 18, 52, 59, 66, 73, 141, 143, 149, 156, 161, 162, 187, 192, 195, 260, 265, 266, 267], "def": [0, 2, 5, 8, 10, 14, 24, 27, 28, 31, 33, 34, 47, 48, 49, 67, 80, 92, 240], "def_crit": 159, "default": [0, 4, 13, 23, 24, 26, 38, 49, 54, 57, 61, 67, 68, 69, 70, 71, 72, 75, 77, 78, 80, 81, 82, 83, 84, 87, 88, 89, 90, 92, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 115, 116, 117, 119, 120, 124, 127, 128, 129, 130, 131, 132, 133, 134, 137, 138, 141, 142, 143, 145, 146, 151, 152, 156, 157, 159, 161, 162, 163, 164, 165, 174, 176, 186, 187, 190, 192, 195, 196, 198, 200, 208, 209, 210, 212, 213, 215, 221, 222, 223, 224, 225, 228, 230, 231, 232, 233, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 255, 256, 257, 258, 265, 267, 268, 269, 270], "defin": [0, 4, 8, 9, 11, 12, 13, 14, 19, 23, 24, 29, 33, 37, 38, 39, 40, 42, 53, 55, 56, 59, 63, 67, 71, 81, 86, 87, 88, 93, 95, 97, 107, 111, 113, 114, 116, 121, 125, 126, 127, 128, 131, 137, 138, 140, 141, 143, 144, 145, 146, 147, 149, 151, 152, 158, 163, 164, 165, 166, 167, 170, 174, 175, 176, 177, 180, 181, 182, 185, 186, 187, 189, 190, 191, 192, 195, 196, 198, 200, 204, 205, 206, 208, 209, 230, 236, 237, 238, 240, 245, 270], "definit": [4, 27, 34, 61], "defocu": 130, "defocus_deblur": 130, "deg2rad": 11, "deg_dir": [5, 10, 19, 20, 21, 26, 28], "degrad": [10, 13, 19, 29, 54], "degre": [11, 15, 24, 38, 54, 123, 200, 206, 246, 247], "delta": [0, 4, 95, 199, 207], "demo": [0, 2, 4, 5, 6, 10, 11, 13, 15, 16, 19, 20, 21, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 42, 45, 49, 50, 54], "demo_3d_wavelet": [19, 22, 66], "demo_blur_tour": [4, 17, 66], "demo_custom_kernel": [31, 36, 66], "demo_custom_prior": [5, 17, 66], "demo_custom_prior_unfold": [47, 51, 66], "demo_dataset": [6, 17, 66], "demo_ddrm": [32, 36, 66], "demo_deq": [45, 51, 66], "demo_diffpir": [33, 36, 66], "demo_dip": [7, 17, 66], "demo_dp": [34, 36, 66], "demo_ei_transform": [37, 43, 66], "demo_epl": [23, 25, 66], "demo_equivariant_imag": [38, 43, 66], "demo_gan_imag": [2, 3, 66], "demo_hf_dataset": [8, 17, 66], "demo_learned_primal_du": [48, 51, 66], "demo_licp": 47, "demo_lidar": [9, 17, 66], "demo_lista": [46, 51, 66], "demo_load": [10, 17, 66], "demo_measplit_mnist_tomographi": 41, "demo_microscopy_3d": [11, 17, 66], "demo_moi_ckp_10": 39, "demo_multioperator_imag": [39, 43, 66], "demo_n2n": 40, "demo_n2n_denois": [40, 43, 66], "demo_pansharpen": [12, 17, 66], "demo_patch_priors_ct": [24, 25, 66], "demo_phase_retriev": [13, 17, 66], "demo_phys": [14, 17, 66], "demo_physics_tour": [15, 17, 66], "demo_pnp_custom_optim": [27, 30, 66], "demo_pnp_dpir_deblur": [26, 30, 66], "demo_red_gspnp_sr": [28, 30, 66], "demo_ri_bas": [0, 1, 66], "demo_sampl": [35, 36, 66], "demo_splitting_loss": [41, 43, 66], "demo_sur": 42, "demo_sure_denois": [42, 43, 66], "demo_train_inpaint": [16, 17, 66], "demo_training_inpaint": [16, 49], "demo_tv_minimis": [20, 22, 66], "demo_unfolded_constrained_lista": [49, 51, 66], "demo_unfolded_cp": 10, "demo_unfolded_cp_ptwt": 10, "demo_unfolded_sr": 50, "demo_vanilla_pnp": [29, 30, 66], "demo_vanilla_unfold": [50, 51, 66], "demo_wavelet_prior": [21, 22, 66], "demonstr": [2, 37, 41, 56], "demosaick": 75, "den": 33, "denois": [6, 7, 10, 18, 22, 24, 25, 26, 27, 29, 30, 31, 35, 38, 41, 43, 45, 46, 49, 50, 55, 56, 58, 59, 61, 62, 63, 65, 66, 67, 70, 73, 75, 79, 85, 90, 93, 95, 98, 99, 100, 110, 112, 117, 119, 120, 121, 123, 124, 130, 131, 132, 133, 134, 136, 137, 138, 139, 141, 142, 143, 144, 149, 154, 156, 157, 158, 159, 161, 162, 178, 181, 184, 186, 187, 188, 192, 193, 194, 201, 202, 236, 237, 238, 240, 241, 242, 243, 256, 257, 258, 260, 261, 263, 265], "denoised_imag": 54, "denoiser_complex": 13, "denoiser_nam": 28, "denoisernam": 123, "denoising_color": 130, "denoising_grai": 130, "denoising_r": 130, "denot": [11, 82, 86, 146, 168, 174, 175, 185], "dens": 152, "densiti": [24, 155, 227, 234], "depend": [0, 24, 31, 58, 59, 63, 71, 95, 102, 103, 104, 119, 141, 200, 232, 238, 240], "deprec": [96, 244], "depth": [11, 17, 18, 19, 38, 45, 50, 61, 66, 95, 120, 127, 128, 131, 132, 185, 192, 197, 225, 261, 268], "deq": [18, 51, 63, 65, 66, 67, 73, 79, 85, 97, 120, 143, 149, 154, 156, 175, 178, 184, 187, 192, 206, 255, 257, 261], "deq_build": [45, 63], "derain": 130, "deriv": [56, 99], "descent": [5, 20, 21, 29, 47, 55, 59, 143, 156, 162, 167, 169, 173, 192, 256, 257, 258], "describ": [10, 26, 35, 39, 60, 61, 142, 152, 186, 187, 188, 192, 236, 237, 238], "descript": [52, 133, 134, 161, 226, 227, 234], "design": [13, 54, 56, 93, 95, 98, 99, 100], "desir": [2, 52, 67, 79, 116, 226], "detach": [9, 15, 24, 33, 34], "detail": [24, 26, 33, 34, 38, 41, 49, 54, 55, 61, 63, 67, 80, 82, 83, 90, 92, 99, 100, 117, 119, 120, 121, 124, 131, 132, 133, 134, 138, 141, 142, 144, 161, 162, 172, 183, 188, 220, 224, 225, 230, 233, 243, 248, 251, 252, 253, 254, 255, 256, 257, 258, 265, 268], "detector": [11, 200, 209], "detector_radiu": [200, 209], "detector_spac": [200, 209], "determin": [152, 171, 222], "determinist": [58, 61, 67, 187, 192], "dev": [32, 35], "develop": 52, "deviat": [5, 9, 13, 15, 19, 20, 21, 23, 26, 27, 28, 29, 32, 33, 34, 54, 58, 59, 93, 98, 99, 141, 142, 149, 162, 180, 184, 190, 193, 197, 201, 206, 230, 243, 256, 257, 258], "devic": [0, 2, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 19, 20, 21, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 53, 55, 57, 67, 79, 80, 84, 89, 92, 94, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 117, 120, 121, 124, 125, 130, 131, 135, 137, 138, 142, 144, 152, 161, 171, 174, 175, 176, 177, 179, 181, 182, 186, 189, 190, 195, 196, 197, 198, 199, 200, 203, 208, 209, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 234, 235, 236, 237, 238, 243, 245, 246, 251, 252, 253, 254, 256, 258, 261, 262, 263], "device_count": 57, "device_id": 57, "df": 83, "df73285e": 26, "dhariw": 54, "diag": [4, 83, 170, 176, 178, 186, 191], "diagnost": 74, "diagon": [31, 61, 83, 96, 186, 218, 219], "dicom": 74, "dict": [27, 38, 67, 141, 145, 151, 162, 163, 164, 165, 166, 167, 170, 192, 200, 209, 221, 222, 223, 224, 225, 228, 231, 235, 245, 255, 256, 257, 258, 266, 269], "dict_kei": [4, 11, 224, 225, 229, 230, 232, 233, 235], "dict_param": 61, "dictionari": [4, 11, 19, 27, 38, 45, 46, 47, 50, 59, 61, 67, 141, 145, 151, 162, 163, 164, 165, 166, 167, 170, 192, 222, 223, 224, 225, 229, 230, 232, 233, 235, 243, 256, 257, 258, 266, 269], "dictionnari": 0, "diff": [32, 230], "differ": [2, 4, 5, 7, 11, 13, 23, 28, 34, 39, 40, 46, 47, 56, 61, 64, 67, 70, 71, 88, 90, 95, 101, 118, 132, 133, 134, 159, 190, 221, 230, 236, 237, 259], "differenti": [34, 59, 81, 143, 156, 157, 164, 187, 192, 237, 241, 242], "diffpir": [18, 34, 36, 65, 66, 119, 143, 149, 155, 175, 178, 184, 187, 192, 261, 263, 265], "diffract": [17, 18, 66, 174, 187, 192, 224, 225, 232, 261, 265, 268], "diffraction_gener": [4, 11], "diffractionblur": 4, "diffractionblurgener": [4, 199, 225, 229, 233], "diffractionblurgenerator3d": 11, "diffunet": [33, 34, 54], "diffus": [18, 33, 36, 65, 66, 117, 119, 178, 184, 186, 187, 192, 236, 237, 238, 239, 240, 260, 261, 263, 265], "diffusion_ffhq_10m": 34, "diffusion_step": 33, "diffusionsampl": [32, 62], "digit": 15, "dilat": [9, 248], "dim": [5, 9, 14, 15, 32, 34, 35, 61, 130, 131, 132, 187, 203, 228, 259], "dim_hid": 111, "dim_hidden": 125, "dim_input": 111, "dim_mid": 111, "dimens": [0, 6, 20, 21, 26, 28, 46, 60, 80, 92, 96, 111, 113, 116, 119, 121, 128, 132, 135, 137, 143, 144, 146, 147, 159, 161, 170, 171, 178, 182, 186, 195, 203, 217, 221, 222, 223, 226, 227, 228, 231, 234, 246, 247, 249, 250, 251, 252, 253, 254, 259, 260, 267, 270], "dimension": [200, 227, 234], "dinv": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 26, 27, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 59, 61, 63, 93, 95, 96, 141, 143, 145, 149, 236, 238, 258], "dinv_dataset": 79, "dinv_dataset0": [26, 28], "dinv_dataset_path": [6, 26, 28], "dir": [26, 28, 53], "dirac": 0, "dirac_comb": [4, 199], "dirac_lik": 0, "direct": [11, 163, 225, 250], "directli": [0, 4, 11, 13, 48, 65, 119, 132, 162, 182, 189, 256, 257, 258], "directori": [52, 53, 67, 68, 69, 70, 72, 74, 75, 77, 78, 243, 269], "disabl": [16, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 96], "discard": [113, 240, 241, 242], "discord": [52, 65], "discrep": [55, 58, 59, 141], "discret": [0, 24, 176, 182, 189, 195], "discrimin": [2, 54, 56, 102, 103, 104, 105, 106, 107, 108, 109, 115, 122, 129, 245], "discriminatorloss": [105, 108], "disk": [8, 68, 69, 70, 77, 78], "displai": [6, 8, 37, 67, 113, 174, 175, 181, 270], "display_losses_ev": [67, 245], "distanc": [56, 58, 59, 140, 141, 143, 147, 149, 150, 156, 200, 209], "distancenam": [59, 143, 149, 164], "distinct": [10, 38, 46, 47, 48, 49, 50, 59, 141, 162, 256, 257, 258], "distribut": [11, 24, 31, 32, 35, 42, 58, 62, 95, 121, 144, 158, 180, 183, 186, 223, 227, 228, 236, 237, 238, 239, 240, 241, 242], "distributeddataparallel": 57, "div2k_train_hr": 69, "div2k_valid_hr": 69, "diverg": [98, 99, 100], "divers": 2, "divid": [80, 194, 221, 259], "divis": [119, 130, 140], "dncnn": [27, 29, 35, 38, 45, 50, 54, 56, 63, 95, 258], "dncnn_sigma2_lipschitz_color": 35, "dncnn_sigma2_lipschitz_grai": 27, "do": [2, 8, 26, 28, 29, 54, 137, 141, 156], "doc": [8, 52, 61, 67, 95], "document": [49, 52, 57, 58, 86, 93, 98, 99, 100, 164, 185, 197], "doe": [2, 19, 61, 81, 82, 83, 95, 112, 120, 146, 168, 183, 187, 192, 228, 256, 258], "doesn": [6, 56, 158], "doi": [11, 120, 200, 209], "domain": [0, 24, 46, 47, 60, 61, 96, 112, 195], "don": [24, 26, 38, 49, 68, 267], "done": [4, 13, 16, 20, 21, 32, 33, 34, 41, 45, 46, 47, 48, 49, 50, 52, 53, 61, 64, 67, 96, 137, 190], "dongdong": 65, "dose": 188, "dossal": 166, "dot": [39, 88, 138], "doubl": [74, 187], "dougla": [50, 162, 165, 256, 257, 258], "down": 28, "download": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 53, 54, 55, 68, 69, 70, 71, 72, 74, 75, 77, 78, 117, 119, 120, 121, 124, 130, 131, 132, 144, 236, 238], "download_and_extract_arch": [2, 37], "download_lipschitz": [27, 35, 120], "downsampl": [12, 15, 24, 28, 45, 50, 117, 124, 136, 187, 190, 204, 205, 207], "downsample_mod": [117, 124], "downscal": 37, "dp": [18, 36, 66, 119, 143, 149, 178, 186, 187, 192, 261, 263, 265], "dpir": [18, 30, 54, 65, 66, 73, 79, 84, 85, 91, 117, 141, 143, 149, 154, 156, 162, 175, 178, 184, 187, 192, 243, 261], "dr": [0, 21, 50, 59, 162, 165, 256, 257, 258], "drawback": 57, "drive": 24, "driven": 52, "drop": 131, "drop_last": 24, "drop_path_r": [131, 132], "drop_rat": 132, "dropout": 132, "drunet": [13, 26, 32, 45, 50, 54, 57, 124, 142, 236, 238], "drunet_dataset": 8, "drunet_deepinv_gray_finetune_26k": 13, "dst": 176, "dtype": [4, 11, 15, 24, 33, 34, 47, 141, 145, 176, 187, 196, 198, 200, 203, 208, 209, 223, 224, 225, 230, 232, 235, 262, 263], "du": [82, 83], "dual": [18, 30, 49, 51, 55, 59, 66, 67, 85, 97, 120, 127, 128, 130, 133, 134, 141, 143, 146, 147, 149, 151, 154, 156, 162, 164, 178, 184, 187, 192, 198, 200, 256, 258, 260, 261, 263, 265, 266], "dual_pixel_task": 130, "due": [176, 200], "dummi": 61, "dure": [4, 24, 26, 33, 34, 37, 38, 48, 49, 67, 79, 93, 95, 96, 130, 136, 141, 186], "dwt": 137, "dx": [20, 47, 133, 134, 159], "dynam": [0, 4, 15, 60, 61, 80, 92, 96, 135, 182, 221, 227, 228, 231], "dynamicmri": [80, 92], "e": [0, 2, 6, 9, 11, 13, 14, 18, 19, 24, 27, 31, 32, 33, 37, 38, 39, 40, 42, 53, 54, 56, 59, 60, 62, 63, 67, 68, 69, 70, 71, 72, 75, 77, 78, 79, 80, 81, 82, 83, 87, 88, 90, 91, 92, 93, 96, 97, 103, 105, 106, 107, 108, 109, 113, 117, 120, 121, 123, 124, 133, 134, 137, 138, 140, 141, 143, 144, 145, 146, 147, 149, 158, 161, 162, 174, 175, 176, 177, 179, 180, 182, 186, 187, 189, 191, 194, 195, 200, 203, 211, 214, 221, 223, 228, 231, 232, 233, 236, 240, 241, 242, 245, 246, 252, 255, 256, 257, 258, 260, 270], "each": [0, 4, 10, 23, 31, 33, 38, 39, 40, 42, 45, 46, 47, 48, 49, 50, 59, 61, 67, 70, 71, 74, 79, 80, 90, 92, 99, 100, 112, 118, 127, 128, 129, 130, 131, 132, 137, 138, 141, 142, 144, 145, 151, 162, 171, 187, 192, 195, 210, 211, 212, 213, 214, 215, 217, 221, 229, 233, 243, 256, 257, 258, 259, 265, 267, 268], "earli": [7, 28, 118, 142], "early_stop": [0, 5, 13, 20, 21, 26, 27, 28, 29, 141, 145], "easi": [31, 65], "easili": [2, 16, 33, 34, 41, 49, 52, 53, 55, 64, 79], "edg": 217, "edongdongchen": 122, "edsr": 72, "edu": 71, "effect": [4, 33, 37, 41, 70, 96, 121, 144, 153, 186, 246, 248, 253], "effic": 5, "effici": [31, 54, 61, 93, 96, 130, 176, 178, 182, 187, 192, 198, 200], "effort": 7, "eg": 183, "egg": [18, 65], "ei": [37, 38, 81, 122], "eigen": 233, "eigenvalu": 83, "eigenvector": 170, "eiloss": [37, 38], "either": [23, 54, 57, 59, 63, 67, 71, 79, 119, 123, 130, 132, 137, 138, 139, 141, 161, 162, 182, 189, 210, 211, 212, 213, 214, 215, 217, 218, 219, 222, 223, 228, 256, 257, 258, 265, 267, 268, 270], "elaps": [14, 31, 32, 35], "element": [13, 19, 46, 50, 54, 58, 86, 111, 137, 176, 185, 190, 196, 229, 259], "elementwis": [42, 99, 100, 186], "ell": [19, 95, 183], "ell_0": [137, 138], "ell_1": [59, 81, 87, 88, 90, 97, 133, 137, 138, 147, 148], "ell_2": [34, 49, 59, 101, 142, 144, 146, 147, 149, 187], "ell_p": 86, "els": [0, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 19, 20, 21, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 67, 141, 146, 236, 238, 255], "elu": [117, 124], "em": 171, "email": 52, "embed": [119, 132], "embed_dim": 132, "emiss": [0, 11], "emission_wavelength": [224, 225], "emit": 11, "empti": [186, 222, 226, 234], "en": [4, 11, 94, 172, 179, 183, 224], "enabl": [5, 8, 34, 61, 130, 255, 256], "enable_grad": 34, "encapsul": 245, "encod": [0, 117, 130, 195], "encompass": [256, 258], "encount": 136, "end": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 55, 59, 63, 67, 121, 129, 141, 144, 146, 161, 163, 164, 165, 166, 167, 168, 169, 170, 187, 192, 204, 205, 206, 207, 237, 238, 255, 256], "enforc": [55, 58, 59, 87, 126, 141], "enhanc": 122, "enough": 59, "ensur": [4, 5, 6, 7, 11, 13, 15, 16, 19, 20, 21, 26, 27, 28, 29, 35, 38, 39, 40, 42, 45, 46, 47, 48, 49, 50, 54, 171, 227], "entri": [31, 59, 98, 99, 100, 140, 171, 176, 186, 187, 192, 198, 242], "enumer": 67, "envelop": [62, 158, 168], "ep": [33, 113, 172], "epll": [18, 25, 54, 66, 171, 178, 180, 184, 186, 187, 192, 260, 263, 265], "epll_batch_s": 24, "epll_dataload": 24, "epll_max_it": 24, "epll_num_compon": 24, "epll_prior": 24, "epoch": [2, 16, 24, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 67, 95, 244, 245], "eps_anderson_acc": [141, 145], "eps_anderson_acc_backward": 255, "epsilon": [0, 20, 21, 23, 31, 34, 95, 99, 133, 140, 184, 193, 201, 202], "epsilon_adjoint": 133, "epub": 120, "eq": [11, 24, 55, 59, 123, 141], "equal": [41, 80, 92, 93, 103, 137, 158, 185, 186, 190, 198, 200, 203, 226, 227, 267], "equat": [0, 19, 20, 21, 24, 33, 34, 46, 49, 55, 59, 63, 141, 161, 163, 164, 165, 166, 167, 168, 169, 170, 204, 205, 206, 207, 237, 238, 255], "equilibrium": [18, 51, 65, 66, 67, 73, 79, 85, 97, 120, 143, 149, 154, 156, 175, 178, 184, 187, 192, 206, 255, 257, 261], "equispac": [24, 226], "equispacedmaskgener": 15, "equival": [12, 34, 93], "equivari": [18, 43, 56, 66, 67, 73, 78, 79, 81, 85, 87, 120, 123, 136, 143, 149, 154, 156, 178, 186, 187, 189, 192, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 258, 261, 263, 265], "equivariantdenois": 54, "error": [16, 32, 33, 35, 41, 42, 46, 49, 67, 80, 81, 86, 87, 88, 90, 92, 96, 97, 156, 200, 244], "escand": 220, "especi": 56, "esrgan": 122, "est": [0, 10, 27, 28, 29, 48, 49, 141, 145, 151, 163, 164, 165, 166, 167], "estim": [2, 13, 23, 24, 27, 33, 34, 42, 54, 55, 59, 80, 89, 91, 92, 95, 98, 99, 100, 110, 119, 121, 135, 140, 144, 151, 155, 163, 164, 165, 166, 167, 171, 178, 185, 187, 238, 240, 242, 243, 260], "estimt": 23, "et": [0, 2, 5, 7, 20, 21, 26, 28, 33, 34, 37, 54, 60, 96, 105, 106, 107, 108, 109, 112, 113, 115, 116, 118, 119, 120, 122, 129, 133, 136, 227, 228, 246, 253], "eta": [31, 34, 35, 130, 141, 187, 192, 236, 237, 241, 242], "eta_0": 31, "eta_backtrack": 141, "etab": [32, 236], "etc": [2, 12, 14, 31, 59, 61, 62, 63, 64, 65, 79, 81, 103, 145, 243, 259], "euclidean": [37, 246], "eugenesiow": 78, "eval": [2, 16, 26, 28, 29, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 67, 96], "eval_dataload": [2, 16, 37, 39, 40, 42, 45, 46, 47, 48, 50, 67, 244, 245], "eval_interv": [67, 245], "eval_metr": 67, "eval_mod": [82, 83], "eval_n_sampl": [41, 93, 96], "eval_psnr": 245, "eval_split_input": [41, 96], "eval_split_output": [41, 96], "evalu": [2, 14, 24, 32, 34, 41, 45, 46, 47, 56, 61, 63, 67, 78, 83, 89, 92, 95, 96, 134, 145, 152, 153, 171, 187, 192, 227, 234, 243, 244, 245], "even": [9, 34, 92, 130, 210, 231], "evenli": 79, "eventu": [2, 33], "everi": [13, 34, 67, 86, 111, 114, 116, 118, 125, 126, 127, 128, 131, 208, 209, 245], "evid": 31, "evlauaton": 145, "exact": [2, 8, 54, 176, 187, 190, 200], "exactli": [80, 171, 221, 223], "exampl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 59, 61, 63, 65, 66, 68, 69, 70, 71, 72, 74, 75, 77, 80, 83, 92, 93, 95, 121, 135, 145, 182, 201, 203, 235, 270], "except": 217, "excit": 11, "exclus": [221, 231], "exdb": [41, 42, 46], "execut": [1, 3, 17, 22, 24, 25, 26, 30, 36, 38, 43, 44, 49, 51, 66], "exist": [12, 60, 61, 63, 68, 69, 72, 75, 77, 78, 80, 92, 176, 182, 186, 187, 191, 192, 196, 198, 200], "exp": [13, 150, 185, 188, 206, 230], "expand": [4, 11], "expans": [35, 220], "expect": [18, 24, 25, 66, 69, 75, 121, 130, 144, 171, 178, 180, 184, 186, 187, 192, 227, 260, 263, 265], "experi": [0, 7, 37, 118], "experiment": [24, 26, 38, 49], "explain": [7, 65, 270], "explicit": [15, 17, 18, 28, 47, 61, 65, 66, 73, 79, 141, 143, 149, 156, 162, 175, 178, 184, 187, 192, 206, 241, 243, 261], "explicit_prior": [5, 28, 156], "explicitli": [24, 26, 38, 49], "exploit": [13, 14, 31, 40, 42], "explor": [4, 11], "export": 24, "express": [11, 178], "ext": 53, "extend": [0, 2, 19, 23, 48, 57], "extens": 270, "extra": [61, 93, 187], "extract": [2, 13, 23, 24, 37, 41, 42, 46, 121, 144, 267], "extract_loc": [0, 267], "extract_s": [0, 267], "ey": 189, "f": [0, 4, 7, 9, 11, 12, 13, 14, 20, 21, 24, 27, 29, 31, 32, 33, 35, 53, 55, 59, 63, 67, 82, 83, 99, 126, 133, 140, 141, 143, 145, 147, 149, 151, 156, 162, 163, 164, 165, 166, 167, 168, 169, 170, 173, 178, 182, 187, 189, 195, 207, 238, 240, 256, 257, 258], "f_": [7, 16], "f_0": 141, "f_fn": [27, 141, 151, 162, 257, 258], "f_k": 145, "f_matern": 230, "f_step": [26, 27, 28, 29, 48], "f_x": 230, "f_y": 230, "face": [8, 34], "facebookresearch": 226, "factor": [0, 12, 15, 23, 28, 46, 47, 50, 93, 132, 146, 149, 181, 187, 190, 204, 205, 207, 222, 239, 246, 248], "factori": 245, "factory_kwarg": 225, "fail": [41, 42, 46, 136], "faint": 0, "faintest": 0, "fake": [102, 103, 104, 129], "fake_label": 103, "fals": [0, 2, 4, 5, 6, 10, 15, 16, 19, 21, 23, 24, 26, 27, 28, 29, 33, 34, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 53, 59, 67, 68, 69, 70, 71, 72, 73, 75, 77, 78, 79, 81, 82, 83, 84, 86, 91, 94, 96, 99, 103, 110, 113, 118, 119, 123, 125, 129, 130, 131, 132, 133, 134, 136, 141, 145, 151, 152, 153, 161, 162, 163, 164, 165, 171, 176, 194, 195, 196, 198, 200, 208, 209, 210, 213, 217, 221, 236, 237, 238, 239, 240, 241, 242, 243, 245, 255, 256, 257, 258, 259, 260, 262, 263, 265, 267, 268, 270], "famili": 4, "familiar": 52, "fan": [200, 209], "fan_beam": [200, 209], "fan_paramet": [200, 209], "fashion": [49, 63, 64, 176, 186, 191, 196, 198, 223, 228, 259], "fast": [15, 46, 47, 111, 134, 166, 175, 176, 182, 186, 189, 198, 249], "fasten": [5, 6, 16, 26, 27, 28, 29, 38, 40, 42, 45, 46, 47, 49, 50], "faster": [0, 4, 20, 21, 38, 52, 71, 200, 208, 209], "fastmri": [38, 71, 226], "fastmri_knee_singlecoil": 38, "fbp": 24, "fbpconvnet": 110, "fc": [4, 11, 224, 225, 233], "featur": [24, 26, 38, 49, 111, 127, 128], "feed": 113, "feedforward": 130, "fenchel": [27, 164], "fetch": [5, 6, 20, 21, 26, 27, 29], "few": [8, 16, 24, 49, 187], "ffhq": [34, 54, 119], "ffn_expansion_factor": 130, "fft": [0, 4, 11, 61, 174, 175, 195, 211, 212, 214, 215], "fidel": [0, 5, 10, 13, 20, 21, 26, 27, 28, 29, 38, 45, 46, 47, 49, 50, 55, 58, 63, 121, 140, 141, 142, 143, 144, 145, 147, 149, 150, 151, 162, 164, 237, 238, 256, 257, 258], "field": [70, 71, 74, 133, 134, 233], "fifa": [7, 31, 32, 35], "fig": 265, "figsiz": [11, 19, 33, 265, 268, 270], "figur": [9, 33, 130, 265, 267, 268, 270], "file": [1, 3, 8, 17, 22, 24, 25, 26, 30, 36, 38, 43, 44, 49, 51, 52, 53, 59, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 95, 121, 130, 144, 152, 176, 186, 191, 196, 198, 262, 263, 270], "file1000005": 71, "file_nam": [10, 38, 39, 40, 41, 42], "file_typ": 0, "filenam": [70, 74, 79, 267, 270], "fill": [12, 264, 271, 272, 273], "filter": [4, 5, 7, 11, 12, 15, 20, 24, 26, 28, 31, 33, 45, 48, 50, 55, 61, 112, 126, 174, 175, 181, 187, 190, 197, 199, 200, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 224, 225, 229, 230, 232, 233], "filter_0": [4, 11], "filter_90": 4, "filter_rgb": 4, "filter_torch": 5, "final": [4, 11, 13, 24, 60, 117, 119, 120, 124, 131, 132], "find": [48, 113, 119, 170, 192, 197, 238, 255], "find_nearest": [33, 119, 238], "find_spec": 10, "fine": 24, "finish": [28, 31, 32, 35, 151], "finit": [47, 133, 134, 159], "firm": [54, 82], "firmli": 35, "first": [0, 2, 4, 9, 11, 12, 13, 15, 19, 20, 21, 33, 34, 47, 48, 59, 60, 101, 121, 130, 141, 143, 144, 151, 171, 182, 189, 190, 197, 198, 203, 243, 247, 249, 265, 268], "firstli": 33, "fista": [0, 166], "fit": [24, 64, 113, 171], "fix": [8, 10, 26, 38, 45, 46, 47, 49, 50, 59, 63, 141, 145, 151, 182, 187, 189, 192, 222, 226, 227, 234, 246, 255], "fixed_point": [26, 28, 29], "fixedpoint": [26, 28, 29, 59, 63, 141, 151, 255], "flat": 223, "flatten": [19, 32, 35, 59, 60, 80, 92, 135, 137, 138, 152, 161, 182, 259], "flatten_coeff": 137, "flattenspokesartifact2artifactloss": 80, "flattenspokesmetr": [80, 92], "flattenspokesnet": [80, 92], "flattenspokesphase2phaseloss": 92, "flavour": [56, 103], "fledg": 32, "flexibl": 67, "flickr2k": 72, "flip": [24, 26, 38, 49, 54, 123, 176], "float": [0, 15, 47, 59, 67, 71, 81, 82, 83, 88, 90, 91, 93, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 117, 118, 120, 121, 123, 124, 125, 130, 131, 132, 133, 134, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 160, 161, 162, 171, 172, 173, 175, 176, 178, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 197, 201, 202, 206, 207, 208, 209, 216, 217, 222, 223, 224, 225, 226, 227, 228, 229, 230, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 246, 249, 251, 252, 253, 254, 255, 256, 257, 258, 260, 267], "float16": 119, "float32": [4, 11, 24, 33, 34, 119, 176, 198, 200, 203, 208, 209, 223, 224, 225, 230, 232, 235, 262, 263], "float64": [141, 145], "flow": [24, 152], "fluoresc": [11, 70], "fly": [4, 48, 61, 67, 182, 186, 189], "fname": [70, 71], "fne": 82, "fnejacobianspectralnorm": 35, "focu": 11, "focuss": 71, "folder": [26, 28, 45, 46, 47, 53, 68, 69, 70, 72, 73, 77, 78, 79], "foldernam": [70, 74], "follow": [0, 2, 4, 5, 11, 19, 20, 21, 24, 26, 27, 29, 31, 33, 34, 35, 46, 48, 49, 52, 54, 55, 56, 58, 59, 61, 63, 65, 67, 68, 69, 71, 72, 75, 77, 78, 85, 98, 99, 100, 103, 107, 137, 141, 161, 177, 183, 207, 220, 224, 237, 238, 242, 256], "font": 33, "fontsiz": [19, 265, 268], "forbidden": [41, 42, 46], "forc": [55, 125], "forget": 156, "fork": 52, "form": [14, 16, 19, 32, 37, 47, 52, 55, 59, 61, 63, 137, 138, 141, 145, 146, 147, 150, 151, 175, 176, 187, 192, 200, 256], "formal": 19, "format": [0, 8, 19, 23, 24, 53, 67, 79, 137], "former": [34, 57, 86, 111, 114, 116, 125, 126, 127, 128, 131, 208, 209], "formul": 56, "formula": [34, 35, 62, 95, 102, 104, 143, 156, 158, 176, 181, 187, 192, 200], "forw": [2, 55, 58, 61, 81, 87, 88, 96, 107, 143, 146, 147, 149, 191, 192], "forward": [2, 4, 5, 6, 17, 18, 34, 38, 41, 45, 46, 47, 48, 53, 54, 56, 57, 59, 62, 63, 65, 66, 67, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 141, 143, 144, 145, 146, 147, 151, 152, 156, 163, 164, 165, 166, 167, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 206, 208, 209, 220, 222, 226, 227, 232, 234, 236, 237, 238, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 261, 263, 265], "forward_denois": 119, "forward_diffus": 119, "forward_restorm": 130, "found": [15, 32, 61, 138], "four": 13, "fourier": [0, 5, 15, 61, 182, 189, 195], "fov": 70, "frac": [0, 5, 19, 20, 21, 31, 33, 34, 35, 41, 42, 46, 47, 55, 62, 63, 82, 83, 91, 93, 95, 96, 98, 99, 100, 123, 133, 134, 140, 141, 143, 146, 147, 149, 158, 160, 176, 178, 187, 188, 192, 193, 194, 196, 200, 206, 230, 237, 238, 241, 242, 255, 260], "fraction": [71, 222, 249, 267], "frame": [92, 135, 270], "framework": [13, 37, 56, 65, 245, 246, 251, 252, 253, 254], "fraunhoff": [224, 225], "free": [37, 41, 80, 92, 130, 136, 221, 231, 261], "freeli": 34, "freia": 152, "freq": [222, 226], "freq_plot": [67, 245], "frequenc": [0, 4, 11, 27, 67, 222, 224, 225, 226, 227, 234], "fresnel": [4, 11, 224, 225], "frobeniu": 133, "from": [0, 1, 2, 3, 4, 5, 6, 9, 10, 11, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 85, 87, 88, 90, 92, 95, 96, 102, 104, 105, 106, 107, 108, 109, 110, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 144, 151, 152, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 198, 199, 200, 201, 202, 203, 208, 209, 217, 221, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 242, 245, 246, 251, 252, 253, 254, 255, 261, 262, 263, 265, 267, 268, 270], "from_numpi": [0, 11, 19, 33, 34], "front": [143, 146, 156], "fstep": [48, 59], "fstepcv": 27, "fstephq": 26, "fsteppdnet": 48, "fsteppgd": [28, 29], "full": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 65, 72, 80, 81, 88, 92, 95, 96, 246], "fulli": [32, 38, 39, 40, 42, 96, 111, 136], "funcanim": 270, "function": [0, 2, 4, 5, 6, 7, 8, 9, 11, 13, 14, 15, 16, 20, 21, 24, 26, 27, 28, 33, 34, 37, 38, 39, 45, 46, 47, 48, 49, 50, 54, 55, 56, 58, 59, 63, 64, 67, 68, 69, 70, 71, 72, 74, 75, 77, 78, 79, 80, 81, 82, 83, 85, 86, 88, 90, 93, 96, 98, 102, 103, 104, 111, 113, 114, 116, 118, 119, 120, 125, 126, 127, 128, 131, 134, 140, 141, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 161, 162, 163, 164, 165, 170, 171, 172, 173, 174, 176, 178, 187, 192, 197, 200, 203, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 224, 225, 227, 230, 232, 234, 239, 240, 241, 242, 243, 244, 245, 255, 257, 258, 270], "function_handl": [240, 241, 242], "further": [2, 13], "furthermor": [41, 112], "futur": [24, 26, 38, 49, 52, 244], "futurewarn": [24, 26, 38, 49], "fx_t": 182, "g": [0, 2, 5, 6, 9, 11, 18, 19, 20, 21, 24, 27, 28, 31, 34, 39, 46, 47, 53, 54, 55, 56, 59, 63, 67, 68, 69, 70, 71, 72, 75, 77, 78, 79, 80, 81, 87, 88, 90, 91, 92, 96, 97, 103, 113, 121, 123, 133, 134, 141, 144, 145, 148, 151, 153, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 174, 175, 179, 180, 182, 183, 186, 189, 194, 195, 200, 203, 206, 223, 228, 232, 233, 237, 239, 245, 256, 257, 258, 260, 270], "g1": 229, "g2": 229, "g_": [19, 46], "g_first": [5, 10, 28, 47, 49, 59, 151, 162, 163, 164, 165, 256, 257, 258], "g_i": [39, 88], "g_param": [10, 13, 26, 27, 28, 29, 31, 38, 45, 47, 49, 50, 55, 59, 63, 145, 162, 256, 258], "g_statist": [239, 240, 241, 242], "g_step": [26, 27, 28, 29, 48], "gain": [15, 42, 99, 100, 155, 193, 194], "galleri": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 66, 265, 268], "game": [2, 56], "gamma": [2, 20, 21, 27, 33, 40, 42, 46, 47, 55, 59, 90, 95, 98, 99, 100, 134, 137, 141, 143, 146, 147, 148, 149, 154, 155, 156, 159, 160, 161, 163, 165, 166, 167, 168, 169, 170, 178, 181, 183, 187, 193, 194, 256], "gamma_backtrack": 141, "gamma_distribut": 183, "gammanois": 95, "gan": [56, 102, 103, 104, 105, 106, 245], "gaussian": [0, 5, 6, 7, 9, 12, 13, 15, 19, 20, 21, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 42, 45, 46, 47, 50, 58, 61, 62, 70, 93, 95, 98, 99, 121, 144, 149, 158, 171, 176, 180, 181, 184, 187, 190, 193, 196, 197, 201, 206, 227, 228, 230, 235, 238, 242, 272], "gaussian_blur": [4, 5, 15, 45, 61], "gaussian_filt": [174, 175], "gaussianmaskgener": 15, "gaussianmixturemodel": [121, 144], "gaussiannois": [5, 6, 7, 13, 14, 15, 19, 20, 21, 23, 26, 27, 28, 29, 31, 32, 33, 35, 41, 45, 48, 50, 53, 55, 61, 93, 95, 180, 190, 236, 238], "gaussiansplittingmaskgener": 41, "gb": 119, "gd": [13, 45, 162, 167, 255, 256, 258], "gdfn": 130, "gen": [186, 223, 228], "gener": [0, 8, 10, 15, 18, 19, 23, 24, 27, 28, 29, 34, 37, 41, 48, 52, 53, 54, 56, 63, 67, 79, 80, 81, 88, 92, 95, 96, 103, 104, 105, 106, 107, 108, 109, 113, 115, 116, 118, 121, 122, 133, 144, 146, 147, 151, 152, 164, 176, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254], "generalis": 133, "generate_coeff": 224, "generate_dataset": [2, 5, 6, 16, 26, 28, 38, 39, 40, 41, 42, 45, 46, 47, 49, 50, 53], "generated_dataset_path": 53, "generated_datasets_path": [45, 46, 47, 50], "generator2d": 225, "generator_col": 11, "generatorloss": [106, 107, 109], "generatormixtur": [4, 61, 232], "geometr": [37, 123, 246, 251, 252, 254], "geometri": [37, 200, 209], "geq": [0, 93, 96, 98, 119, 155, 240, 241, 242], "get": [2, 9, 33, 34, 38, 39, 40, 41, 42, 46, 47, 52, 67, 119, 141, 171, 237, 238], "get_alpha": 33, "get_alpha_beta": 238, "get_alpha_prod": [119, 238], "get_beta": 34, "get_chain": 240, "get_cov": 171, "get_cov_inv_reg": 171, "get_degradation_url": 0, "get_dpir_param": 26, "get_freer_gpu": [2, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 19, 20, 21, 26, 27, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 236, 238], "get_gspnp_param": 28, "get_image_dataset_url": 0, "get_image_url": [4, 13, 15, 23, 27, 29, 33, 34, 37], "get_model": 2, "get_noise_schedul": 238, "get_output": [28, 48, 141], "get_pdf": [227, 234], "get_sampl": 67, "get_samples_offlin": 67, "get_samples_onlin": 67, "get_weight": 171, "get_weights_url": [2, 10, 37, 38, 39, 40, 41, 42], "gfp": 11, "gfz": [0, 195], "gif": 270, "git": [18, 65], "github": [18, 24, 26, 38, 48, 49, 52, 54, 65, 77, 90, 119, 122, 132, 133, 134, 226, 228], "give": [32, 74, 77, 78, 225, 246], "given": [2, 5, 11, 13, 19, 23, 24, 33, 62, 67, 71, 82, 83, 96, 141, 145, 153, 158, 164, 165, 166, 167, 168, 169, 170, 182, 183, 186, 187, 197, 200, 209, 222, 223, 224, 225, 226, 228, 229, 234, 259], "global": [4, 5, 6, 7, 11, 13, 15, 16, 19, 20, 21, 26, 27, 28, 29, 35, 38, 39, 40, 42, 45, 46, 47, 48, 49, 50], "gmm": [23, 24, 121, 144, 171], "gmm_bsds_color2": 23, "gmm_lodopab_smal": [121, 144], "gmm_lodopab_small2": 24, "go": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 71], "goal": [20, 21], "good": [7, 13, 16, 49, 130, 200], "goodfellowliu": 72, "googl": [18, 24], "gp": 230, "gpu": [5, 6, 16, 26, 27, 28, 29, 38, 39, 40, 42, 45, 46, 47, 49, 50, 79, 110, 117, 120, 124, 130, 131, 135, 137, 138, 171, 179, 182, 186, 189, 197, 200, 208, 209, 236, 243, 261, 262, 263], "gpu_numb": 57, "grad": [0, 13, 31, 34, 59, 143, 149, 156, 157, 158, 160], "grad_clip": [67, 245], "grad_d": [140, 143, 147, 149, 155], "grad_f": 173, "grad_fn": 177, "grad_ll": 34, "gradient": [5, 20, 21, 24, 27, 28, 29, 34, 35, 40, 48, 54, 55, 59, 63, 67, 81, 90, 113, 124, 133, 134, 140, 143, 145, 147, 149, 155, 156, 157, 160, 162, 167, 169, 172, 173, 176, 181, 187, 192, 200, 237, 245, 255, 256, 257, 258], "gradientstep": 28, "grai": [5, 6, 13, 15, 16, 20, 21, 26, 27, 28, 29, 45, 48, 49, 50, 121, 144, 236, 238, 265, 267, 268], "grayscal": [4, 11, 12, 13, 14, 15, 23, 27, 29, 54, 55, 61, 177, 190, 262, 263], "great": 2, "greater": [96, 225], "green": 179, "grid": [0, 23, 24, 61, 195, 197, 233, 248, 265, 268], "grid_siz": 0, "ground": [2, 7, 16, 20, 21, 23, 24, 27, 29, 31, 32, 33, 34, 35, 37, 41, 46, 47, 49, 56, 67, 70, 71, 80, 92, 97, 105, 106, 141, 145, 221, 231, 243, 245, 255], "groundtruth": [19, 34], "group": [37, 38, 54, 56, 81, 123, 250], "grow": 19, "gsdrunet": [28, 54], "gsdrunet_torch": 28, "gspnp": 28, "gstep": [48, 59], "gstepcv": 27, "gstephq": 26, "gsteppdnet": 48, "gsteppgd": [28, 29], "gt": [0, 2, 20, 21, 27, 29, 46, 47, 70], "gu": [11, 26, 142], "guess": [0, 13, 59, 113, 192, 237, 238], "guid": 96, "gz": [41, 42, 46, 75, 78], "h": [0, 9, 11, 15, 19, 24, 47, 56, 60, 80, 91, 92, 118, 130, 132, 135, 145, 153, 174, 175, 176, 179, 181, 182, 186, 189, 195, 196, 197, 198, 199, 203, 210, 211, 212, 213, 214, 215, 220, 221, 222, 223, 224, 226, 227, 228, 231, 233, 234, 246, 247, 248, 249, 250, 251, 252, 253, 254, 260, 265, 268, 270], "h5": [26, 28, 53, 71], "h5py": 71, "h_": 11, "h_k": [199, 220], "ha": [0, 2, 5, 6, 7, 9, 12, 14, 16, 26, 28, 32, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 67, 68, 69, 70, 71, 72, 75, 77, 78, 90, 96, 117, 137, 141, 143, 145, 156, 172, 174, 175, 176, 181, 182, 186, 189, 190, 198, 199, 200, 204, 205, 210, 212, 213, 214, 215, 220, 223, 236, 237, 265, 267, 268], "haar": 19, "hadamard": [15, 27, 198, 199, 220], "hal": 164, "half": [23, 24, 26, 38, 45, 121, 142, 144, 162, 168, 217, 238, 256, 257, 258], "handl": [80, 92, 119, 195, 228, 236, 237], "hard": [137, 138], "hard_threshold_topk": 137, "has_cost": [27, 141, 151], "hat": [2, 34, 39, 81, 88, 93, 96, 101, 105, 106, 107, 108, 109], "hauptmann": 48, "have": [0, 5, 7, 8, 9, 13, 18, 23, 24, 26, 29, 32, 33, 34, 37, 38, 39, 41, 49, 54, 61, 65, 67, 68, 69, 70, 72, 74, 75, 77, 78, 83, 91, 96, 113, 119, 130, 143, 178, 182, 187, 189, 192, 195, 197, 198, 203, 236, 245, 256, 260, 270], "haze": 61, "hazi": 185, "hd5": 79, "hd5dataset": 79, "hdf5": [26, 28, 45, 46, 47, 53, 71, 73], "hdf5dataset": [2, 5, 6, 16, 26, 28, 38, 39, 40, 41, 42, 45, 46, 47, 49, 50, 53], "head": [130, 132], "head_dim": 132, "height": [19, 71, 76, 119, 127, 128, 144, 182, 189, 200, 225, 249, 265, 268], "help": [0, 35, 52], "helper": [45, 50, 162, 178, 187, 210, 211, 212, 213, 214, 215, 257, 258], "hendriksen": 96, "here": [0, 4, 5, 6, 7, 8, 10, 11, 12, 14, 15, 18, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 38, 39, 41, 45, 46, 49, 50, 53, 59, 74, 138, 188, 191, 211], "hereaft": 34, "hessian": 133, "hf": 68, "hf_dataset": 8, "hf_train_dataset": 8, "hfdataset": 8, "hh": 210, "hidden": [24, 54, 115, 116, 119, 125, 129, 132, 152], "high": [0, 2, 12, 15, 54, 77, 78, 130, 190, 222, 226, 227, 234], "higher": [0, 13, 183, 224, 225], "highest": 0, "highli": [46, 47, 174], "histogram": [197, 217], "histogramdd": 216, "histori": [45, 67, 141, 145, 255], "history_s": [45, 141, 145], "history_size_backward": [45, 255], "ho": [33, 54, 119], "hold": 141, "home": [0, 2, 9, 10, 13, 15, 23, 24, 26, 27, 28, 33, 34, 35, 37, 38, 39, 40, 41, 42, 49], "homographi": [37, 251, 252, 253, 254], "hood": 11, "hook": [86, 111, 114, 116, 125, 126, 127, 128, 131, 208, 209], "horizont": [54, 69, 101, 123, 267], "host": 54, "hostedtoolcach": [26, 37, 245], "how": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 19, 20, 21, 23, 26, 27, 29, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 45, 46, 47, 50, 61, 96, 113, 115, 116, 122, 129, 141, 142, 145, 199, 270], "howev": [7, 19, 38, 48, 54, 57, 61, 80, 81, 87, 88, 90, 92, 96, 97, 118, 190], "hp": 145, "hq": [26, 38, 45, 59, 142, 162, 168, 238, 255, 256, 257, 258], "hqsiter": 26, "hr": [72, 75], "hspace": 145, "html": [52, 115, 116, 133, 134, 265, 268, 270], "http": [2, 4, 7, 8, 10, 11, 13, 18, 19, 23, 24, 26, 27, 28, 31, 32, 34, 35, 37, 38, 39, 40, 41, 42, 46, 48, 49, 55, 65, 67, 68, 71, 72, 74, 77, 78, 81, 82, 83, 86, 88, 90, 93, 94, 95, 98, 99, 100, 103, 110, 115, 116, 119, 120, 122, 123, 127, 128, 132, 133, 134, 164, 172, 176, 179, 181, 183, 185, 197, 200, 209, 224, 226, 228, 230, 236, 237, 238, 241, 242, 246, 253, 265, 268, 270], "hub": [2, 10, 13, 23, 24, 26, 27, 28, 34, 35, 37, 38, 39, 40, 41, 42, 130], "hug": 8, "hugginfacehub": 54, "huggingfac": [2, 10, 11, 13, 17, 18, 19, 23, 24, 27, 28, 34, 35, 37, 38, 39, 40, 41, 42, 54, 55, 66, 68, 72, 78, 130, 265], "human": 34, "hurault": [28, 65], "hv110_p0500510000": 70, "hv110_p0500510049": 70, "hyperparamet": [23, 31, 34, 35, 46, 47, 58, 59, 98, 137, 138, 142, 178, 187, 236, 237, 238], "i": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 107, 110, 112, 113, 114, 117, 118, 119, 120, 121, 123, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 248, 253, 255, 256, 260, 262, 263, 265, 267, 268, 270], "ib": [6, 16, 20, 26, 38, 49, 50], "iccv": 144, "id": [19, 24, 82], "idea": [52, 60], "ideal": 103, "ident": [15, 23, 27, 82, 98, 141, 145, 170, 178, 180, 187, 192, 240, 241, 242], "identif": 61, "identifi": [70, 71, 74], "idri": 74, "idx": 33, "idx1": [41, 42, 46], "idx3": [41, 42, 46], "ie": [61, 229], "ieee": [26, 48, 86, 93, 98, 99, 100, 112, 134, 142, 185, 197], "ieeexplor": [86, 93, 98, 99, 100, 185, 197], "ignor": [0, 6, 37, 54, 86, 96, 111, 114, 116, 125, 126, 127, 128, 131, 208, 209, 222, 223, 226, 227, 234], "ii": 0, "iid": [176, 198], "ill": 11, "illumin": 11, "illustr": [4, 59], "ilvr_adm": 119, "im": [0, 34], "im_siz": 0, "im_width": 200, "imag": [1, 3, 4, 8, 11, 17, 18, 22, 30, 33, 34, 36, 41, 43, 48, 51, 54, 56, 58, 60, 62, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 146, 149, 152, 153, 154, 156, 159, 161, 162, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 203, 206, 208, 209, 210, 211, 212, 213, 214, 215, 218, 219, 220, 221, 222, 224, 225, 227, 228, 230, 231, 232, 233, 236, 238, 239, 240, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 265, 266, 267, 268, 270], "image_gdth": 0, "image_srf_2": 77, "image_srf_3": 77, "image_srf_4": 77, "imagefold": [2, 6, 37, 53], "imageio": 11, "imagenet128": [54, 119], "images_contours_and_field": [265, 268], "imaginari": [15, 38, 139, 182, 189], "imbalanc": 245, "img": [0, 13, 20, 21, 24, 27, 29, 31, 32, 33, 34, 35, 70, 76, 122, 265, 268], "img1": 265, "img2": 265, "img3": 265, "img_001": 78, "img_001_srf_2_bicub": 77, "img_014_srf_2_srcnn": 77, "img_100": 78, "img_list": [265, 267, 268], "img_rang": 132, "img_shap": [7, 13, 15, 27, 46, 47, 53, 61, 114, 176, 196, 198], "img_siz": [0, 4, 5, 6, 7, 10, 12, 13, 15, 16, 20, 21, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 38, 45, 46, 47, 48, 49, 50, 55, 80, 92, 132, 175, 179, 181, 182, 187, 189, 190, 195, 199, 222, 226, 227, 233, 234, 262, 263], "img_transform": 8, "img_typ": 70, "img_width": [15, 24, 29, 41, 48, 200], "immers": [11, 225], "implement": [0, 2, 4, 11, 14, 15, 18, 19, 27, 36, 37, 41, 46, 47, 48, 56, 59, 61, 65, 66, 67, 80, 92, 96, 115, 116, 119, 120, 122, 125, 129, 132, 134, 142, 143, 145, 149, 151, 155, 156, 164, 171, 174, 175, 178, 184, 186, 187, 192, 195, 199, 216, 217, 218, 219, 222, 226, 234, 236, 237, 238, 261, 263, 265], "implicit": [7, 59, 63, 156, 255], "implicitli": [24, 26, 29, 38, 49, 55, 59, 133, 134], "import": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 59, 61, 63, 68, 69, 70, 71, 72, 74, 75, 77, 78, 80, 83, 92, 93, 95, 96, 106, 107, 109, 135, 141, 143, 145, 149, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 186, 187, 188, 189, 190, 193, 194, 198, 199, 200, 201, 202, 203, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 238, 245, 246, 251, 252, 253, 254, 258, 265, 268, 270], "importlib": 10, "impos": 37, "improv": [7, 13, 41, 48, 92, 98, 110, 231], "impuls": [4, 9, 197, 199], "in_chan": 132, "in_channel": [2, 13, 16, 27, 29, 37, 38, 39, 40, 41, 42, 45, 117, 119, 120, 124, 125, 127, 128, 130, 136, 258], "in_nc": 131, "in_siz": [7, 114, 200, 208, 209], "includ": [23, 37, 55, 61, 62, 67, 71, 79, 80, 92, 93, 96, 120, 171, 191, 212, 215, 217, 221, 223, 231, 243, 246, 251, 252, 254], "incom": [63, 255], "incomplet": [7, 18, 32, 35, 43, 66, 67, 73, 79, 81, 85, 87, 88, 110, 136, 176, 178, 186, 187, 192, 200, 261], "incorpor": [0, 13, 182, 186, 187, 192, 195], "increas": [0, 4, 19, 96, 121, 136, 144], "inde": [29, 187], "independ": [60, 71, 135, 176, 196, 198, 230], "index": [11, 20, 21, 26, 28, 37, 67, 94, 171, 225, 270], "index_select": 34, "indic": [15, 49, 55, 71, 79, 137, 145, 146, 161, 224, 240], "indicatorl2": [10, 49], "individu": [67, 270], "induc": [0, 21], "inexact": 99, "inf_lr": 113, "inf_max_it": 113, "inf_progress_bar": 113, "inf_tol": [2, 113], "inf_z": [62, 158], "infer": [2, 67, 95, 113, 208, 209, 217], "inferno": 0, "infinit": [63, 255], "inform": [0, 13, 16, 38, 39, 40, 42, 49, 54, 56, 67, 71, 79, 94, 141, 171, 187, 243], "infti": [49, 146, 161], "inherit": [4, 5, 14, 28, 31, 48, 56, 57, 59, 61, 182, 189], "init": [10, 270], "init_anderson_acceler": 145, "init_iterate_fn": [141, 145], "init_metrics_fn": [141, 145], "init_param": [46, 47, 50, 269], "initi": [10, 19, 24, 28, 29, 33, 34, 38, 39, 40, 42, 45, 46, 47, 49, 50, 59, 67, 113, 117, 118, 119, 120, 124, 131, 132, 141, 144, 145, 152, 171, 191, 192, 232, 237, 238, 269], "initialis": [96, 145, 182, 187, 189], "inner": [159, 241], "inner_it": 241, "inpaint": [7, 10, 16, 18, 22, 25, 32, 34, 35, 37, 39, 51, 55, 59, 61, 63, 65, 66, 67, 73, 79, 85, 96, 97, 137, 141, 143, 144, 146, 149, 154, 156, 161, 162, 178, 179, 180, 184, 187, 192, 223, 228, 236, 238, 243, 256, 258, 260, 261, 263, 265, 266], "inplac": 113, "inpu": 67, "input": [2, 5, 7, 9, 15, 19, 20, 21, 26, 27, 28, 29, 33, 34, 41, 48, 50, 54, 55, 59, 61, 67, 71, 80, 82, 83, 85, 89, 92, 93, 96, 107, 108, 109, 111, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136, 137, 139, 145, 151, 152, 158, 162, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 178, 179, 181, 182, 185, 186, 190, 191, 194, 195, 196, 197, 199, 200, 203, 208, 209, 221, 223, 228, 231, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258], "input_mask": [221, 223, 228, 231], "input_nc": 129, "input_resolut": 131, "input_s": [7, 118, 203], "input_shap": 122, "inscrib": 200, "inset": 267, "inset_loc": [0, 267], "inset_s": [0, 267], "insid": [11, 130, 146, 200, 240], "inspir": [110, 238], "instal": [0, 18, 52, 56, 74, 270], "instanc": [4, 5, 11, 27, 33, 47, 48, 57, 59, 67, 86, 111, 114, 116, 125, 126, 127, 128, 131, 141, 145, 151, 156, 162, 163, 164, 165, 166, 167, 170, 208, 209, 244, 256, 257, 258], "instanci": [68, 69, 71, 74, 77], "instanti": [0, 4, 5, 11, 13, 20, 21, 26, 27, 28, 29, 61, 70, 72, 75, 78, 141, 199, 229], "instead": [0, 2, 19, 34, 48, 57, 82, 86, 96, 110, 111, 114, 116, 125, 126, 127, 128, 131, 134, 168, 174, 208, 209, 216, 217, 221, 231, 244], "instruct": 130, "int": [0, 13, 15, 16, 31, 33, 35, 38, 39, 40, 42, 45, 48, 49, 50, 67, 70, 71, 76, 79, 80, 82, 83, 92, 93, 95, 96, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 141, 143, 144, 145, 146, 147, 152, 153, 156, 159, 161, 162, 171, 172, 173, 176, 181, 184, 187, 188, 190, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 204, 205, 207, 208, 209, 216, 217, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 250, 251, 252, 253, 254, 255, 256, 258, 262, 263, 265, 268, 270], "integ": [37, 240, 241, 242, 249], "integr": [61, 69, 75, 200, 220], "intens": [9, 11, 185, 197], "interact": 270, "interest": [0, 27, 33, 141], "interfac": [31, 59], "interferometr": [1, 18, 66, 141, 143, 149, 156, 161, 162, 187, 192, 195, 260, 265, 266, 267], "interferometri": [0, 195], "intermedi": [28, 111, 136], "intern": [9, 28, 37, 143, 156, 171], "internet": [68, 69, 70, 72, 75, 77, 78], "interp_point": [0, 195], "interpol": [0, 4, 11, 15, 28, 34, 61, 82, 195, 200, 233, 246, 248, 251, 252, 253, 254, 265, 268], "interpolation_method": [265, 268], "interpret": [55, 130, 136, 137, 188], "interv": [161, 235, 242], "intial": 13, "intiliaz": 164, "intract": 34, "introduc": [0, 34, 60, 112, 114, 120, 131, 132, 221, 241], "inv": 24, "invari": [37, 81, 146], "invers": [0, 3, 4, 6, 7, 12, 14, 15, 16, 18, 23, 24, 28, 31, 32, 35, 38, 39, 41, 42, 52, 55, 56, 58, 60, 61, 63, 64, 65, 66, 67, 73, 78, 79, 81, 85, 87, 88, 95, 97, 98, 99, 100, 102, 104, 105, 106, 107, 108, 109, 110, 113, 115, 116, 122, 125, 129, 136, 152, 171, 174, 175, 182, 185, 186, 187, 189, 191, 192, 200, 208, 230, 232, 236, 245, 261, 265, 270], "inversef": [41, 67, 96], "invert": [24, 152, 163, 164, 165], "investig": 0, "involv": [37, 46, 133, 134], "io": [11, 48, 133, 134], "iota_": [49, 146, 161], "ip": [5, 13, 26, 27, 28, 29], "ipynb": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50], "ipython": 270, "iqa": 26, "irf": 9, "irf_sigma": 9, "is_avail": [0, 2, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 19, 20, 21, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 236, 238], "is_standard_deblurring_network": 130, "is_standard_denoising_network": 130, "is_standard_deraining_network": 130, "is_valid_fil": 53, "isola": 129, "isomorph": 253, "isotrop": [134, 206, 248], "issu": [24, 26, 31, 38, 49, 52, 65], "item": [0, 11, 24, 59, 67, 80, 92, 93, 95, 96, 198], "iter": [0, 2, 5, 6, 7, 8, 10, 12, 13, 14, 18, 20, 21, 26, 27, 28, 29, 32, 33, 34, 35, 37, 38, 41, 45, 49, 50, 51, 63, 66, 67, 73, 74, 79, 80, 82, 83, 85, 97, 113, 118, 133, 134, 138, 141, 142, 143, 145, 146, 147, 149, 151, 156, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 187, 192, 237, 238, 239, 240, 241, 242, 243, 245, 255, 256, 257, 258, 261, 265, 269], "iterable_dataset": 8, "iterabledataset": 8, "iteratbl": 8, "iterator_param": 240, "ith": [121, 144], "its": [10, 13, 14, 20, 21, 27, 33, 41, 46, 47, 48, 49, 56, 61, 67, 69, 70, 96, 133, 134, 141, 152, 171, 178, 217, 223, 230, 232, 270], "itself": 0, "iwt": 137, "j": [9, 34, 46, 48, 96, 133, 134, 141, 161, 176, 196, 197], "jac_inv": 24, "jacobian": [82, 83, 133, 143, 152, 187, 191, 192], "jacobianspectralnorm": 82, "jbhuang0604": 77, "jin": 60, "jingyunliang": 132, "jmo": 11, "join": 65, "jointli": [50, 56, 245], "jona": 48, "journal": 220, "jpeg": [4, 27, 75], "jpg": [7, 31, 32, 35, 37], "json": 68, "julian": 65, "jupyt": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50], "just": [0, 4, 24, 180, 187], "jychoi118": 119, "k": [0, 10, 15, 26, 27, 31, 35, 46, 47, 48, 49, 55, 59, 61, 63, 67, 71, 80, 92, 133, 137, 138, 141, 142, 145, 151, 163, 164, 165, 166, 167, 168, 169, 170, 195, 199, 220, 222, 226, 227, 230, 234, 241, 242, 256], "k_adjoint": [10, 48, 49], "k_oversampl": [0, 195], "kaiser": [195, 207], "kargs_model": 82, "kb": [11, 225], "kbnufft": 0, "kbnufftadjoint": 0, "keep": [16, 34, 45, 49, 137, 176, 186, 187, 192, 198, 240, 241, 242], "keepdim": 259, "kei": [4, 8, 11, 27, 34, 59, 61, 67, 132, 141, 200, 209, 222, 223, 224, 225, 229, 230, 232, 233, 235, 243, 256, 258], "kept": [134, 137, 138, 223, 228], "kernel": [4, 5, 9, 11, 15, 20, 21, 26, 28, 31, 33, 61, 62, 126, 158, 174, 195, 210, 211, 212, 213, 214, 215, 224, 225, 240], "kernel_index": [20, 21, 26, 28], "kernel_s": [113, 126, 230], "kernel_torch": [20, 21, 26, 28], "kernels_12": 28, "keyword": [82, 145, 216, 244, 256, 270], "kindli": 0, "kl": 24, "knee": 71, "knee_singlecoil": 71, "knowledg": [42, 55], "known": [32, 147, 150], "kornia": [56, 246], "kr": 72, "kspace": 71, "kullback": 24, "kunisch": 133, "kupyn": [2, 105, 106, 129], "kutta": 241, "kwarg": [0, 5, 14, 27, 28, 37, 47, 48, 67, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 113, 116, 132, 135, 138, 143, 145, 148, 151, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 216, 222, 223, 226, 227, 228, 229, 232, 233, 234, 235, 243, 244, 247, 248, 249, 250, 255, 256, 257, 258], "kwargs_model": 82, "kx": 164, "l": [2, 4, 19, 24, 26, 39, 56, 67, 80, 92, 93, 95, 96, 105, 106, 107, 108, 109, 117, 124, 126, 133, 134, 142, 183, 207, 230, 241, 242], "l1": [47, 130, 148], "l1prior": 145, "l2": [0, 5, 13, 20, 21, 26, 27, 28, 29, 31, 33, 34, 35, 38, 45, 46, 47, 50, 55, 59, 63, 121, 130, 141, 143, 145, 156, 238, 257, 258], "l2_loss": 34, "l2_prior": 5, "l2prior": 5, "l3": 130, "l4": 130, "label": [2, 6, 24, 41, 42, 46, 53, 55, 59, 102, 103, 104, 119, 141, 267], "label_loc": 267, "lam": 24, "lam_epl": 24, "lam_patchnr": 24, "lamb": [0, 10, 20, 21, 28, 38, 46, 47, 143, 156, 170], "lambd": 59, "lambda": [0, 2, 5, 10, 11, 19, 20, 21, 24, 27, 28, 29, 38, 39, 40, 41, 42, 46, 47, 55, 58, 59, 71, 98, 137, 138, 141, 143, 145, 151, 156, 162, 163, 164, 165, 166, 167, 168, 169, 170, 178, 187, 192, 203, 232, 238, 239, 240, 241, 242, 256, 257, 258], "lambda_": [11, 19, 33, 46, 238], "lambda_1": 133, "lambda_2": 133, "lambda_col": 11, "lambda_i": 19, "lambda_il": 11, "langevin": [31, 35, 65, 241, 242], "larg": [0, 2, 13, 14, 61, 65, 75, 98, 118, 119, 121, 133, 144, 161, 174, 176], "large_model": [33, 34, 119], "larger": [37, 45, 50, 79, 119, 176, 187, 188, 200, 232, 241, 242], "largest": [83, 137, 141], "last": [4, 33, 67, 99, 145, 186, 217], "last_batch": 67, "latent": [2, 24, 111, 113, 116], "later": [13, 33, 34], "latest": 65, "latter": [34, 79, 86, 111, 114, 116, 125, 126, 127, 128, 131, 208, 209], "laurent": [133, 134], "law": 176, "layer": [7, 38, 48, 50, 54, 63, 111, 114, 115, 116, 117, 119, 120, 127, 128, 129, 130, 131, 132, 136], "layernorm": [130, 132], "layernorm_typ": 130, "layout": [265, 268], "lcondat": [133, 134], "ldot": [19, 204, 205], "lead": [200, 209, 253], "leakyrelu": [117, 124, 194], "learn": [2, 3, 5, 7, 16, 23, 24, 26, 28, 37, 40, 42, 43, 45, 49, 50, 51, 52, 54, 66, 67, 73, 79, 80, 81, 84, 85, 87, 88, 92, 95, 96, 97, 110, 113, 115, 116, 117, 118, 120, 125, 127, 128, 136, 142, 143, 144, 149, 151, 154, 156, 161, 164, 169, 176, 178, 184, 186, 187, 189, 192, 200, 221, 223, 228, 231, 243, 245, 247, 248, 250, 256, 258, 261, 265, 269], "learnabl": [46, 47, 49, 63, 132, 136, 256], "learning_r": [7, 16, 38, 39, 40, 42, 45, 46, 47, 48, 49, 50, 118], "learning_std": [2, 5, 16, 26, 38, 39, 40, 41, 42, 45, 48, 49, 50], "least": [16, 49, 59, 67, 103], "leclair": 28, "lecun": [41, 42, 46], "left": [2, 11, 31, 33, 35, 39, 42, 46, 59, 62, 63, 98, 99, 100, 105, 106, 107, 108, 109, 143, 146, 158, 161, 176, 187, 192, 196, 206, 230, 238, 242, 255, 267], "leftarrow": 141, "legendr": [27, 164], "leibler": 24, "len": [0, 4, 11, 19, 33, 68, 69, 70, 72, 75, 77, 78, 224, 225], "lenght": 50, "length": [4, 9, 10, 38, 46, 47, 48, 49, 50, 80, 113, 141, 207, 221, 230, 265, 267, 268, 270], "leq": [33, 146, 164, 166, 169, 170, 204, 205, 207], "lesion": 74, "less": 228, "let": [4, 8, 11, 19, 33, 34, 123], "level": [0, 7, 9, 10, 15, 19, 21, 23, 27, 29, 31, 32, 33, 34, 35, 46, 49, 50, 54, 59, 62, 70, 95, 112, 117, 119, 120, 123, 130, 132, 136, 137, 138, 142, 149, 154, 155, 158, 161, 183, 184, 188, 192, 194, 197, 202, 232, 235, 236, 237, 238, 241, 242], "leverag": [62, 63, 83, 178, 182, 255], "levin": [5, 20, 21, 26, 28], "levin09": [20, 21, 26], "lhood": 31, "lib": [26, 37, 245], "librari": [2, 11, 33, 45, 47, 48, 52, 54, 60, 67, 112, 152, 243, 244], "libreari": 125, "licenc": 74, "lidar": [17, 18, 66, 192, 197, 261], "lidc": 74, "light": [11, 61, 185, 225], "like": [0, 117, 133, 171, 228], "likelihood": [18, 24, 25, 31, 34, 58, 62, 66, 121, 144, 149, 150, 152, 153, 155, 171, 178, 180, 184, 186, 187, 192, 240, 241, 242, 260, 263, 265], "limit": [8, 18, 19, 23, 25, 26, 37, 38, 49, 54, 66, 67, 76, 121, 130, 143, 144, 150, 152, 153, 156, 178, 180, 187, 188, 192, 200, 202, 224, 225, 260, 265], "linalg": 19, "line": [12, 18, 55, 61, 186, 200, 222, 226, 227, 234], "linear": [0, 7, 12, 15, 16, 20, 21, 24, 27, 29, 31, 32, 33, 34, 35, 46, 47, 49, 67, 98, 101, 110, 121, 133, 134, 140, 143, 144, 145, 159, 170, 172, 176, 178, 180, 182, 185, 186, 187, 189, 190, 191, 192, 198, 200, 203, 233], "linearli": [265, 268], "linearphys": [0, 12, 14, 61, 98, 121, 141, 143, 144, 145, 174, 176, 178, 181, 186, 190, 191, 195, 199, 200, 237, 238, 245], "linefmt": 9, "linewidth": 0, "link": [7, 18, 33, 58, 119, 240, 241, 242], "linspac": [24, 32, 33, 34, 200, 236], "lionel": [7, 31, 32, 35], "lip": [166, 169, 170], "lipschitz": [27, 54, 56, 133, 134, 155, 187, 241, 242], "lipschitzian": [133, 134], "list": [10, 12, 15, 33, 34, 39, 46, 47, 49, 50, 57, 59, 64, 65, 67, 70, 79, 88, 117, 118, 121, 124, 130, 131, 137, 138, 141, 144, 161, 162, 176, 185, 190, 191, 192, 200, 217, 224, 225, 229, 236, 243, 244, 245, 248, 256, 257, 258, 259, 265, 267, 268, 270], "list_imag": 19, "list_param": [4, 11, 224, 225], "list_prox": 19, "list_wv": [19, 138], "lista": [18, 47, 49, 51, 66, 67, 73, 79, 85, 97, 143, 149, 156, 161, 169, 176, 187, 192, 256, 258, 261, 265, 269], "listtensor": 185, "live": [29, 200, 270], "liver": [92, 231], "ll": [0, 19, 34], "load": [0, 2, 4, 11, 17, 18, 33, 41, 53, 55, 61, 66, 67, 68, 69, 70, 71, 72, 74, 75, 77, 78, 79, 130, 137, 143, 146, 154, 156, 176, 178, 186, 187, 191, 192, 196, 198, 256, 258, 261, 262, 263], "load_dataset": [5, 6, 8, 16, 20, 21, 26, 28, 38, 45, 49, 50], "load_degrad": [20, 21, 26, 28, 38], "load_metadata_from_cach": 71, "load_np_url": [0, 11, 19], "load_state_dict": [2, 10, 37, 38, 39, 40, 41, 42, 49, 171, 176, 186, 191, 196, 198], "load_state_dict_from_url": [2, 10, 37, 38, 39, 40, 41, 42], "load_torch_url": 24, "load_url_imag": [4, 7, 13, 15, 23, 27, 29, 31, 32, 33, 34, 35, 37, 55], "loader": [46, 47, 53, 67, 243, 244], "loc": [10, 38, 39, 40, 41, 42, 267], "local": [7, 40, 52, 53, 130], "locat": [0, 9, 182, 189, 195, 212, 267], "lodopab": [24, 188], "log": [0, 5, 13, 18, 20, 21, 24, 25, 29, 31, 34, 35, 45, 46, 47, 48, 50, 54, 62, 66, 67, 95, 121, 144, 149, 150, 152, 153, 155, 158, 171, 176, 178, 180, 184, 186, 187, 188, 192, 198, 237, 240, 241, 242, 245, 260, 263, 265], "log10": 0, "log_": [91, 260], "log_metrics_wandb": 67, "logan": 13, "logarithm": 0, "logpoisson": 188, "logpoissonlikelihood": 24, "logpoissonnois": [24, 150], "logs_total_loss_ev": [24, 67], "logs_total_loss_train": [24, 67], "logscal": 0, "long": [6, 34, 67], "longer": [24, 26, 38, 49], "look": 63, "loop": [57, 67, 145], "loop_physics_gener": [67, 245], "loss": [2, 7, 13, 16, 18, 24, 26, 35, 37, 38, 39, 43, 45, 46, 47, 48, 49, 50, 54, 61, 65, 66, 67, 73, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 118, 136, 140, 143, 149, 178, 180, 187, 192, 194, 221, 223, 228, 231, 243, 244, 245, 261], "loss_d": 2, "loss_g": 2, "loss_hist": 13, "loss_tot": [24, 67], "losses_d": [2, 245], "lossi": [2, 108, 109, 113], "low": [0, 12, 15, 27, 62, 158, 181, 188, 190, 216, 217, 222, 226, 227, 234], "lower": [188, 203, 216, 217], "lpip": 26, "lpips_std": 26, "lpips_v0": 26, "lprior": 31, "lr": [2, 7, 16, 24, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 72, 130], "lr_d": 2, "lr_g": 2, "lr_schedul": [2, 16, 38, 39, 40, 42, 45, 48, 49, 50, 67, 245], "lr_variational_problem": 24, "lsdir": 75, "lsgan": [56, 103], "lung": 74, "lvert": [2, 107], "m": [0, 11, 13, 15, 27, 41, 42, 46, 47, 52, 53, 58, 61, 96, 98, 99, 100, 134, 140, 170, 176, 178, 186, 187, 192, 195, 196, 198, 223, 228, 241], "m_": 96, "m_1": 96, "m_2": [41, 96], "m_i": 96, "machin": 52, "made": [53, 71], "magnet": [92, 182, 189, 231], "magnitud": [265, 268], "mai": [2, 7, 9, 13, 59, 96, 118, 136, 141, 151, 194], "main": [2, 10, 11, 13, 14, 19, 23, 24, 26, 27, 28, 34, 35, 37, 38, 39, 40, 41, 42, 49, 52, 55, 72, 78, 122, 228], "maintain": 171, "make": [13, 35, 52, 54, 67, 137, 174], "malici": [24, 26, 38, 49], "mandatori": 95, "mani": [7, 41, 55, 61, 63, 65, 181, 245], "manifest": 74, "manner": [67, 178, 182, 243], "manual": [7, 29], "manual_se": [0, 4, 5, 6, 7, 11, 13, 15, 16, 19, 20, 21, 26, 27, 28, 29, 35, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 61, 83, 176, 178, 180, 182, 186, 189, 196, 198, 200, 229, 232, 236], "map": [13, 40, 48, 58, 60, 61, 62, 90, 98, 113, 119, 133, 134, 158, 180, 187, 192, 237, 238], "map_loc": [2, 10, 26, 37, 38, 39, 40, 41, 42], "mapsto": [55, 58, 59, 61, 141, 187, 192, 195], "marcenko": 176, "mark": 74, "markerfmt": 9, "markov": [31, 240, 241, 242], "mask": [7, 10, 14, 15, 16, 21, 23, 31, 32, 34, 35, 37, 38, 39, 40, 41, 49, 55, 59, 61, 67, 71, 80, 90, 92, 96, 149, 175, 178, 182, 186, 189, 198, 221, 222, 223, 224, 225, 226, 227, 228, 231, 234, 236, 238], "mask_gaussian": 15, "mask_gener": [41, 61, 96], "mask_random": 15, "mask_svd": 178, "mask_uniform": 15, "mat": [20, 21, 26], "match": [46, 52, 186, 197, 259], "matern_kernel": 230, "math": [27, 28, 33, 47, 48, 97, 143, 156, 158, 163, 165, 166, 168, 212], "mathbb": [0, 2, 19, 24, 37, 55, 59, 82, 83, 96, 105, 106, 107, 108, 109, 141, 176, 178, 186, 195], "mathbf": [2, 33, 34, 55, 237, 238], "mathcal": [2, 9, 23, 24, 33, 34, 35, 39, 49, 56, 62, 93, 98, 99, 100, 105, 106, 107, 108, 109, 123, 146, 158, 176, 183, 184, 188, 193, 194, 196, 197, 201, 202, 230, 237, 238, 242], "mathemat": [12, 220], "mathrm": [24, 176, 196], "matlab": [133, 134], "matplotlib": [9, 11, 13, 19, 33, 265, 268, 270], "matric": [31, 96, 171, 176, 218, 219], "matrix": [0, 15, 31, 46, 47, 83, 170, 176, 186, 187, 190, 195, 196, 198, 200], "matthieu": 65, "mat\u00e9rn": 230, "max": [0, 11, 13, 15, 19, 32, 34, 35, 86, 91, 117, 124, 148, 161, 201, 216, 217, 260, 265, 268], "max_img": [265, 268], "max_it": [0, 5, 10, 13, 19, 20, 21, 24, 26, 27, 28, 29, 31, 32, 35, 38, 45, 46, 47, 48, 49, 50, 59, 82, 83, 138, 141, 145, 146, 147, 162, 171, 172, 173, 187, 192, 237, 238, 239, 240, 241, 242, 256, 258], "max_iter_backward": 255, "max_iter_int": [143, 156], "max_pixel": [91, 260], "max_zernike_amplitud": [224, 225], "maxim": [5, 16, 24, 26, 28, 45, 46, 47, 49, 50, 54, 143, 156, 159, 171], "maximis": [105, 108], "maximum": [5, 24, 32, 33, 62, 82, 83, 91, 95, 113, 133, 134, 141, 145, 146, 147, 158, 161, 162, 171, 172, 173, 187, 192, 201, 225, 235, 239, 246, 249, 255, 260, 265, 268], "maxpool": [117, 124], "mb": [1, 3, 17, 22, 25, 30, 36, 43, 44, 51, 66, 119], "mc": [38, 39, 41, 96, 123], "mcloss": [37, 38, 39], "mcmc": 62, "md": [24, 26, 38, 49], "md5": 69, "mea": 14, "mean": [16, 19, 24, 31, 32, 33, 34, 35, 46, 49, 58, 59, 62, 67, 80, 87, 88, 90, 92, 96, 97, 98, 99, 100, 113, 183, 239, 240, 241, 242, 244], "mean_batch": 260, "mean_has_converg": 240, "meaning": 33, "meaningless": [2, 113], "measplit": 41, "measur": [2, 4, 5, 6, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 24, 26, 27, 28, 29, 33, 34, 37, 38, 40, 42, 43, 45, 48, 49, 50, 55, 56, 58, 60, 61, 62, 64, 66, 67, 68, 73, 79, 80, 81, 85, 87, 88, 90, 92, 93, 95, 96, 98, 99, 100, 102, 104, 107, 108, 109, 110, 113, 118, 127, 135, 136, 140, 141, 142, 143, 145, 146, 147, 155, 170, 176, 177, 178, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 223, 228, 236, 237, 238, 240, 243, 244, 245, 261], "measurement_dir": [5, 6, 16, 26, 28, 38, 39, 40, 42, 45, 46, 47, 49, 50], "mechan": [80, 92, 93, 96], "med": 71, "median": [31, 55, 126], "medianfilt": [31, 55, 93, 96], "medic": 48, "medium": [11, 185, 225], "meet": [6, 35], "mem": [1, 3, 17, 22, 25, 30, 36, 43, 44, 51, 66], "memori": [8, 121, 132, 134, 144, 200, 208, 209, 261], "mention": 161, "meshgrid": 37, "messi": [7, 31, 32, 35], "meta": 71, "metadata": [71, 74], "metadata_cache_fil": 71, "meth": [49, 56], "method": [2, 4, 5, 7, 11, 14, 17, 18, 20, 21, 27, 28, 29, 30, 31, 32, 35, 41, 48, 49, 54, 55, 59, 61, 62, 65, 66, 67, 69, 73, 79, 80, 82, 83, 84, 85, 91, 92, 93, 95, 96, 117, 118, 120, 121, 133, 134, 141, 142, 143, 144, 146, 149, 152, 154, 156, 162, 163, 170, 171, 174, 175, 176, 178, 184, 186, 187, 191, 192, 196, 197, 200, 236, 239, 241, 243, 260, 261, 263, 265], "metric": [0, 2, 5, 7, 13, 16, 20, 21, 26, 27, 28, 29, 31, 32, 35, 45, 46, 47, 48, 49, 50, 67, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 103, 107, 141, 145, 243, 244, 245, 255, 266], "metric_nam": 141, "microscop": 70, "microscopi": [11, 70], "middl": [61, 174, 175, 181, 187, 200, 209], "might": [14, 85, 102, 104, 121, 144, 238, 270], "min": [0, 13, 15, 20, 21, 24, 34, 49, 55, 59, 121, 133, 134, 137, 138, 141, 144, 161, 164, 187, 192, 201, 216, 217, 246, 265, 268], "min_": [5, 7, 19, 118], "min_max": [265, 268, 270], "min_prob": [24, 55, 59, 141], "min_x": [46, 47, 141, 145], "mind": 34, "minim": [7, 20, 21, 24, 39, 46, 49, 55, 59, 118, 121, 133, 141, 144, 151, 166, 168, 169, 173, 237], "minimax": [2, 56], "minimis": [47, 106, 107, 109, 141, 163, 164, 165, 167, 168], "minimiza": 118, "minimize_variational_problem": 24, "minimum": [95, 161, 201, 235, 246], "minut": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50], "mio": [23, 54], "mirror": 153, "miss": [10, 21], "mix": [15, 42, 61, 229, 232], "mixtur": [23, 24, 121, 144, 171, 229], "mlp": 132, "mlp_ratio": 132, "mm": 67, "mmse": 158, "mn": [176, 198], "mnist": [39, 40, 41, 42, 46, 47, 53, 79], "mnist_train": [46, 47], "mode": [8, 13, 24, 26, 28, 29, 38, 49, 67, 69, 75, 117, 120, 124, 130, 131, 139, 198, 246, 248, 265, 268, 270], "model": [0, 5, 13, 17, 18, 19, 33, 36, 37, 38, 39, 40, 42, 45, 46, 47, 50, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 78, 80, 81, 82, 85, 88, 90, 92, 93, 95, 96, 98, 99, 100, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 154, 156, 158, 163, 164, 165, 166, 171, 176, 178, 183, 184, 185, 186, 187, 188, 190, 192, 197, 200, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 251, 252, 254, 256, 258, 260, 261, 263, 265, 269], "model_epl": 24, "model_infer": 67, "model_nam": [10, 38, 39, 40, 41, 42], "model_new": [10, 49], "model_nontrain": 10, "model_patchnr": 24, "model_path": 26, "model_spec": 49, "modifi": [31, 57, 92, 93, 96, 243], "modul": [0, 5, 8, 14, 19, 20, 21, 24, 26, 29, 31, 32, 38, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 60, 61, 63, 67, 80, 81, 82, 83, 85, 86, 87, 88, 90, 92, 93, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 143, 144, 145, 151, 152, 156, 171, 176, 180, 186, 187, 190, 191, 192, 196, 198, 208, 209, 232, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 250, 256, 258, 269], "modulelist": 19, "modulu": 191, "mohan": 136, "moi": [39, 88], "moiloss": 39, "moment": 54, "momentum": [113, 141, 145, 255], "monoton": 54, "mont": [31, 35, 54, 80, 93, 96, 98, 99, 100, 123, 239, 240, 241, 242], "montecarlo": [31, 239, 241, 242], "more": [0, 2, 4, 7, 10, 19, 24, 26, 31, 38, 47, 49, 55, 59, 61, 63, 67, 80, 92, 94, 96, 113, 117, 119, 120, 121, 123, 124, 131, 132, 138, 141, 142, 144, 148, 162, 172, 176, 183, 187, 188, 192, 200, 208, 209, 224, 225, 230, 233, 241, 242, 243, 248, 251, 252, 253, 254, 255, 256, 257, 258, 265, 268], "moreau": [27, 62, 143, 156, 158, 168], "moreov": [13, 14, 24, 34, 141], "most": [54, 171, 261], "mostli": [125, 188], "mother": [137, 138], "motion": [2, 5, 20, 21, 26, 28, 61, 92, 105, 106, 129, 230, 231], "motion_gener": 4, "motionblurgener": [2, 4, 61, 229, 232], "mous": 70, "move": 37, "mr": [71, 227], "mri": [18, 19, 41, 43, 61, 65, 66, 67, 71, 73, 79, 80, 81, 85, 87, 92, 96, 114, 120, 143, 149, 154, 156, 178, 182, 186, 187, 192, 221, 222, 226, 227, 228, 231, 234, 247, 250, 256, 258, 261], "mri_mask_128x128": 38, "mse": [2, 16, 45, 46, 47, 48, 49, 50, 80, 81, 87, 88, 90, 92, 96, 97], "mse_loss": 47, "mseloss": [2, 80, 81, 87, 88, 90, 92, 93, 96, 97, 103, 107, 244, 245], "mu": [24, 150, 171, 188], "mul": [186, 192], "mulbackward0": 177, "mult": [218, 219], "multi": [39, 48, 57, 71, 88], "multicoil": [41, 71], "multidimension": 217, "multipl": [4, 18, 26, 27, 32, 37, 41, 42, 43, 61, 62, 66, 67, 73, 79, 85, 86, 87, 88, 93, 96, 99, 100, 110, 123, 136, 143, 178, 185, 186, 187, 192, 229, 239, 245, 261], "multipli": [12, 56, 59, 61, 64, 163, 186, 187, 199, 207, 219, 220, 233, 250, 259], "multiplier_adjoint": 218, "multiscal": 94, "multispectr": [37, 246, 253], "must": [14, 15, 20, 21, 27, 29, 41, 60, 80, 83, 85, 96, 102, 104, 105, 106, 107, 108, 109, 113, 117, 177, 186, 221, 222, 225, 226, 234, 236, 238, 245, 259, 267, 270], "my_dataset_nam": [16, 38, 39, 40, 45, 46, 47, 49, 50], "mykernel": 240, "mysampl": 240, "n": [0, 2, 10, 19, 23, 24, 28, 33, 34, 35, 39, 44, 58, 61, 62, 82, 83, 91, 93, 95, 96, 98, 99, 119, 158, 176, 178, 182, 184, 186, 187, 190, 191, 192, 193, 195, 196, 198, 201, 226, 227, 237, 238, 242, 260], "n0": [24, 150, 188], "n_0": [150, 188], "n_1": 119, "n_2": 119, "n_channel": [5, 6, 10, 13, 16, 20, 21, 26, 27, 28, 29, 38, 45, 46, 47, 48, 49, 50], "n_coeff": 137, "n_compon": [24, 121, 144, 171], "n_data": 48, "n_detector_pixel": [200, 209], "n_dual": 48, "n_eigen_psf": [4, 233], "n_eigenpsf": 4, "n_images_max": [5, 16, 26, 28, 38, 39, 40, 42, 45, 46, 47, 49, 50], "n_it_max": [20, 133, 134, 159], "n_iter": [13, 170], "n_iter_train": 48, "n_layer": [2, 129], "n_level": [46, 137], "n_patch": 153, "n_primal": 48, "n_shard": 8, "n_step": 230, "n_tran": [246, 247, 248, 249, 250, 251, 252, 253, 254], "n_transf": [247, 249], "n_wavelet_subband": 46, "n_zernik": [4, 11, 225], "na": [11, 224, 225], "nabla": [31, 35, 47, 55, 59, 62, 95, 133, 134, 156, 157, 158, 159, 166, 167, 169, 170, 242], "nabla_": [34, 140, 149, 237], "nabla_adjoint": [133, 134, 159], "nabla_u": 143, "nabla_x": [143, 156, 157], "name": [34, 49, 70, 138, 161, 162, 243, 256, 257, 258], "namedtupl": [70, 71, 74], "nan": 136, "nativ": [9, 37], "natur": [6, 13, 23, 24, 37, 40, 64, 89, 119, 144], "nb": [117, 124], "nbia": 74, "nc": [115, 116, 117, 124], "ndf": [2, 115, 129], "nearest": [11, 117, 119, 124, 132, 238, 268], "necessari": [39, 46, 52, 67, 119, 237, 238, 245], "necessarili": [28, 151], "need": [4, 6, 10, 13, 19, 23, 31, 33, 49, 52, 57, 59, 61, 64, 67, 74, 86, 111, 114, 116, 125, 126, 127, 128, 130, 131, 137, 164, 171, 194, 208, 209, 222, 226, 234], "neg": [24, 35, 62, 144, 150, 152, 153, 155, 171, 194, 240, 241, 242], "negat": 259, "negative_log_likelihood": [24, 144], "negative_patch_log_likelihood": 153, "neighbor": [0, 40, 90, 195], "neighbor2neighbor": [18, 43, 66, 67, 73, 79, 85, 110, 136, 178, 180, 187, 192, 194, 261], "neighbour": [117, 124], "net": [2, 16, 33, 39, 40, 41, 42, 74, 95, 117, 136], "network": [3, 7, 17, 18, 24, 33, 34, 35, 55, 58, 61, 63, 66, 67, 73, 78, 79, 80, 82, 84, 85, 90, 92, 93, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 122, 124, 125, 129, 130, 131, 132, 135, 136, 152, 174, 176, 178, 186, 187, 190, 192, 200, 227, 230, 232, 237, 238, 243, 244, 245, 261, 265], "neural": [7, 16, 24, 34, 35, 48, 60, 82, 84, 96, 113, 114, 125, 130, 136, 152, 227], "neurip": 95, "neuro": 71, "neuron": [24, 152], "never": 37, "nevertheless": 34, "new": [4, 11, 12, 14, 31, 49, 67, 170, 171, 174, 175, 182, 189, 199, 229, 232, 240, 265], "new_demo_ei_ckp_150_v3": 38, "new_x": 240, "next": [2, 4, 8, 11, 31, 33, 37, 41, 42, 46, 47, 54, 67, 74, 145], "next_sigma": 33, "next_t": 34, "nf": [117, 120, 127, 128], "nfe": 34, "nftrainer": 24, "ngf": [2, 116], "ni": [11, 225], "nice": [9, 33], "nichol": 54, "nll": 153, "nn": [0, 2, 9, 15, 19, 31, 47, 54, 56, 57, 61, 67, 80, 81, 82, 85, 87, 88, 90, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 118, 125, 132, 135, 136, 139, 152, 174, 175, 176, 178, 180, 182, 186, 189, 190, 191, 194, 196, 198, 210, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 269], "no_grad": [0, 23, 28, 33, 81, 103, 141, 178, 180], "no_learning_infer": 67, "no_learning_inferec": 243, "no_learning_method": [41, 67, 243, 245], "nois": [0, 5, 6, 9, 13, 15, 19, 20, 21, 23, 26, 27, 28, 29, 33, 34, 40, 41, 42, 50, 54, 55, 58, 59, 62, 67, 70, 81, 88, 91, 93, 95, 96, 98, 99, 100, 112, 117, 118, 119, 120, 123, 130, 132, 136, 138, 142, 149, 154, 158, 176, 180, 182, 183, 184, 186, 187, 188, 190, 191, 192, 193, 194, 197, 200, 201, 202, 232, 235, 236, 237, 238, 240, 241, 242, 260], "noise2invers": [41, 96], "noise2scor": 95, "noise_color": 190, "noise_dirnam": 70, "noise_grai": 190, "noise_level": [70, 119, 192], "noise_level_img": [5, 13, 19, 20, 21, 26, 27, 28, 29, 45, 48, 50], "noise_model": [5, 7, 13, 14, 15, 20, 21, 23, 24, 26, 27, 28, 29, 31, 32, 33, 35, 41, 45, 48, 50, 53, 55, 61, 95, 180, 184, 187, 188, 192, 193, 194, 201, 202, 236, 238], "noise_std": 31, "noiseless": [98, 99, 100, 119], "noisemodel": [183, 184, 188, 193, 194, 201, 202], "noisi": [7, 19, 20, 21, 23, 24, 31, 32, 33, 34, 35, 37, 41, 54, 61, 70, 90, 93, 95, 98, 99, 100, 112, 117, 119, 120, 121, 130, 132, 133, 134, 136, 137, 138, 182, 183, 184, 186, 188, 190, 191, 192, 193, 194, 201, 202], "noisy_imag": 54, "noisysampleidentifi": 70, "noll": [11, 224], "nomenclatur": [4, 11], "non": [0, 7, 35, 60, 61, 80, 92, 171, 176, 185, 187, 190, 191, 192, 195, 200, 226, 227], "non_linear": [19, 137, 138], "none": [2, 4, 5, 6, 8, 11, 14, 24, 26, 27, 28, 37, 38, 39, 40, 41, 42, 45, 50, 57, 61, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 92, 95, 96, 102, 104, 105, 106, 107, 108, 109, 110, 111, 117, 119, 120, 121, 124, 126, 130, 131, 132, 133, 134, 135, 136, 141, 143, 144, 145, 146, 147, 151, 152, 156, 161, 162, 171, 174, 175, 176, 178, 181, 182, 183, 184, 186, 187, 188, 189, 190, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 208, 209, 216, 217, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 255, 256, 257, 258, 262, 263, 265, 266, 267, 268, 269, 270], "nonetyp": [130, 181, 190], "nonexpans": [35, 54, 82], "nonlinear": 143, "noplot": 52, "norm": [0, 5, 12, 13, 14, 19, 20, 29, 31, 34, 49, 59, 67, 82, 83, 91, 101, 129, 133, 134, 136, 137, 138, 141, 147, 149, 159, 161, 176, 187, 200, 245, 260], "norm_a2": 59, "norm_grad": 34, "norm_lay": 132, "normal": [0, 13, 24, 33, 34, 46, 47, 91, 101, 120, 132, 133, 134, 149, 150, 152, 155, 158, 187, 188, 194, 195, 200, 260], "normalis": 149, "normalizing_flow": [24, 152], "normliz": 200, "note": [0, 2, 4, 5, 31, 33, 34, 37, 41, 45, 46, 47, 50, 53, 56, 57, 61, 67, 80, 143, 146, 164, 168, 191, 200, 209, 210, 211, 232, 243, 245, 270], "notebook": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 270], "notic": [4, 11, 33, 146], "now": [0, 2, 4, 11, 16, 19, 23, 24, 32, 33, 34, 37, 45, 46, 47, 49, 61, 255], "np": [0, 11, 19, 31, 32, 33, 34, 176, 236], "npy": [0, 11, 19, 20, 21, 26, 28, 38], "nsgan": 103, "nufft": [0, 195], "nufftobj": 0, "null": [4, 11], "num_angl": 24, "num_block": 130, "num_channel": [224, 225, 229, 230, 232], "num_head": 132, "num_it": 13, "num_lay": 152, "num_refinement_block": 130, "num_step": 34, "num_train_timestep": [33, 34, 119, 238], "num_work": [5, 6, 8, 16, 26, 27, 28, 29, 38, 39, 40, 42, 45, 46, 47, 48, 49, 50, 79], "number": [0, 4, 5, 7, 8, 10, 11, 13, 14, 16, 19, 20, 21, 24, 26, 28, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 57, 59, 65, 67, 70, 71, 74, 79, 93, 95, 96, 99, 100, 111, 114, 115, 116, 117, 118, 120, 121, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 140, 141, 143, 144, 145, 146, 147, 150, 152, 153, 156, 159, 162, 171, 172, 173, 176, 183, 184, 186, 187, 188, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 209, 216, 217, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 244, 246, 247, 248, 249, 250, 255, 256, 258, 265, 268, 271, 272], "number_of_oper": 39, "numer": [11, 19, 31, 82, 83, 172, 187, 200, 225, 240, 241, 242], "numpi": [0, 9, 11, 19, 31, 32, 33, 34, 210, 211, 213, 214, 216, 217, 218, 219, 236, 260], "numpoint": 0, "nutshel": 46, "nwimag": 0, "nyquist": 224, "nyu": 71, "nz": [2, 113, 116], "o": [48, 176, 185, 198], "object": [5, 7, 12, 15, 19, 20, 21, 24, 26, 32, 35, 38, 46, 49, 59, 61, 67, 71, 76, 103, 151, 167, 171, 187, 191, 192, 225, 255, 259, 265, 267, 268, 270], "observ": [23, 24, 58, 88, 96, 143, 144, 151, 163, 165, 166, 187, 192], "obtain": [4, 7, 11, 12, 15, 31, 35, 60, 62, 63, 70, 93, 96, 123, 130, 191, 206, 236, 237, 238, 240, 241, 248], "odd": [9, 92, 210, 231], "odl": 48, "odlgroup": 48, "odot": [42, 99, 100, 185, 199, 220], "off": [55, 61, 226], "offer": [13, 14, 55], "offici": 132, "offlin": [2, 67], "offset": [185, 226], "often": [58, 59, 61, 67], "oil": 11, "omega_": 19, "onc": [14, 16, 34, 49, 121, 141, 144], "one": [2, 8, 11, 12, 19, 34, 39, 52, 55, 57, 59, 61, 65, 70, 71, 73, 74, 80, 82, 83, 86, 93, 95, 96, 102, 104, 111, 114, 116, 125, 126, 127, 128, 131, 137, 139, 171, 174, 175, 176, 179, 181, 185, 187, 190, 200, 203, 208, 209, 221, 223, 227, 228, 231, 234, 240, 241, 242], "ones": [4, 9, 10, 14, 15, 29, 31, 33, 34, 46, 49, 54, 56, 59, 61, 64, 93, 95, 96, 149, 174, 175, 177, 179, 182, 187, 189, 200, 223, 228, 236, 238, 264], "ones_lik": [9, 21, 149], "onesid": 86, "onli": [2, 4, 7, 8, 11, 14, 16, 20, 21, 24, 27, 31, 33, 34, 37, 38, 39, 40, 41, 42, 45, 48, 49, 59, 61, 67, 72, 79, 80, 92, 93, 95, 96, 117, 118, 119, 120, 124, 131, 132, 135, 137, 138, 143, 156, 161, 174, 186, 187, 200, 206, 209, 211, 214, 221, 223, 228, 231, 237, 240, 243, 255, 265, 268], "onlin": [37, 67, 117, 119, 120, 124, 131, 132, 243], "online_measur": [24, 37, 48, 67, 243, 245], "onto": 67, "oot": 125, "open": [24, 26, 38, 49, 52, 65, 74, 217], "oper": [6, 11, 13, 17, 18, 23, 33, 34, 40, 41, 42, 43, 53, 54, 55, 56, 58, 59, 62, 65, 66, 67, 73, 79, 80, 81, 85, 87, 88, 90, 93, 95, 96, 98, 99, 100, 101, 102, 104, 110, 121, 130, 133, 134, 135, 136, 140, 141, 143, 144, 145, 146, 147, 148, 149, 154, 155, 156, 159, 160, 161, 170, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 206, 208, 209, 210, 211, 212, 213, 214, 215, 218, 219, 220, 222, 224, 226, 227, 229, 230, 232, 233, 234, 236, 237, 238, 240, 242, 243, 244, 245, 250, 259, 261, 263, 265], "operatornam": [0, 2, 19, 20, 21, 27, 33, 47, 49, 59, 63, 82, 123, 141, 143, 145, 146, 147, 148, 149, 151, 154, 156, 157, 158, 163, 164, 165, 166, 168, 169, 170, 238, 255, 256], "opnorm": 0, "opt": [26, 37, 245], "optic": [224, 225], "optician": 11, "optim": [0, 2, 7, 10, 13, 16, 22, 23, 24, 26, 28, 29, 30, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 55, 61, 62, 63, 66, 67, 113, 118, 120, 121, 133, 134, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 178, 184, 187, 191, 192, 198, 200, 237, 238, 240, 241, 242, 244, 245, 255, 256, 257, 258, 260, 261, 263, 265, 266, 269], "optim_build": [0, 5, 13, 20, 21, 26, 27, 28, 29, 55, 59, 141], "optim_iter": [27, 46, 47, 48, 49, 141, 145, 162, 163, 164, 165, 166, 167, 168, 169, 170], "optim_step": 24, "optimalgo": 141, "optimis": [2, 113], "optimiter": [27, 141, 162, 163, 164, 165, 166, 167, 168, 169, 170, 256, 257, 258], "optimize_z": 113, "optin": 67, "option": [4, 14, 34, 41, 59, 61, 67, 68, 69, 70, 71, 72, 74, 75, 77, 78, 79, 81, 95, 98, 136, 141, 145, 155, 174, 176, 181, 184, 187, 188, 190, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 210, 213, 220, 221, 222, 223, 228, 231, 232, 233, 243, 245, 255, 262, 263], "order": [4, 8, 31, 32, 33, 34, 81, 101, 133, 187, 198, 224, 225, 236], "org": [4, 7, 11, 26, 31, 32, 35, 81, 82, 83, 86, 88, 93, 94, 98, 99, 100, 103, 110, 115, 116, 120, 123, 127, 128, 172, 176, 179, 181, 183, 185, 197, 200, 209, 224, 230, 236, 237, 238, 241, 242, 246, 253, 265, 268, 270], "orgin": 187, "orig": 37, "origin": [2, 13, 19, 20, 21, 24, 34, 46, 48, 54, 80, 92, 96, 98, 102, 104, 106, 107, 115, 116, 118, 120, 122, 129, 206, 236, 238, 248], "original_data_dir": [5, 6, 10, 16, 19, 20, 21, 26, 28, 38, 39, 40, 42, 45, 46, 47, 48, 49, 50], "ortho": 0, "orthogon": [137, 176, 241, 268], "orthonorm": [137, 161, 178, 195], "osa": 4, "ossci": [41, 42, 46], "other": [0, 4, 6, 8, 12, 33, 48, 53, 57, 59, 67, 70, 80, 81, 87, 88, 90, 96, 97, 112, 130, 137, 179, 186, 187, 192, 232, 243, 244, 245, 250, 259], "otherwis": [5, 6, 16, 26, 27, 28, 29, 38, 39, 40, 42, 45, 46, 47, 49, 50, 67, 81, 82, 83, 86, 88, 98, 119, 123, 141, 145, 174, 176, 181, 182, 186, 187, 189, 190, 198, 199, 200, 204, 205, 207, 210, 211, 212, 213, 214, 215, 220, 245], "otimes_": 11, "our": [0, 2, 20, 21, 27, 31, 34, 41, 46, 47, 49, 52, 65, 80, 92, 130, 164], "ourselv": 15, "out": [8, 11, 24, 34, 39, 53, 65, 83, 176, 217, 240, 241, 242], "out_channel": [2, 13, 16, 27, 29, 37, 38, 39, 40, 41, 42, 45, 117, 119, 120, 124, 127, 128, 130, 136, 258], "out_siz": 208, "outer": 241, "output": [19, 20, 21, 27, 28, 29, 33, 34, 41, 46, 47, 55, 61, 67, 79, 80, 83, 96, 103, 111, 113, 114, 116, 117, 119, 120, 121, 124, 127, 128, 130, 135, 136, 137, 141, 143, 144, 145, 146, 152, 171, 174, 175, 178, 181, 182, 190, 194, 195, 197, 199, 200, 208, 209, 210, 211, 212, 213, 214, 215, 218, 219, 220, 221, 243, 248, 255, 260], "output_s": [2, 116], "outsid": 11, "over": [0, 6, 34, 41, 55, 67, 93, 96, 123, 126, 133, 134, 145, 161, 200, 260], "overcomplet": [138, 176, 187, 200], "overfit": [7, 118], "overlaid": 267, "overlap": [80, 92, 121, 144, 153], "overlin": [33, 34, 191, 237, 238], "overload": 8, "overrid": [56, 67, 92, 102, 104, 113, 126, 132, 171, 245], "overridden": [86, 111, 113, 114, 116, 125, 126, 127, 128, 131, 208, 209], "overriden": 103, "oversampl": [0, 13, 195], "oversampling_ratio": 13, "overwrit": [156, 183, 184, 188, 193, 194, 202, 243], "overwritten": [59, 156, 176, 187, 192, 200], "own": [2, 14, 17, 18, 27, 48, 66, 70, 73, 79, 96, 117, 119, 120, 124, 131, 132, 178, 180, 184, 187, 192, 223, 261, 265], "owt": 26, "ozan": 48, "p": [0, 5, 9, 19, 21, 26, 28, 31, 34, 35, 58, 62, 71, 86, 95, 99, 100, 121, 141, 144, 158, 161, 188, 193, 194, 197, 220, 237, 242], "p_": [2, 24, 31, 35, 62, 105, 106, 107, 108, 109, 158], "p_i": [24, 121, 144, 153], "p_ix": [121, 144], "p_p": 19, "p_x": [2, 24, 105, 106], "p_y": [107, 108, 109], "p_z": 24, "packag": [26, 37, 56, 59, 61, 62, 63, 71, 112, 195, 245], "pad": [0, 2, 4, 9, 11, 61, 113, 126, 136, 137, 153, 174, 175, 181, 187, 190, 195, 199, 210, 211, 212, 213, 214, 215, 220, 233, 246, 247, 248, 249, 251, 252, 253, 254], "pad_if_need": 71, "pad_input": 137, "padding_mod": 248, "page": [54, 71], "pair": [2, 6, 16, 39, 49, 53, 56, 67, 73, 79, 93, 96, 232, 243, 244], "pajot": [2, 107], "pan": [12, 37, 246, 253], "pansharpen": [12, 15, 37, 246, 253], "pantiltrot": 37, "papadaki": 28, "paper": [2, 5, 7, 9, 24, 26, 32, 35, 37, 48, 95, 106, 107, 117, 118, 120, 125, 130, 163, 188, 220, 238, 248], "paper_fil": 95, "parallel": [5, 6, 8, 16, 26, 27, 28, 29, 38, 39, 40, 42, 45, 46, 47, 49, 50, 57, 112, 200, 208, 209], "parallel_comput": [200, 208, 209], "param": [27, 28, 31, 48, 61, 67, 130, 176, 178, 182, 186, 187, 189, 190, 200, 210, 226, 227, 233, 234, 240, 270], "param_nam": [229, 232], "param_valu": [229, 232], "paramet": [0, 2, 5, 7, 10, 13, 14, 16, 19, 20, 21, 23, 26, 27, 28, 31, 33, 34, 35, 37, 41, 49, 54, 63, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 265, 266, 267, 268, 269, 270], "parameter": 183, "parameteris": 246, "parametris": [251, 252, 254], "params_algo": [0, 5, 10, 13, 20, 21, 26, 27, 28, 29, 38, 45, 46, 47, 48, 49, 50, 55, 59, 63, 141, 145, 162, 256, 257, 258, 269], "params_algo_new": [10, 49], "params_dict": [229, 232], "params_pc": [4, 199], "parent": [178, 187, 192], "part": [15, 38, 63, 68, 117, 139, 182, 189], "partial": [37, 63, 72, 143, 147, 187, 192, 255], "particular": [0, 4, 11, 12, 63, 67, 71, 134, 164, 195, 200], "pass": [2, 4, 37, 41, 45, 52, 57, 61, 63, 67, 80, 85, 86, 92, 93, 96, 102, 104, 105, 106, 107, 108, 109, 111, 113, 114, 115, 116, 122, 125, 126, 127, 128, 129, 131, 162, 166, 174, 181, 186, 208, 209, 216, 221, 223, 228, 231, 244, 245, 255, 256, 257, 258], "pastur": 176, "patch": [25, 53, 54, 66, 67, 76, 84, 121, 129, 132, 143, 144, 150, 152, 153, 156, 178, 180, 184, 186, 187, 188, 192, 200, 202, 260, 263, 265], "patch_dimens": 144, "patch_norm": 132, "patch_siz": [23, 24, 76, 121, 132, 144, 152, 153], "patchdataset": 24, "patchgan": [2, 129], "patchgandiscrimin": [2, 245], "patchnr_batch_s": 24, "patchnr_dataload": 24, "patchnr_epoch": 24, "patchnr_learning_r": 24, "patchnr_lodopab_smal": [24, 152], "patchnr_lodopab_small2": 24, "patchnr_prior": 24, "patchnr_subnets": 24, "patchprior": 24, "path": [13, 41, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 117, 119, 120, 121, 124, 131, 132, 144, 152, 245, 262, 265, 266, 268, 269], "pathlib": [5, 6, 10, 13, 16, 19, 20, 21, 26, 27, 28, 29, 38, 39, 40, 42, 45, 46, 47, 48, 49, 50, 71, 245], "patient": 74, "patient_id": 74, "pattern": [4, 11, 15, 26, 52, 142, 179, 198], "pc_gener": [4, 199, 233], "pd": [151, 164], "pdf": [32, 81, 95, 110, 227, 230, 234], "pditer": 48, "pdnet_dualblock": 48, "pdnet_primalblock": 48, "pdnetdatafid": 48, "pdnetiter": 48, "pdnetprior": 48, "peak": [0, 9, 13, 91, 197, 260], "penal": [5, 59, 141], "per": [7, 9, 32, 35, 38, 39, 46, 54, 62, 67, 74, 80, 95, 117, 119, 120, 131, 137, 144, 179, 187, 197, 198, 246, 247, 248, 249, 250, 270], "percentag": [240, 241, 242, 246], "perceptu": [2, 84], "pereyra": 241, "perform": [0, 5, 7, 16, 19, 20, 21, 26, 29, 33, 34, 41, 48, 49, 54, 56, 59, 63, 67, 68, 77, 78, 80, 86, 92, 93, 96, 98, 111, 114, 116, 118, 119, 125, 126, 127, 128, 130, 131, 141, 145, 151, 156, 162, 171, 174, 175, 195, 199, 200, 208, 209, 210, 211, 212, 213, 214, 215, 220, 238, 245, 248, 255, 256, 257, 258], "period": [240, 241, 242, 248], "permut": 0, "persist": 4, "persist_prev": 221, "perspect": [37, 246, 253], "perturb": 93, "pf": 224, "pgd": [10, 13, 20, 21, 28, 29, 45, 46, 47, 49, 55, 59, 63, 141, 145, 151, 162, 169, 255, 256, 257, 258], "pgditer": [28, 29, 46, 47, 141, 145], "pgl": 37, "phantom": 13, "phase": [4, 17, 18, 54, 66, 80, 92, 117, 139, 140, 141, 143, 149, 154, 156, 162, 170, 184, 191, 192, 196, 224, 225, 231, 260, 261, 263, 265], "phase2phas": [80, 92, 231], "phase2phaseloss": [80, 231], "phase2phasesplittingmaskgener": 221, "phase_retriev": [13, 191], "phaseless": 13, "phaseretriev": [140, 170, 196], "phenomenon": 7, "phi": [39, 110], "phi_": [16, 39], "photon": [17, 18, 66, 70, 150, 188, 192, 197, 261], "phyic": 27, "physic": [0, 2, 4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 53, 55, 56, 58, 59, 62, 63, 67, 79, 80, 81, 85, 87, 88, 90, 92, 93, 95, 96, 98, 99, 100, 102, 104, 107, 110, 113, 118, 121, 135, 140, 141, 143, 144, 145, 146, 147, 149, 151, 163, 164, 165, 166, 167, 170, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 255, 258], "physicist": 11, "physics1": [12, 187], "physics2": [12, 14, 80, 92, 187], "physics_concat": 12, "physics_gener": [2, 67, 79, 243, 245], "physics_list": 88, "physics_stack": 12, "physicsgener": [61, 67, 79, 96, 222, 223, 229, 233, 235, 243, 245], "pi": [0, 13, 29, 200, 206], "pi_": 242, "pick": [8, 65], "pickl": [24, 26, 38, 49], "pil": [8, 68, 69, 70, 72, 75, 77, 78, 246], "pinhol": [11, 56, 251, 252, 254], "pinv": [41, 110], "pip": [18, 65], "pipelin": 71, "pixel": [0, 2, 9, 10, 13, 16, 21, 27, 32, 34, 35, 37, 41, 42, 46, 47, 49, 61, 69, 77, 91, 92, 111, 117, 124, 130, 174, 175, 179, 181, 186, 187, 192, 197, 198, 200, 203, 209, 221, 223, 225, 228, 231, 260], "pixel_s": [11, 224, 225], "pixel_spac": [200, 209], "pixelshuffl": 132, "pixelshuffledirect": 132, "pixelsize_xi": 11, "pixelsize_z": 11, "pixelsuffl": [117, 124], "pixelwis": [34, 96, 186, 223, 228], "pkl": 71, "placeholderdataset": 245, "plai": [13, 28, 30, 31, 35, 50, 54, 55, 63, 65, 66, 134, 142, 154, 238, 241, 242, 243, 266], "plain": [236, 238], "plane": [4, 11, 200, 225], "plausibl": 58, "pleas": [0, 24, 26, 38, 49, 52, 65, 71, 244], "plot": [0, 2, 4, 5, 6, 8, 11, 12, 13, 14, 15, 16, 19, 23, 28, 33, 34, 37, 38, 39, 40, 42, 45, 48, 49, 52, 55, 67, 141, 199, 243, 245, 255, 266, 267, 268, 269, 270], "plot_convergence_metr": [0, 5, 20, 21, 26, 28, 29, 48, 243, 245], "plot_curv": [0, 20, 21, 27, 29], "plot_imag": [5, 26, 28, 38, 39, 40, 41, 42, 48, 49, 67, 243, 245], "plot_inset": 0, "plot_measur": [67, 243, 245], "plot_ortho3d": 11, "plot_paramet": [46, 47, 50], "plt": [9, 11, 13, 19, 33], "plug": [13, 28, 30, 31, 34, 35, 50, 54, 55, 63, 65, 66, 134, 142, 154, 238, 241, 242, 243, 266], "png": [4, 8, 13, 15, 23, 29, 33, 34, 55, 69, 70, 72, 75, 77, 78, 265], "pnp": [10, 18, 30, 36, 38, 45, 49, 54, 59, 63, 65, 66, 67, 73, 79, 82, 84, 85, 91, 117, 120, 141, 142, 143, 149, 151, 156, 158, 162, 175, 178, 184, 186, 187, 192, 198, 200, 238, 240, 242, 243, 244, 258, 260, 261, 263, 265, 266], "pock": [10, 18, 48, 51, 66, 67, 73, 79, 85, 97, 133, 134, 137, 143, 146, 154, 156, 162, 164, 178, 186, 187, 192, 243, 256, 257, 258, 261], "point": [0, 35, 45, 52, 57, 59, 63, 82, 141, 143, 145, 146, 151, 171, 187, 230, 255], "poisson": [9, 15, 24, 40, 42, 62, 70, 95, 99, 100, 150, 155, 188, 193, 194, 197], "poissongaussiannois": 15, "poissonlikelihood": 33, "poissonnois": [15, 40, 42, 95, 197], "polynomi": [4, 11, 224], "pool": [117, 124, 126], "poor": 13, "popular": [56, 61], "pos_weight": 125, "posit": [33, 42, 55, 59, 99, 100, 125, 132, 155, 194, 244], "possibl": [0, 4, 11, 12, 13, 24, 26, 38, 45, 49, 52, 55, 57, 59, 61, 91, 119, 120, 141, 174, 190, 255, 260], "possibli": [24, 31, 56, 88, 99, 185, 240], "post": [16, 32, 35, 80, 92], "posterior": [31, 32, 34, 35, 62, 236, 237, 238, 240, 241, 242], "posteriori": [62, 158], "postiv": 125, "potenti": [7, 28, 47, 67], "pow": 31, "power": [12, 14, 29, 33, 82, 83, 119, 187, 198], "pp": [26, 133, 134, 142], "pr": 52, "practic": [0, 37, 46, 131, 161, 187], "pre": [0, 13, 34, 55, 63, 84, 130], "precis": [0, 19, 24, 59, 123, 141, 148, 187, 224, 225], "preconula": 31, "predefin": [59, 65, 187, 192], "prefer": 52, "prepar": [8, 52], "preprocess": 170, "present": [38, 39, 40], "preserv": 0, "pretrain": [2, 13, 23, 24, 26, 27, 28, 29, 32, 33, 35, 37, 38, 39, 40, 41, 42, 45, 50, 57, 62, 65, 67, 95, 106, 107, 109, 110, 117, 119, 120, 121, 124, 130, 131, 132, 142, 144, 152, 236, 238], "pretrained_noise_level": 132, "prevent": 11, "previou": [31, 33, 57, 141, 145, 163, 164, 165, 221, 240], "previous": 19, "primal": [18, 30, 49, 51, 55, 59, 66, 67, 85, 97, 120, 127, 128, 133, 134, 141, 143, 145, 149, 151, 154, 156, 162, 164, 178, 184, 187, 192, 198, 200, 256, 258, 260, 261, 263, 265, 266], "primari": [133, 134], "princip": 170, "print": [0, 4, 7, 8, 10, 11, 12, 13, 14, 16, 20, 21, 23, 24, 27, 29, 31, 32, 35, 38, 39, 40, 42, 49, 59, 61, 67, 68, 69, 70, 71, 72, 74, 75, 77, 78, 80, 82, 83, 92, 93, 95, 96, 118, 133, 134, 141, 187, 224, 225, 229, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 245], "prior": [10, 13, 17, 19, 22, 23, 25, 26, 27, 29, 38, 45, 46, 49, 50, 51, 54, 58, 62, 63, 65, 66, 67, 73, 76, 79, 80, 85, 97, 114, 117, 118, 121, 125, 134, 141, 142, 143, 144, 145, 148, 149, 150, 151, 152, 153, 154, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 175, 176, 178, 180, 184, 186, 187, 188, 192, 200, 202, 206, 221, 240, 241, 242, 243, 256, 257, 258, 260, 261, 263, 265, 266, 269], "prior_new": [10, 49], "priori": 24, "prob": [4, 229], "probability_mask": [16, 49], "probabl": [16, 24, 42, 49, 99, 100, 176, 186, 198, 227, 229, 234], "probail": 24, "problem": [3, 6, 7, 13, 14, 16, 18, 23, 24, 32, 38, 39, 45, 46, 49, 52, 54, 55, 56, 59, 60, 61, 63, 64, 65, 66, 67, 73, 78, 79, 81, 85, 95, 97, 102, 104, 105, 106, 107, 108, 109, 113, 115, 116, 118, 121, 122, 125, 129, 133, 134, 136, 137, 138, 141, 142, 144, 145, 151, 174, 176, 180, 181, 185, 187, 190, 192, 200, 230, 232, 236, 238, 245, 261, 265, 270], "proce": 145, "procedur": [31, 49, 136], "proceed": [26, 95, 142], "process": [16, 54, 56, 67, 79, 112, 134, 135, 139, 146, 161, 176, 187, 192, 196, 230, 238], "prod": [13, 176], "prod_": 34, "produc": [62, 187, 192, 250], "product": [31, 56, 61, 83, 178, 187, 191, 192, 199, 220, 250], "product_convolution2d": 4, "productconvolutionblurgener": [4, 199], "progress": [16, 34, 38, 39, 40, 42, 45, 46, 47, 48, 49, 50, 67, 79, 113, 118, 171, 236, 237, 238, 239, 240, 241, 242, 243, 245], "progress_bar": [24, 67], "proj": 146, "project": [0, 37, 46, 47, 52, 54, 56, 127, 146, 147, 195, 200, 208, 209, 240, 241, 242, 246, 251, 252, 253, 254], "promot": 58, "propag": [11, 40, 81, 90], "properli": [0, 8, 95], "properti": 61, "proport": [98, 99, 100, 137, 226], "propos": [0, 19, 23, 24, 34, 37, 47, 82, 83, 95, 113, 115, 116, 122, 123, 129, 130, 144, 166], "propto": [35, 62, 158], "prototyp": 111, "provid": [0, 4, 7, 11, 13, 14, 15, 20, 21, 26, 27, 28, 29, 31, 55, 56, 59, 60, 61, 62, 63, 64, 67, 71, 74, 79, 95, 102, 103, 104, 105, 106, 107, 108, 109, 137, 152, 161, 174, 175, 178, 182, 184, 188, 189, 190, 193, 194, 200, 201, 202, 203, 217, 232, 243, 244, 245, 270], "prox": [0, 19, 20, 21, 27, 33, 46, 47, 48, 49, 59, 143, 146, 147, 148, 149, 154, 156, 159, 160, 161, 163, 164, 165, 166, 168, 169, 170, 175, 182, 187, 189, 238], "prox_conjug": [143, 156], "prox_d": [143, 146, 147, 149, 150, 155], "prox_d_conjug": [27, 143], "prox_l0": 137, "prox_l1": 137, "prox_l2": [14, 61, 67, 98, 178, 181, 187, 243], "prox_tau_fx": 134, "proxim": [5, 14, 19, 20, 21, 27, 28, 29, 33, 48, 55, 59, 63, 125, 133, 134, 143, 145, 146, 147, 148, 149, 154, 155, 156, 159, 160, 161, 162, 169, 178, 181, 186, 187, 241, 256, 257, 258], "pseudo": [0, 4, 12, 14, 41, 61, 67, 98, 110, 175, 182, 186, 189, 191, 200], "pseudoinvers": [176, 178, 182, 187, 192, 200], "pseudorandom": [176, 184, 186, 188, 193, 194, 196, 197, 198, 201, 202, 232], "psf": [0, 4, 17, 18, 66, 174, 187, 192, 224, 225, 230, 232, 233, 261, 265, 268], "psf_coll": 11, "psf_confoc": 11, "psf_gener": [4, 199, 233], "psf_grid": [4, 199], "psf_log": 0, "psf_size": [4, 11, 61, 199, 224, 225, 229, 230, 232, 233], "psf_size_xi": 11, "psf_size_z": 11, "psfgener": [4, 11, 224, 225, 230, 233], "psi": [19, 21, 137, 138, 161], "psi_": 19, "psi_1": 138, "psi_2": 138, "psi_i": 0, "psi_l": 138, "psnr": [0, 2, 5, 7, 13, 16, 19, 20, 21, 23, 24, 26, 27, 28, 29, 31, 32, 35, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 113, 141, 243, 245, 255, 260], "psnr_epll": 24, "psnr_fbp": 24, "psnr_ob": 23, "psnr_patchnr": 24, "psnr_recon": 23, "psnr_std": [2, 5, 16, 26, 38, 39, 40, 41, 42, 45, 48, 49, 50], "pt": [23, 24, 34, 38, 121, 144, 152], "pth": [2, 10, 13, 26, 27, 35, 37, 38, 39, 40, 41, 42, 49, 67, 130, 176, 186, 191, 196, 198], "ptwt": 10, "public": 52, "pula": 31, "pula_mean": 31, "pula_var": 31, "pulaiter": 31, "pull": 52, "pupil": [4, 11, 224, 225], "pupil_s": [224, 225], "pure": [37, 119, 238, 246], "purpos": 10, "push": 24, "put": [68, 69, 70, 72, 75, 77, 78, 221], "py": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 66, 122, 228, 245], "pyiqa": 26, "pyplot": [9, 11, 13, 19, 33], "pytest": 52, "python": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 52, 112, 245], "python3": [26, 37, 245], "pytorch": [4, 5, 6, 7, 10, 11, 15, 16, 19, 20, 21, 24, 26, 27, 28, 29, 34, 35, 38, 39, 40, 42, 45, 46, 47, 48, 49, 50, 53, 57, 61, 115, 116, 117, 119, 120, 124, 126, 131, 132, 176, 196, 198, 210, 232], "pywavelet": 137, "pywt": 161, "q": [2, 34, 105, 106, 107, 108, 109, 145], "qk": 132, "qk_scale": 132, "qkv_bia": 132, "qquad": [59, 141, 145, 151], "quad": [2, 19, 24, 55, 59, 93, 98, 100, 107, 141, 192], "quadrat": [23, 24, 26, 38, 45, 121, 142, 144, 162, 168, 238, 256, 257, 258], "qualiti": [2, 16, 48, 49, 89], "quantif": [18, 36, 65, 66, 82, 120, 143, 149, 156, 158, 178, 184, 186, 187, 192, 240, 242, 260, 261, 263, 265], "quantifi": 35, "quantiti": [11, 102, 104, 187], "quantiz": [187, 192], "queri": 132, "question": [52, 65], "quick": 8, "quickli": 64, "quickstart": 67, "quit": 0, "r": [0, 8, 9, 11, 14, 27, 28, 31, 33, 34, 40, 42, 48, 49, 55, 59, 82, 83, 90, 93, 95, 96, 98, 99, 100, 117, 124, 126, 133, 141, 146, 155, 176, 178, 186, 195, 197, 243], "r2": 133, "r2d2": 0, "r2r": 93, "r2rmodel": 93, "r_": [9, 31, 39, 197], "rachford": [50, 162, 165, 256, 257, 258], "radford": [115, 116], "radial": [80, 92], "radio": [1, 18, 66, 141, 143, 149, 156, 161, 162, 187, 192, 195, 260, 265, 266, 267], "radiointerferometri": 0, "radiu": [10, 49, 146, 147, 200, 209], "radon": [15, 24, 61, 200, 208], "rai": [200, 209], "rais": 156, "ramp": [200, 208], "rand": [11, 15, 56, 61, 80, 92, 135, 184, 188, 193, 194, 201, 202, 225, 265, 268, 270], "rand_lik": 182, "randn": [54, 61, 63, 176, 178, 180, 182, 186, 187, 189, 190, 196, 198, 200, 203, 246, 251, 252, 253, 254, 258], "randn_lik": [0, 13, 31, 33, 34, 61, 83], "random": [0, 2, 4, 5, 6, 7, 11, 12, 15, 16, 17, 18, 19, 20, 21, 26, 27, 28, 29, 34, 35, 37, 38, 39, 40, 41, 42, 45, 46, 47, 49, 50, 54, 55, 56, 61, 64, 66, 67, 80, 81, 88, 92, 96, 99, 100, 117, 118, 119, 120, 123, 124, 131, 132, 141, 143, 149, 152, 154, 156, 162, 176, 178, 180, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 200, 201, 202, 221, 222, 223, 224, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 240, 246, 247, 248, 249, 250, 251, 252, 253, 254, 260, 261, 263, 265, 271], "random_lat": 113, "random_phantom": 48, "random_split": [2, 37], "randomcrop": [16, 45, 49, 50, 68, 69, 70, 71, 72, 75, 77, 78], "randomhorizontalflip": 71, "randomli": [4, 8, 11, 16, 34, 41, 49, 67, 79, 80, 96, 123, 153, 221, 222, 226, 227, 228, 229, 232, 234, 243, 247, 249], "randommaskgener": [15, 61, 182, 189, 227], "randomphantomdataset": 48, "randomphaseretriev": 13, "randomverticalflip": 71, "rang": [0, 4, 10, 13, 14, 17, 18, 19, 21, 24, 33, 34, 37, 38, 39, 46, 48, 49, 57, 59, 61, 66, 67, 77, 83, 119, 130, 132, 145, 192, 197, 238, 239, 247, 261], "rapidli": 26, "rare": [80, 221], "rate": [2, 7, 67, 113, 118, 131, 132, 226], "rather": [10, 15, 33, 62, 64, 158, 195], "ratio": [0, 9, 13, 15, 41, 91, 96, 132, 223, 225, 228, 239, 260], "raw": [8, 41, 42, 46, 68, 69, 70, 71, 72, 74, 75, 77, 78], "raw_hf_train_dataset": 8, "rcparam": 33, "re": [12, 15, 107, 108, 109, 118], "re_init": 118, "reach": [5, 27, 28, 141, 145, 226], "read": [0, 8, 55, 71], "reader": [0, 57], "readi": [0, 2, 4, 11, 19, 34, 53], "readili": [0, 19, 33, 34], "real": [0, 13, 15, 38, 54, 70, 75, 102, 103, 104, 129, 139, 182, 189, 195, 212, 215], "real_fft": [211, 212, 214, 215], "real_imag": 139, "real_label": 103, "real_project": [0, 195], "realis": 41, "realist": 54, "realiz": [0, 20, 21, 33, 67, 93, 96, 224, 225], "reason": [0, 19], "rec": [12, 14, 46, 47], "rec601": 177, "recal": [49, 63, 123, 256], "receiv": [39, 199], "recip": [86, 111, 114, 116, 125, 126, 127, 128, 131, 208, 209], "recognit": [26, 142], "recommend": [7, 12, 14, 15, 16, 24, 26, 33, 37, 38, 40, 41, 42, 49, 57, 59, 65, 118, 130, 134, 161, 176, 187, 198], "recomposit": 137, "recon": [0, 20, 21, 27, 29, 34, 46, 47], "recon_epl": 24, "recon_patchnr": 24, "reconstruct": [0, 2, 17, 18, 20, 21, 23, 27, 28, 29, 31, 33, 35, 36, 37, 41, 46, 47, 48, 53, 58, 62, 63, 64, 66, 67, 73, 77, 79, 80, 81, 84, 85, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 113, 114, 117, 118, 132, 135, 136, 141, 143, 144, 149, 154, 156, 162, 176, 178, 182, 184, 186, 187, 188, 190, 191, 192, 195, 196, 200, 209, 221, 227, 231, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 260, 261, 263, 265], "reconstrunct": 140, "recorrupt": 93, "recov": [0, 13, 20, 21, 246], "recreat": 178, "rectifier_fn": 125, "red": [9, 18, 30, 66, 73, 79, 124, 141, 143, 149, 156, 158, 162, 181, 184, 187, 192, 243, 261], "redefin": [0, 20, 21, 48], "reduc": [0, 7, 33, 34, 38, 39, 40, 41, 42, 47, 121, 144, 161], "reduct": [47, 132], "redund": 19, "refer": [2, 24, 33, 54, 58, 80, 81, 84, 85, 89, 91, 92, 94, 96, 102, 104, 188, 260], "refin": 130, "reflect": [4, 19, 37, 174, 181, 190, 199, 210, 213, 220, 233, 246, 248, 251, 252, 253, 254], "reformul": [46, 49], "refract": [11, 225], "reg": [55, 58, 59, 62, 63, 141, 148, 156, 157, 158, 159, 160, 161, 171], "reg_l2": 83, "region": [0, 71], "regist": [86, 111, 114, 116, 125, 126, 127, 128, 131, 208, 209], "regnam": [21, 49, 55, 59, 141, 148, 154, 156, 157, 160, 161, 164], "regular": [4, 5, 7, 10, 13, 18, 19, 20, 21, 24, 29, 30, 33, 35, 38, 40, 45, 46, 47, 50, 55, 58, 59, 61, 63, 65, 66, 73, 79, 90, 120, 124, 133, 134, 141, 143, 145, 148, 149, 151, 156, 157, 158, 159, 160, 161, 162, 170, 171, 181, 184, 187, 192, 241, 242, 243, 255, 256, 257, 258, 261], "regularis": [0, 20, 21, 33, 49, 59, 83, 141, 145, 162, 256, 257, 258], "regularizi": 24, "regval": 83, "reimplement": 107, "rel": [2, 19, 61, 187], "rel_crit": 19, "relat": [11, 24, 26, 27, 38, 46, 47, 49, 71], "relationship": 0, "relax": [50, 59, 124, 133, 134, 151, 163, 164, 165], "relaxation_step": 151, "releas": [24, 26, 37, 38, 49, 132], "relev": [54, 141, 162, 256, 257, 258], "reli": [0, 2, 27, 59, 156, 187, 195], "relu": [113, 117, 120, 124, 125], "remain": [14, 33, 245], "remark": 34, "remov": [39, 67, 68, 69, 70, 77, 78, 92, 99, 110, 130, 182, 186, 243, 244], "reparametr": 34, "repeat": [19, 48, 222, 226, 227, 234], "replac": [2, 45, 48, 50, 55, 63], "replic": [4, 174, 181, 190, 199, 210, 213, 220, 233], "repositori": [52, 65, 90, 117, 119, 120, 124, 131, 132], "repres": [20, 21, 64, 70, 74, 95, 121, 141, 144, 182, 189, 190, 227, 234, 259], "represent": [28, 115, 116], "reproduc": [4, 5, 6, 7, 11, 13, 15, 16, 19, 20, 21, 26, 27, 28, 29, 35, 38, 39, 40, 42, 45, 46, 47, 48, 49, 50, 176, 178, 180, 182, 186, 189, 196, 198, 200, 236], "request": 52, "requir": [2, 9, 14, 26, 27, 28, 29, 31, 32, 37, 38, 49, 53, 54, 56, 57, 59, 61, 62, 67, 85, 113, 141, 158, 164, 200, 208, 209, 236, 238, 240, 241, 242, 270], "requires_grad": [10, 83, 113], "requires_grad_": [15, 24, 33, 34, 83], "resampl": 248, "rescal": [0, 29, 33, 34, 67, 265, 268, 270], "rescale_mod": [13, 55, 67, 243, 245, 265, 268, 270], "research": 72, "reset": [67, 232, 240], "reset_metr": 67, "reset_rng": 232, "reshap": [0, 137, 259], "reshape_th": 137, "resi_connect": 132, "residu": [33, 34, 111, 132, 136, 141, 240], "resiz": [2, 8, 13, 27, 29, 37, 38, 262, 263], "resize_mod": [13, 27, 29, 262, 263], "resolut": [0, 18, 30, 37, 51, 54, 66, 67, 69, 73, 75, 77, 78, 79, 81, 85, 97, 120, 122, 124, 130, 131, 141, 143, 149, 154, 156, 157, 162, 181, 184, 187, 190, 192, 243, 248, 256, 258, 261, 269], "resolv": [2, 10, 11, 13, 19, 23, 24, 27, 28, 34, 35, 37, 38, 39, 40, 41, 42, 55, 72, 78, 92, 224, 225, 231], "reson": [92, 182, 189, 231], "resp": 50, "respect": [4, 11, 48, 63, 123, 151, 224, 225], "respiratori": [92, 231], "respons": [4, 9, 24, 197, 199], "rest": [142, 221], "restart": 134, "restor": [0, 5, 23, 24, 26, 28, 38, 45, 46, 47, 50, 54, 65, 68, 75, 117, 130, 132, 142, 144, 236, 238], "restorm": 54, "restrict": [15, 200, 237], "result": [2, 13, 15, 24, 33, 34, 37, 41, 63, 67, 96, 187, 192, 238, 239, 241, 242, 270], "results_dir": [5, 10, 13, 19, 20, 21, 26, 27, 28, 29, 45, 46, 47, 48, 50], "retain": [96, 187], "retrain": 24, "retriev": [17, 18, 34, 54, 66, 74, 117, 140, 141, 143, 149, 154, 156, 162, 170, 184, 191, 192, 196, 246, 260, 261, 263, 265], "return": [0, 2, 4, 5, 6, 10, 11, 13, 14, 20, 21, 24, 27, 28, 29, 31, 32, 33, 34, 35, 37, 39, 47, 48, 49, 54, 59, 67, 68, 69, 70, 71, 72, 74, 75, 77, 78, 80, 81, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 113, 119, 123, 133, 134, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 172, 173, 175, 176, 178, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 200, 201, 202, 203, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 229, 230, 232, 233, 234, 235, 240, 243, 244, 245, 247, 248, 249, 250, 255, 258, 259, 261, 262, 263, 264, 265, 267, 268, 270, 271, 272, 273], "return_anim": 270, "return_ax": 265, "return_fig": [265, 267, 268], "rev": 152, "revers": [33, 34], "review": 197, "revisit": 33, "rewrit": 67, "rgb": [4, 14, 15, 121, 144, 177, 185, 190], "rho": [33, 34, 134], "rho_t": [33, 238], "right": [2, 11, 31, 33, 35, 39, 42, 46, 59, 61, 62, 63, 98, 99, 100, 105, 106, 107, 108, 109, 143, 146, 158, 176, 187, 192, 196, 206, 230, 238, 242, 255, 267], "rm": [11, 34], "rmtree": [68, 69, 70, 77, 78], "rng": [176, 184, 186, 188, 193, 194, 196, 197, 198, 201, 202, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 234, 235, 246, 247, 248, 249, 250], "rng_manual_se": 232, "robust": [4, 130, 136, 200], "role": 35, "roll": [187, 203], "root": [2, 37, 39, 40, 41, 42, 46, 47, 52, 53, 68, 69, 70, 71, 72, 74, 75, 77, 78], "root_dir": 38, "rotat": [37, 38, 39, 54, 56, 81, 123, 200, 206, 209, 246, 251, 252, 253, 254], "rotoflip": 123, "rotoshift": 56, "roughli": 24, "round": 198, "routin": [59, 63], "row": [140, 227, 265, 268], "rule": [34, 141, 143], "run": [0, 2, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 23, 26, 27, 28, 29, 33, 34, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 52, 67, 86, 111, 112, 113, 114, 116, 117, 118, 120, 125, 126, 127, 128, 130, 131, 132, 136, 137, 138, 141, 162, 208, 209, 236, 237, 238, 239, 240, 242, 256, 257, 258], "rung": 241, "runner": [0, 2, 9, 10, 13, 15, 23, 24, 26, 27, 28, 33, 34, 35, 37, 38, 39, 40, 41, 42, 49], "runtim": [7, 174], "rvert": [2, 107], "rx": 200, "s3": [41, 42, 46], "s_": 31, "s_sequential_indic": [11, 224], "s_t": 182, "same": [2, 4, 9, 10, 31, 38, 39, 40, 42, 48, 49, 54, 59, 61, 67, 70, 71, 74, 91, 96, 126, 130, 133, 134, 137, 141, 143, 146, 147, 150, 159, 162, 174, 176, 181, 190, 196, 199, 208, 210, 211, 212, 213, 214, 215, 218, 219, 220, 225, 245, 256, 257, 258, 260, 264, 265, 267, 268, 270, 271, 272, 273], "sampl": [2, 4, 8, 11, 14, 15, 28, 34, 36, 37, 39, 46, 47, 54, 61, 62, 65, 66, 67, 70, 71, 74, 79, 80, 81, 88, 92, 93, 95, 96, 113, 116, 123, 126, 131, 143, 149, 156, 158, 175, 176, 178, 182, 184, 186, 187, 189, 192, 195, 196, 200, 217, 222, 224, 225, 226, 227, 228, 229, 230, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 248, 260, 261, 263, 265], "sample_filt": 71, "sample_mask": [222, 226, 234], "sample_r": 71, "sampler": [34, 62, 239, 240, 241, 242], "samples_loc": [0, 195], "samuel": 65, "sar": 183, "sara": 0, "satellit": 61, "satisfi": [164, 166, 169, 170], "satur": [187, 192], "save": [2, 5, 6, 8, 16, 17, 18, 20, 21, 26, 28, 29, 38, 39, 40, 41, 42, 45, 46, 47, 48, 50, 53, 66, 67, 68, 69, 70, 72, 74, 75, 77, 78, 79, 80, 92, 93, 95, 96, 132, 137, 143, 146, 154, 156, 176, 178, 186, 187, 191, 192, 196, 198, 239, 243, 245, 256, 258, 261, 265, 266, 267, 268, 269, 270], "save_chain": [239, 240, 241, 242], "save_dir": [2, 5, 6, 13, 16, 26, 27, 28, 29, 38, 39, 40, 41, 42, 45, 46, 47, 49, 50, 53, 79, 265, 266, 268, 269], "save_fn": [267, 270], "save_fold": [5, 26, 28, 48, 243], "save_iter": 237, "save_metadata_to_cach": 71, "save_model": [67, 245], "save_path": [2, 16, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 67, 176, 186, 191, 196, 198, 245], "sbr": 9, "scalar": [11, 55, 64, 67, 101, 185, 217, 245], "scale": [0, 2, 5, 6, 13, 16, 20, 21, 26, 27, 28, 29, 37, 39, 40, 41, 42, 45, 48, 49, 50, 75, 93, 130, 132, 135, 136, 146, 183, 228, 230, 245, 246, 254], "scale_out": 114, "scan": [18, 51, 66, 67, 71, 74, 85, 97, 127, 128, 143, 151, 156, 164, 184, 187, 192, 200, 209, 256, 258, 261], "scan_fold": 74, "scanvic": 37, "scatter": [0, 4, 61], "scatter_plot": 0, "scene": [9, 37, 78, 185, 197], "schedul": [2, 16, 32, 33, 38, 39, 40, 42, 45, 46, 47, 48, 49, 50, 67, 238, 245], "scheme": [0, 38, 39], "schlemper": 227, "sci": 133, "scienc": 164, "score": [13, 31, 34, 35, 95, 158], "scoreprior": [31, 35, 62, 240, 241, 242], "scratch": [38, 39, 40, 42, 67], "screen": 74, "script": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50], "scunet": 54, "seamlessli": [4, 57, 259], "search": [8, 23, 24], "second": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 59, 61, 99, 121, 141, 144, 151, 182, 186, 187, 189, 190, 197], "second_deriv": 99, "secondli": 33, "section": 33, "secur": [24, 26, 38, 49], "see": [0, 7, 9, 11, 15, 24, 26, 27, 31, 34, 35, 38, 41, 42, 46, 47, 49, 55, 56, 58, 59, 61, 63, 67, 80, 81, 88, 90, 92, 94, 95, 96, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 113, 114, 115, 116, 117, 119, 120, 121, 122, 124, 129, 131, 132, 133, 134, 138, 141, 142, 144, 145, 162, 163, 172, 176, 179, 182, 183, 186, 187, 189, 192, 197, 198, 200, 225, 226, 227, 230, 233, 234, 243, 244, 245, 246, 248, 251, 252, 253, 254, 255, 256, 257, 258, 265, 268, 270], "seed": [4, 5, 6, 7, 8, 11, 13, 15, 16, 19, 20, 21, 26, 27, 28, 29, 35, 38, 39, 40, 42, 45, 46, 47, 48, 49, 50, 176, 178, 180, 182, 184, 186, 188, 189, 193, 194, 196, 198, 200, 201, 202, 222, 223, 224, 229, 230, 232, 233, 235, 236, 237, 238, 240], "seek": 19, "segment": 68, "select": [0, 5, 10, 20, 21, 26, 27, 28, 29, 38, 45, 46, 47, 49, 50, 69, 75, 80, 141, 153, 221, 226, 227, 229, 232, 234], "self": [0, 5, 8, 9, 14, 24, 27, 28, 31, 37, 43, 48, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 85, 87, 88, 90, 92, 96, 98, 99, 100, 110, 120, 136, 143, 146, 149, 154, 156, 176, 178, 180, 184, 186, 187, 189, 191, 192, 194, 196, 198, 200, 223, 228, 236, 240, 247, 248, 250, 256, 258, 261], "selfexsr": 77, "semi": 61, "semigroup": 246, "send": 52, "sens": [0, 2, 17, 18, 34, 47, 51, 53, 66, 67, 73, 79, 81, 85, 88, 97, 105, 106, 113, 143, 149, 156, 161, 169, 174, 176, 177, 178, 179, 180, 181, 184, 186, 187, 189, 190, 192, 193, 194, 198, 200, 206, 222, 226, 227, 232, 234, 256, 258, 261, 263, 265, 269], "sensit": [11, 98, 99, 100], "sensor": [81, 88, 176, 187, 190, 191, 192, 200], "sensor_model": [187, 192], "separ": [23, 139], "seq": [33, 34], "seq_next": 34, "sequenc": [0, 19, 33, 80, 92, 119, 195, 198, 217, 237, 238, 270], "sequenti": [8, 112, 113, 224], "seri": 120, "serial": [24, 26, 38, 49], "series_uid": 74, "serv": [59, 137], "server": [8, 52, 65], "set": [0, 4, 6, 7, 10, 11, 13, 15, 19, 23, 28, 31, 32, 33, 35, 37, 41, 45, 46, 47, 48, 50, 56, 57, 61, 62, 67, 71, 73, 78, 79, 80, 81, 82, 83, 85, 87, 88, 90, 92, 96, 97, 102, 104, 117, 118, 119, 120, 124, 130, 131, 132, 137, 146, 149, 152, 158, 161, 163, 164, 165, 171, 182, 184, 186, 187, 188, 189, 192, 193, 194, 195, 201, 202, 229, 232, 233, 240, 242, 243, 246], "set14": 77, "set14_sr": 77, "set3": 6, "set3c": [5, 6, 16, 20, 21, 26, 27, 28, 45, 49, 50], "set_cov": 171, "set_cov_reg": 171, "set_descript": 24, "set_weight": 171, "setup": [67, 245], "setup_train": [67, 245], "setweight": 0, "sever": [8, 19, 200, 209], "sfx": 189, "shannon": [4, 11, 224, 225], "shape": [0, 4, 5, 7, 13, 15, 19, 21, 23, 24, 32, 33, 34, 35, 46, 47, 56, 59, 60, 71, 74, 80, 92, 114, 117, 121, 122, 127, 128, 130, 132, 133, 134, 135, 137, 140, 144, 146, 159, 171, 172, 176, 182, 183, 186, 189, 190, 196, 198, 211, 212, 214, 215, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 233, 234, 246, 247, 248, 249, 250, 251, 252, 253, 254, 259, 265, 268, 270], "shard": 75, "share": 47, "sharpen": 12, "shear": [37, 226], "shelf": 55, "shepp": 13, "sheppard": 11, "shepplogan": [13, 29], "shepplogandataset": 48, "shift": [13, 37, 56, 187, 203, 246], "shift_max": [246, 249, 251, 252, 253, 254], "short": [16, 49], "should": [0, 7, 8, 9, 11, 13, 27, 29, 38, 45, 59, 67, 68, 71, 72, 77, 78, 79, 80, 86, 92, 93, 95, 96, 98, 99, 100, 103, 111, 114, 116, 118, 125, 126, 127, 128, 130, 131, 132, 137, 156, 162, 164, 166, 169, 170, 176, 182, 185, 187, 188, 189, 190, 195, 198, 200, 203, 208, 209, 221, 223, 224, 225, 230, 231, 232, 236, 238, 240, 242, 243, 244, 256, 257, 258, 265, 268, 270], "show": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 19, 20, 21, 26, 27, 29, 31, 32, 33, 35, 37, 38, 39, 40, 42, 45, 46, 47, 50, 61, 67, 79, 141, 145, 199, 243, 265, 266, 267, 268, 269], "show_progress_bar": [2, 16, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 67, 79, 145, 243, 245], "showcas": 13, "shown": [0, 9, 55, 267], "shuffl": [2, 5, 6, 16, 24, 26, 28, 37, 38, 39, 40, 41, 42, 45, 46, 47, 49, 50, 53, 67, 74, 117, 124], "shutil": [68, 69, 70, 77, 78], "siam": [120, 133], "side": [86, 270], "sigma": [4, 5, 7, 9, 10, 13, 14, 15, 19, 20, 21, 23, 26, 27, 28, 29, 31, 32, 33, 34, 35, 45, 48, 49, 50, 53, 54, 55, 58, 59, 61, 62, 93, 95, 98, 99, 111, 112, 117, 119, 120, 121, 123, 126, 130, 131, 132, 136, 142, 144, 149, 154, 157, 158, 164, 168, 180, 184, 190, 192, 193, 197, 201, 206, 230, 232, 235, 236, 237, 238, 241, 242, 256], "sigma2_nois": 31, "sigma_": 201, "sigma_d": 31, "sigma_denois": [10, 26, 28, 35, 38, 45, 49, 50, 154, 157, 158], "sigma_dict": 235, "sigma_i": [34, 206], "sigma_max": [201, 235], "sigma_min": [201, 235], "sigma_n": 238, "sigma_nois": 33, "sigma_sq": [121, 144], "sigma_t": [33, 34], "sigma_tild": 34, "sigma_x": 206, "sigmagener": [61, 232], "sigmat": 34, "sigmoid": 129, "sign": [147, 148, 176], "signal": [4, 6, 11, 14, 15, 55, 56, 58, 64, 67, 73, 79, 81, 87, 88, 91, 97, 110, 135, 146, 155, 158, 161, 176, 178, 187, 190, 191, 192, 196, 197, 200, 228, 244, 260], "signific": [31, 52], "significantli": 48, "silent": [86, 111, 114, 116, 125, 126, 127, 128, 131, 208, 209], "sim": [2, 23, 24, 34, 35, 81, 93, 98, 99, 100, 105, 106, 107, 108, 109, 123, 176, 184, 193, 196, 201, 202, 230, 242], "simeq": 34, "similar": [13, 37, 61, 64, 84, 94, 176, 186, 191, 196, 198, 217, 246, 259], "similarli": [12, 49, 53, 59, 156], "simlarli": 0, "simpl": [0, 2, 5, 6, 8, 10, 14, 15, 16, 27, 31, 32, 35, 39, 40, 41, 42, 48, 50, 61, 106, 107, 109, 111, 113, 182, 189], "simplest": 60, "simpli": [2, 24, 33, 34, 47, 54, 57, 61, 80, 92, 203], "simplic": [0, 2, 33, 45, 50], "simul": [11, 61, 67, 253], "simultan": [96, 186, 223, 228], "sin": [11, 206], "sinc": [2, 7, 31, 34, 35, 57, 86, 111, 114, 116, 125, 126, 127, 128, 131, 137, 145, 146, 147, 174, 176, 198, 207, 208, 209], "sine": 176, "singl": [4, 10, 17, 18, 19, 27, 32, 37, 38, 40, 45, 46, 47, 48, 49, 50, 54, 55, 59, 62, 64, 66, 71, 79, 90, 130, 137, 141, 151, 162, 163, 164, 165, 166, 167, 168, 169, 170, 174, 175, 182, 187, 189, 192, 197, 198, 224, 256, 257, 258, 259, 261, 265, 267, 268], "single_pixel": 27, "singlecoil": 71, "singlephotonlidar": 9, "singlepixelcamera": [15, 27], "singular": [14, 31, 32, 61, 175, 178, 182, 189, 198, 236], "sinogram": 15, "site": [26, 37, 245], "situat": [4, 19], "size": [0, 4, 7, 9, 11, 13, 15, 16, 19, 24, 26, 28, 31, 33, 34, 35, 38, 41, 45, 46, 47, 48, 49, 56, 58, 59, 61, 63, 64, 69, 70, 76, 77, 79, 80, 84, 85, 89, 91, 92, 94, 96, 98, 99, 100, 101, 102, 104, 114, 115, 116, 118, 119, 121, 126, 129, 132, 140, 141, 143, 144, 145, 146, 147, 149, 152, 153, 155, 161, 164, 168, 171, 173, 174, 175, 176, 178, 179, 181, 182, 186, 187, 188, 189, 190, 192, 195, 197, 198, 199, 200, 203, 204, 205, 208, 209, 210, 211, 212, 213, 214, 215, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 233, 234, 235, 241, 242, 255, 259, 260, 262, 263, 265, 267, 268, 270], "skew": [246, 251], "skew_max": [246, 251, 252, 253, 254], "skip": [34, 136], "slice": [60, 71, 74, 189], "slice_fnam": 74, "slice_ind": 71, "slicesamplefileidentifi": 71, "slicesampleidentifi": 74, "slide": 126, "slow": [2, 118, 174, 181], "slower": 4, "small": [7, 19, 24, 37, 41, 42, 45, 50, 59, 96, 99, 100, 121, 133, 140, 144, 161, 172, 200, 209], "smaller": [0, 5, 20, 21, 28, 59, 96, 119, 143, 156, 171, 174, 181, 183, 190, 199, 210, 213, 220, 241, 242], "smolyakov": [133, 134], "smooth": [47, 155], "snippet": 0, "snu": 72, "so": [0, 4, 13, 14, 34, 50, 67, 182, 189, 221, 226, 227, 253], "soft": [10, 18, 19, 47, 49, 51, 66, 67, 68, 73, 79, 85, 97, 137, 138, 143, 147, 149, 156, 161, 166, 169, 176, 187, 192, 256, 258, 261, 265, 269], "softplu": [117, 124, 125], "softwar": [133, 134], "solut": [0, 13, 14, 19, 20, 21, 59, 63, 134, 137, 138, 141, 145, 151, 176, 187, 200, 255], "solv": [2, 13, 28, 33, 34, 45, 49, 55, 59, 63, 65, 118, 133, 134, 141, 145, 164, 172], "solver": 159, "some": [0, 4, 7, 11, 14, 15, 20, 21, 31, 34, 54, 55, 56, 57, 59, 61, 63, 64, 71, 85, 130, 153, 176, 187, 190, 192, 200], "sometim": 63, "somewhat": 7, "soon": 52, "sor": 176, "sort": 61, "sota": 62, "sourc": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 52, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273], "source_radiu": [200, 209], "sourcetensor": [15, 33], "space": [0, 2, 15, 24, 37, 38, 48, 61, 71, 80, 92, 111, 121, 144, 153, 195, 199, 200, 209, 222, 226, 227, 233, 234], "spacevaryingblur": [4, 233], "spacial": 0, "spars": [0, 15, 112, 195, 208, 209, 217], "sparsiti": [0, 19, 21], "spatial": [0, 4, 199, 228], "special": [80, 92, 251, 252, 253, 254], "specif": [4, 5, 14, 26, 28, 29, 61, 63, 71, 102, 104, 141, 142, 145], "specifi": [0, 4, 5, 11, 15, 20, 21, 26, 27, 28, 29, 49, 50, 61, 69, 75, 102, 104, 105, 106, 107, 108, 109, 120, 156, 179, 182, 189, 222, 223, 226, 234, 245, 270], "speckl": 183, "spectral": [82, 83, 170, 187, 191], "spectral_method": [13, 191], "speed": [2, 14, 48, 79, 99, 134, 187], "sphinx": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50], "split": [8, 18, 23, 24, 26, 38, 43, 45, 49, 50, 59, 61, 66, 67, 69, 71, 73, 75, 79, 80, 85, 87, 90, 92, 93, 96, 110, 121, 133, 134, 136, 142, 144, 146, 151, 162, 164, 165, 168, 184, 187, 192, 200, 221, 223, 228, 231, 238, 256, 257, 258, 261], "split_ratio": [41, 96, 186, 223, 228], "split_siz": [80, 221], "splittingloss": [41, 61, 80, 92, 223, 228], "splittingmodel": 96, "spoke": [80, 92], "sqrt": [0, 13, 31, 32, 33, 34, 35, 47, 91, 133, 134, 140, 176, 198, 230, 237, 238, 242, 260], "squar": [5, 16, 33, 49, 59, 67, 80, 87, 88, 90, 92, 96, 97, 98, 99, 100, 103, 116, 172, 200, 224, 225, 228, 244], "sr": [75, 132], "src": [9, 37], "ss": 67, "ssdu": [41, 96, 228], "ssdu_mask": 228, "stabil": [35, 172], "stabilis": 241, "stabl": [98, 265, 268, 270], "stack": [17, 18, 56, 66, 177, 178, 181, 187, 190, 192, 250, 259, 261, 265], "stage": [130, 131], "standalon": 54, "standard": [2, 5, 9, 12, 13, 15, 19, 20, 21, 23, 24, 26, 27, 29, 32, 33, 34, 35, 49, 53, 54, 55, 56, 58, 59, 63, 93, 97, 98, 99, 107, 119, 121, 130, 141, 142, 144, 149, 172, 173, 180, 184, 185, 190, 193, 197, 201, 206, 223, 230, 241, 242, 243, 256, 257, 258, 272], "standart": [28, 29, 162], "star": [63, 199, 220, 255], "start": [0, 14, 24, 26, 38, 39, 40, 42, 49, 151], "state": [0, 65, 67, 68, 232], "state_dict": [2, 10, 26, 37, 38, 39, 40, 41, 42, 49, 67], "static": [15, 34, 61, 80, 92, 96, 133, 134, 135, 137, 182], "staticmethod": [80, 92], "stationari": 61, "statist": [62, 93, 240, 241, 242], "std": [32, 35], "std_scale": 228, "stem": 9, "step": [0, 2, 4, 11, 13, 15, 19, 20, 21, 24, 26, 27, 28, 29, 31, 35, 38, 48, 54, 55, 59, 61, 63, 67, 80, 92, 93, 95, 96, 124, 136, 141, 145, 146, 147, 151, 155, 162, 164, 168, 173, 182, 186, 199, 200, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 238, 241, 242, 255, 256, 257, 258], "step_ratio_d": 245, "step_siz": [2, 16, 31, 35, 38, 39, 40, 42, 45, 49, 50, 173, 240, 241, 242], "steplr": [2, 16, 38, 39, 40, 42, 45, 48, 49, 50], "stepsiz": [0, 5, 10, 13, 20, 21, 26, 27, 28, 29, 38, 45, 46, 47, 49, 50, 55, 59, 63, 134, 141, 143, 145, 146, 147, 148, 149, 156, 159, 160, 161, 162, 163, 165, 166, 167, 169, 170, 256, 257, 258], "stepsize_du": [49, 59], "stepsize_int": [143, 156], "stepz_pixel": [11, 225], "still": 61, "stochast": [58, 131, 132, 187, 192, 237, 241], "stop": [5, 7, 26, 27, 28, 113, 118, 141, 142, 145, 171, 172, 173], "stopping_criterion": 171, "storag": [10, 38, 39, 40, 41, 42], "store": [8, 59, 61, 71, 74, 141, 145, 151, 174, 175, 176, 178, 181, 182, 196, 198, 199, 221, 223, 228, 231, 235, 240], "str": [16, 38, 39, 40, 42, 45, 46, 47, 48, 49, 50, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 84, 89, 92, 94, 98, 102, 103, 104, 105, 106, 107, 108, 109, 117, 119, 120, 121, 123, 124, 125, 130, 131, 132, 136, 137, 138, 139, 141, 144, 152, 161, 162, 171, 174, 175, 176, 177, 179, 181, 190, 196, 197, 198, 199, 200, 203, 208, 209, 210, 212, 213, 215, 220, 221, 223, 224, 225, 228, 230, 231, 232, 233, 235, 237, 238, 243, 245, 246, 248, 251, 252, 253, 254, 256, 257, 258, 262, 263, 265, 266, 267, 268, 269, 270], "strategi": [15, 141, 222, 226, 234], "strength": [31, 35, 170, 188], "stretch": [246, 251], "stride": [113, 117, 124], "strideconv": [117, 124], "string": [162, 256, 257, 258], "strongli": 125, "structur": [14, 53, 61, 68, 69, 70, 71, 72, 74, 75, 77, 78, 94, 117, 182, 189], "structural_similar": 94, "study_uid": 74, "style": [52, 80], "sub": [46, 161], "sub_net_s": [24, 152], "subband": 137, "subclass": [27, 48, 86, 111, 114, 116, 125, 126, 127, 128, 131, 208, 209], "subfold": 70, "subgroup": [56, 246, 251, 252, 253, 254], "subject": 19, "submit": 52, "submodul": 56, "subnetwork": [24, 152], "subpackag": 53, "subplot": [9, 33], "subsampl": [15, 96, 176, 181, 182, 189, 198, 223, 228], "subset": [38, 40, 41, 42, 96, 186, 223, 229], "substract": 259, "subsubfold": 70, "success": 55, "successfulli": [2, 37, 68, 69, 77, 78], "suffic": [4, 11], "suffici": [34, 39, 141], "suggest": [24, 33, 34, 65, 130, 146], "suit": 114, "sum": [13, 24, 32, 34, 35, 47, 56, 59, 61, 80, 92, 151, 153, 161, 182, 198, 232, 250, 259], "sum_": [19, 24, 39, 46, 93, 96, 123, 140, 199, 220], "sum_i": [0, 121, 144, 153], "summar": [54, 58], "summat": 171, "sup": 2, "supadversarialdiscriminatorloss": [2, 102, 245], "supadversarialgeneratorloss": [2, 104, 245], "super": [0, 5, 14, 18, 27, 30, 31, 37, 48, 51, 66, 67, 69, 73, 75, 78, 79, 80, 81, 85, 92, 97, 120, 122, 124, 141, 143, 149, 154, 156, 157, 162, 181, 184, 187, 192, 224, 225, 240, 243, 248, 256, 258, 261, 269], "supervis": [2, 16, 37, 43, 45, 46, 47, 48, 49, 50, 65, 66, 67, 73, 79, 81, 85, 87, 88, 90, 93, 96, 97, 98, 99, 100, 105, 106, 110, 120, 136, 143, 149, 154, 156, 178, 180, 184, 186, 187, 189, 192, 194, 200, 223, 228, 244, 247, 248, 250, 256, 258, 261], "suploss": [2, 16, 45, 46, 47, 48, 49, 50, 244, 245], "support": [19, 95, 112, 152, 161, 183, 210, 211, 213, 214, 218, 219, 226, 227, 234, 245], "suppos": 67, "suptitl": [4, 11, 19, 33, 46, 47, 265, 268], "sure": [18, 35, 43, 52, 66, 67, 73, 79, 85, 98, 99, 100, 110, 136, 178, 180, 187, 192, 194, 261], "suregaussianloss": [42, 56], "surepgloss": 42, "surepoissonloss": 42, "surpris": 7, "svd": [14, 178, 186], "swin": [131, 132], "swinir": 54, "swz30": 54, "synchron": [5, 6, 16, 26, 27, 28, 29, 38, 39, 40, 42, 45, 46, 47, 49, 50, 67], "synthes": [4, 224, 225], "synthesi": 131, "synthet": 54, "system": [58, 61, 145, 172], "t": [2, 6, 9, 15, 24, 26, 29, 33, 34, 37, 38, 46, 47, 49, 56, 60, 61, 68, 80, 92, 93, 119, 126, 133, 134, 135, 145, 155, 158, 170, 182, 185, 187, 197, 203, 221, 222, 226, 227, 228, 230, 231, 234, 237, 238, 243, 255, 267, 270], "t1": 19, "t10k": [41, 42, 46], "t_g": [81, 123], "t_hist": 145, "t_i": 33, "t_im1": 33, "t_max": 48, "tabl": [38, 46, 47, 52, 58], "tachella": 65, "tag": [46, 59, 132, 141], "tail": 227, "take": [15, 24, 31, 33, 34, 41, 42, 54, 56, 59, 60, 67, 68, 69, 70, 71, 72, 74, 75, 77, 78, 80, 86, 92, 99, 100, 111, 114, 116, 117, 119, 125, 126, 127, 128, 131, 135, 139, 144, 145, 151, 152, 153, 200, 208, 209, 226, 245], "taken": [0, 52, 115, 116, 122, 159, 227, 267], "tangent": 7, "tanh": 113, "taohuang2018": 90, "tar": [67, 70, 72, 75, 78], "target": [0, 71, 80, 92, 97, 195], "target_transform": 70, "task": [0, 75, 130], "tau": [0, 20, 21, 27, 42, 49, 98, 99, 100, 134, 141, 164], "tau1": 99, "tau2": 99, "tau_1": 99, "tau_2": 99, "tcia": 74, "teboul": 134, "techniqu": 61, "telescop": 0, "templat": 85, "tend": [0, 176], "tensor": [0, 4, 10, 11, 12, 13, 14, 15, 27, 28, 33, 34, 37, 46, 48, 53, 59, 61, 64, 67, 76, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 112, 113, 115, 117, 118, 119, 120, 121, 122, 123, 126, 129, 130, 132, 133, 134, 135, 136, 137, 138, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 259, 260, 262, 263, 264, 265, 267, 268, 270, 271, 272, 273], "tensor_s": [7, 15, 16, 21, 23, 32, 34, 35, 39, 49, 59, 61, 80, 92, 96, 149, 178, 186, 221, 223, 228, 231, 236, 238], "tensorlist": [12, 187, 190, 192, 264, 271, 272, 273], "tensorshap": 37, "term": [0, 5, 10, 20, 21, 26, 27, 28, 29, 33, 34, 38, 45, 46, 47, 49, 50, 55, 58, 59, 63, 99, 121, 133, 134, 140, 141, 142, 143, 144, 145, 147, 148, 151, 156, 157, 160, 162, 164, 238, 256, 257, 258], "terminologi": 151, "terri": [0, 65], "test": [2, 4, 5, 11, 13, 14, 26, 28, 52, 53, 67, 71, 73, 77, 78, 79, 80, 92, 93, 95, 96, 113, 117, 118, 120, 124, 130, 131, 138, 187, 265], "test_base_dataset": [39, 45, 46, 47, 49, 50], "test_batch_s": [16, 45, 46, 47, 48, 49, 50], "test_dataload": [2, 5, 16, 26, 28, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 67, 243], "test_datapoint": [39, 40, 41, 42, 46, 47, 79], "test_dataset": [2, 5, 6, 16, 26, 28, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 53, 79], "test_dataset_nam": [16, 45, 49, 50], "test_img": [23, 24], "test_psnr": [16, 49], "test_sampl": [46, 47], "test_transform": [16, 45, 49, 50], "text": [2, 19, 20, 21, 37, 46, 47, 91, 93, 98, 100, 105, 106, 107, 108, 109, 123, 141, 146, 147, 149, 161, 170, 176, 178, 186, 191, 200, 201, 204, 205, 207, 235, 260], "tgv": 133, "th": [19, 24, 133, 134, 137, 138, 140, 148, 152, 242], "than": [0, 5, 6, 10, 15, 28, 33, 41, 49, 59, 64, 96, 143, 156, 171, 174, 176, 181, 187, 190, 195, 198, 199, 200, 203, 210, 213, 220, 225, 241, 242, 265, 268], "thank": [4, 11], "thei": [24, 26, 31, 38, 47, 49, 54, 56, 57, 61, 63, 67, 141, 156, 236], "them": [18, 45, 46, 47, 54, 56, 74, 86, 111, 114, 116, 125, 126, 127, 128, 131, 137, 187, 208, 209, 232, 270], "themselv": [2, 245], "theorem": [4, 11, 34, 63, 224, 255], "theoret": 187, "theori": [4, 11, 59, 133, 134, 224, 225], "therefor": 13, "therein": 11, "theta": [7, 14, 16, 24, 39, 55, 61, 118, 206, 208, 209, 232, 237, 238], "theta2": 61, "theta_max": [37, 246, 251, 252, 253, 254], "theta_z_max": [246, 251, 252, 253, 254], "thi": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 23, 24, 26, 27, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 67, 68, 69, 71, 74, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 92, 93, 95, 96, 98, 99, 100, 103, 105, 106, 108, 109, 111, 112, 113, 114, 115, 116, 118, 119, 120, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 140, 141, 142, 143, 145, 146, 147, 153, 156, 158, 163, 168, 171, 174, 176, 181, 182, 183, 185, 186, 187, 188, 189, 192, 194, 195, 196, 197, 198, 199, 200, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 232, 234, 236, 237, 238, 240, 243, 244, 245, 255, 256, 258, 269, 270], "thin": [31, 239, 240, 241, 242], "third": [9, 197], "thorac": 74, "those": 161, "three": 164, "thres_conv": [5, 28, 141, 239], "thresh_conv": [240, 241, 242], "threshold": [10, 18, 19, 47, 49, 51, 66, 67, 73, 79, 85, 97, 137, 138, 141, 143, 147, 149, 156, 161, 166, 169, 176, 187, 192, 239, 240, 242, 256, 258, 261, 265, 269], "threshold_3d": 137, "threshold_nd": 137, "thresold_2d": 137, "thresold_func": 137, "through": [0, 4, 11, 14, 34, 61, 80, 81, 82, 83, 92, 96, 113, 195], "thu": [8, 28, 48, 71, 118, 137, 138, 182, 189, 200, 240, 241, 242], "ti": 258, "tight": [19, 265, 268], "tight_layout": [9, 33], "tikhonov": 59, "tild": [34, 175, 176, 178, 182, 186, 187, 190, 192, 194, 200, 237], "tilt": [37, 246, 253], "time": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 55, 59, 71, 80, 92, 93, 95, 96, 113, 119, 121, 135, 141, 144, 176, 178, 181, 182, 186, 195, 196, 197, 221, 222, 226, 227, 228, 234, 239, 243, 245, 270], "time_dim": 270, "time_pair": 34, "timeagnosticnet": [80, 92], "timestep": [33, 34, 119, 237, 238], "tip": [241, 242], "tissu": 70, "titl": [0, 2, 4, 7, 9, 11, 12, 13, 14, 15, 20, 21, 27, 29, 31, 32, 33, 34, 35, 46, 47, 199, 265, 267, 268, 270], "tkbn": 0, "to_complex_denois": [13, 54], "to_logimag": 0, "to_numpi": 260, "to_static_mri": [80, 92, 182], "togeth": 56, "toi": 45, "tol": [0, 59, 82, 83, 172, 173, 187, 192], "tol_int": [143, 156], "toler": [2, 82, 83, 113, 172, 173, 187, 192], "tomograph": 60, "tomographi": [18, 25, 30, 41, 48, 54, 66, 67, 74, 76, 120, 141, 143, 144, 149, 150, 152, 153, 154, 156, 162, 178, 180, 184, 187, 188, 192, 202, 260, 261, 263, 265, 266], "too": [96, 245], "tool": 0, "toolbox": [4, 11, 26, 61], "top": [0, 16, 18, 27, 31, 39, 42, 48, 49, 58, 63, 98, 99, 100, 110, 137, 138, 141, 143, 150, 155, 164, 175, 176, 178, 182, 187, 190, 191, 192, 200, 203, 267], "topk": [137, 138], "torch": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 53, 54, 56, 57, 59, 61, 63, 64, 67, 74, 76, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 117, 118, 120, 121, 123, 125, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273], "torchist": 217, "torchkbnufft": [0, 195], "torchvis": [2, 5, 6, 8, 16, 20, 21, 26, 28, 37, 38, 39, 40, 41, 42, 45, 46, 47, 49, 50, 53, 68, 69, 70, 71, 72, 73, 75, 77, 78, 81], "torso": 119, "total": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 65, 66, 67, 74, 88, 95, 101, 111, 130, 133, 134, 137, 141, 143, 149, 156, 159, 162, 175, 178, 184, 187, 192, 226, 249, 260, 261, 265, 266], "total_batch": 95, "totalloss": [2, 16, 24, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 67], "totensor": [2, 5, 6, 8, 16, 20, 21, 26, 28, 37, 39, 40, 41, 42, 45, 46, 47, 49, 50, 53, 71], "touch": 65, "tour": [11, 17, 18, 65, 66, 174, 175, 176, 177, 178, 179, 180, 181, 184, 186, 187, 189, 190, 192, 193, 194, 198, 199, 200, 206, 222, 224, 226, 227, 229, 230, 232, 233, 234, 261, 263, 265], "toward": [20, 21, 217], "tqdm": [24, 33, 34, 67], "track_running_stat": 113, "tracker": [52, 65], "tradit": [0, 119], "train": [4, 5, 6, 8, 10, 13, 17, 18, 26, 27, 28, 29, 33, 34, 37, 53, 54, 56, 57, 61, 62, 63, 65, 66, 67, 69, 71, 73, 75, 79, 80, 84, 85, 92, 93, 94, 95, 96, 97, 102, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 119, 120, 122, 124, 129, 130, 131, 136, 158, 178, 186, 187, 192, 240, 241, 242, 243, 245, 256, 258, 261, 269], "train_base_dataset": [39, 45, 46, 47, 49, 50], "train_batch_s": [16, 45, 46, 47, 48, 49, 50], "train_dataload": [2, 8, 16, 24, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 67, 244, 245], "train_datapoint": [5, 16, 26, 28, 38, 39, 40, 41, 42, 45, 46, 47, 49, 50, 79], "train_dataset": [2, 5, 6, 16, 24, 26, 28, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 53, 79], "train_dataset_nam": [16, 38, 40, 42, 45, 46, 47, 48, 49, 50], "train_img": 24, "train_test_transform": [46, 47], "train_transform": [16, 45, 49, 50], "trainabl": [2, 5, 10, 16, 26, 28, 37, 38, 39, 40, 41, 42, 45, 46, 47, 49, 50, 63, 90, 93, 96, 98, 99, 100, 136, 256, 258], "trainable_param": [10, 38, 45, 46, 47, 49, 50, 63, 256, 258], "trainer": [2, 16, 24, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 56, 64, 243, 244, 245], "trajectori": [4, 230], "transact": [48, 112], "transform": [0, 2, 5, 6, 15, 16, 18, 19, 20, 21, 24, 26, 27, 28, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 50, 53, 54, 61, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 81, 85, 87, 95, 112, 123, 130, 132, 136, 137, 138, 161, 176, 178, 182, 186, 187, 189, 192, 195, 198, 200, 208, 209, 246, 247, 248, 249, 251, 252, 253, 254, 261, 263, 265], "transform_data": 53, "transform_kspac": 71, "transform_target": 71, "transformerblock": 130, "translat": [37, 38, 81, 129, 246, 249, 251, 252, 254], "transmiss": 185, "transpos": [12, 14, 110, 117, 124, 141, 143, 145, 176, 178, 187, 190, 200, 213, 214, 215], "trick": 34, "trigger": [9, 37, 232], "trivial": [31, 185, 186], "true": [0, 2, 4, 5, 6, 7, 8, 10, 11, 13, 15, 16, 19, 20, 21, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 53, 55, 59, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 88, 91, 92, 93, 94, 95, 96, 99, 110, 111, 113, 118, 119, 120, 123, 126, 127, 128, 129, 130, 132, 135, 136, 140, 141, 145, 151, 152, 155, 156, 161, 163, 164, 165, 171, 176, 181, 186, 187, 189, 194, 195, 198, 200, 203, 207, 208, 209, 210, 211, 212, 213, 214, 215, 223, 228, 236, 237, 238, 239, 240, 243, 245, 255, 260, 261, 265, 266, 267, 268, 269, 270], "truli": [98, 99, 100], "truth": [2, 7, 16, 20, 21, 23, 24, 27, 29, 31, 32, 33, 34, 35, 37, 41, 46, 47, 49, 56, 67, 70, 71, 80, 92, 97, 105, 106, 141, 145, 221, 231, 243, 245, 255], "try": [0, 41, 42, 46, 52, 65], "tun": 238, "tune": [24, 29, 170], "tupl": [0, 67, 80, 92, 95, 114, 118, 122, 126, 132, 141, 145, 175, 176, 179, 181, 182, 185, 186, 189, 190, 195, 196, 198, 203, 206, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 233, 234, 239, 240, 241, 242, 243, 244, 245, 262, 263, 265, 267, 268, 270], "turn": [4, 19, 23, 34, 54, 63, 123, 239, 255, 256], "tutori": [33, 34, 63, 115, 116, 255], "tv": [18, 22, 47, 65, 66, 101, 133, 134, 141, 143, 149, 156, 159, 162, 175, 178, 184, 187, 192, 260, 261, 265, 266], "tv_smooth": 47, "tvdenois": 159, "tvprior": [20, 59, 134], "tweedi": [34, 35, 62, 95, 158], "two": [2, 12, 23, 24, 33, 34, 38, 39, 40, 59, 70, 71, 84, 90, 95, 96, 143, 151, 156, 186, 187, 192, 200, 209, 229, 232, 250, 259], "twophoton_bpae_b": 70, "twophoton_bpae_g": 70, "twophoton_bpae_r": 70, "twophoton_mic": 70, "tx_prev": 145, "ty": 141, "type": [2, 8, 11, 37, 47, 53, 61, 70, 71, 123, 124, 176, 195, 196, 200, 208, 209, 220, 222, 223, 224, 225, 228, 229, 230, 232, 235, 244, 245, 256, 258, 264, 271, 272, 273], "type_t": 119, "typic": [59, 61, 62, 102, 104, 158, 182, 189], "u": [2, 8, 16, 27, 31, 33, 34, 39, 40, 41, 42, 48, 58, 59, 63, 93, 98, 99, 100, 117, 127, 136, 140, 143, 146, 147, 149, 150, 151, 178, 187, 201, 202, 255], "u0": 48, "u2": [133, 134], "u_": [27, 49, 55, 145, 163, 164, 165, 166, 168, 169], "u_0": [141, 164], "u_adjoint": [31, 178], "u_init": [10, 49], "u_k": [27, 49, 55, 145, 164, 166, 168, 169], "uair": 107, "uairgeneratorloss": 2, "ubyt": [41, 42, 46], "uc": 24, "ula": [18, 36, 66, 82, 120, 143, 149, 156, 158, 178, 184, 186, 187, 192, 240, 260, 261, 263, 265], "ula_mean": 31, "ula_var": 31, "ultim": 52, "ulyanov": [7, 118], "un": 114, "unadjust": [31, 35, 62, 241, 242], "unbias": [42, 98, 99, 100], "uncertainti": [18, 32, 36, 65, 66, 82, 120, 143, 149, 156, 158, 178, 184, 186, 187, 192, 240, 242, 260, 261, 263, 265], "under": [8, 11, 24, 46, 47, 61], "underli": [58, 80, 92, 119, 152], "undersampl": [15, 41, 182, 189, 222, 226, 227, 234], "underset": [0, 20, 21, 24, 49, 55, 59, 121, 133, 134, 137, 138, 141, 144, 146, 147, 149, 164, 187, 192], "understood": 7, "undesir": 153, "unet": [2, 16, 37, 39, 40, 41, 42, 119, 131, 135, 245], "unflatten": 135, "unfold": [10, 38, 39, 45, 51, 65, 66, 67, 73, 79, 85, 97, 120, 127, 128, 137, 143, 146, 149, 154, 156, 178, 181, 184, 186, 187, 192, 243, 255, 256, 257, 258, 261, 269], "unfolded_build": [10, 38, 46, 47, 48, 49, 50, 63], "unfolded_dr": 50, "unfolded_pgd": [46, 47], "ungrid": 195, "unif": 113, "unifi": 58, "uniform": [0, 15, 195, 201, 202, 226, 227, 234, 254, 271], "uniformgaussiannois": 95, "uniformli": [54, 200, 235], "uniformnois": 24, "union": [0, 71, 195, 270], "uniqu": [133, 134], "unit": [12, 13, 14, 33, 125, 176, 187, 225], "unknown": [37, 185], "unless": [15, 24, 26, 38, 49], "unlik": [0, 112, 120, 239], "unnormalis": [227, 234], "unorgan": 93, "unpickl": [24, 26, 38, 49], "unrol": [2, 10, 38, 45, 46, 47, 48, 49, 50, 54, 63, 67, 80, 92, 243, 244, 255], "unsqueez": [0, 6, 11, 14, 15, 19, 20, 21, 26, 28, 32, 35, 48, 143, 178, 199], "unsupadversarialdiscriminatorloss": [2, 102], "unsupadversarialgeneratorloss": [2, 104], "unsupervis": [2, 37, 39, 56, 93, 107, 108, 109, 115, 116, 246, 253], "unti": 258, "untouch": 161, "untrust": [24, 26, 38, 49], "unus": 231, "up": [6, 10, 14, 24, 45, 46, 48, 50, 61, 67, 69, 74, 99, 119, 134, 187, 246], "upcom": 37, "upconv": [117, 124], "updat": [24, 27, 28, 33, 34, 48, 49, 52, 59, 67, 134, 141, 145, 151, 163, 164, 165, 166, 167, 174, 175, 178, 182, 183, 184, 186, 188, 189, 192, 193, 194, 199, 202], "update_data_fidelity_fn": [141, 145], "update_metrics_fn": [141, 145], "update_paramet": [61, 67, 80, 92, 93, 95, 96, 174, 175, 178, 182, 183, 184, 186, 188, 189, 193, 194, 199, 202], "update_params_fn": [141, 145], "update_prior_fn": [141, 145], "upload": [7, 31, 32, 35], "upp": [216, 217], "upper": [216, 217], "upsampl": [117, 124, 132], "upsample_mod": [117, 124], "upscal": 132, "urban": [37, 78], "urban100": [2, 37, 78], "urban100_hr": 78, "urban100_inpainting_homography_model": 37, "urban100hr": [2, 37], "url": [4, 7, 10, 13, 15, 23, 24, 27, 29, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 55, 132, 263], "us": [0, 2, 4, 5, 6, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 21, 23, 24, 26, 27, 28, 29, 31, 32, 35, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 70, 71, 77, 80, 89, 92, 93, 94, 95, 111, 112, 121, 122, 125, 130, 131, 132, 134, 145, 147, 171, 182, 209, 211, 212, 214, 215, 216, 217, 220, 221, 231, 241, 244, 270], "usag": [56, 61, 130, 245, 265, 268], "use_bicubic_init": 28, "use_checkpoint": 132, "use_fft": 181, "use_filt": 208, "use_fp16": 119, "use_sigmoid": 129, "user": [24, 26, 31, 38, 49, 59, 63, 67, 79, 95, 117, 119, 120, 124, 131, 132, 162, 180, 190, 243, 257, 258, 270], "userwarn": [0, 9, 15, 33, 37], "usual": [0, 33, 34, 245], "usv": 31, "util": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 53, 55, 67, 74, 121, 144, 171, 172, 173, 176, 185, 187, 190, 192, 199, 200, 236, 238, 243, 244, 245, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273], "uv": 0, "uv_coordin": 0, "v": [14, 27, 31, 41, 63, 141, 143, 145, 151, 178, 187, 191, 192, 255], "v0": [26, 132], "v2": 11, "v_": 167, "v_adjoint": [14, 31, 178], "v_k": 27, "val": [69, 75], "val1": 75, "val_dataset": 75, "val_transform": [5, 6, 20, 21, 26, 28], "valid": [4, 21, 37, 54, 62, 69, 71, 96, 143, 156, 174, 181, 190, 199, 210, 212, 213, 215, 220, 233], "valu": [0, 7, 12, 13, 14, 15, 23, 24, 26, 31, 32, 33, 38, 42, 45, 46, 47, 49, 54, 59, 61, 62, 64, 67, 70, 71, 91, 95, 98, 99, 100, 103, 118, 119, 121, 126, 132, 133, 139, 140, 141, 144, 145, 152, 158, 159, 161, 162, 171, 172, 175, 178, 182, 183, 188, 189, 194, 198, 200, 209, 217, 222, 223, 228, 232, 236, 238, 241, 242, 256, 257, 258, 260, 265, 268], "vanilla": [18, 30, 51, 66, 67, 73, 79, 85, 97, 120, 141, 143, 149, 154, 156, 162, 181, 184, 187, 192, 200, 256, 258, 260, 261, 263, 265, 266, 269], "var": [32, 35, 240], "var_has_converg": 240, "varepsilon": [33, 34, 237, 238], "varepsilon_t": 238, "varga": 241, "vari": [61, 67, 69, 80, 92, 135, 182, 199, 222, 226, 227, 233, 234, 270], "variabl": [5, 6, 10, 20, 21, 26, 27, 28, 29, 35, 42, 48, 49, 59, 99, 100, 113, 127, 128, 133, 134, 140, 141, 143, 146, 147, 148, 149, 150, 151, 153, 154, 156, 157, 159, 160, 161, 164], "varianc": [31, 32, 33, 35, 62, 183, 239, 240, 241, 242], "variant": [137, 138], "variat": [18, 22, 24, 61, 65, 66, 101, 133, 134, 141, 143, 149, 156, 159, 162, 175, 178, 184, 187, 192, 260, 261, 265, 266], "variou": [2, 15, 32, 37, 42, 54, 56, 61, 62, 182, 189], "vector": [31, 58, 67, 83, 98, 99, 100, 113, 114, 118, 133, 137, 141, 178, 182, 187, 191, 192, 217, 227, 234, 242], "verbos": [0, 2, 5, 7, 13, 16, 20, 21, 24, 26, 27, 28, 29, 31, 32, 35, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 53, 59, 67, 79, 82, 83, 118, 133, 134, 141, 145, 171, 187, 236, 237, 238, 239, 240, 241, 242, 243, 245, 261], "verbose_individual_loss": [67, 245], "veri": [0, 2, 13, 24, 34, 245], "verif": 68, "verifi": [68, 69, 72, 75, 77, 78, 172, 182, 187, 189, 240, 242], "verify_split_dataset_integr": [69, 75], "version": [13, 65, 68, 69, 70, 71, 72, 74, 75, 77, 78, 80, 92, 123, 133, 134, 244, 246, 247, 248, 249, 250, 259], "vert": 11, "vertic": [54, 69, 101, 123, 222, 226, 227, 234, 267], "vgg": 2, "vi": [16, 38, 39, 40, 42, 45, 46, 47, 48, 49, 50], "via": [0, 5, 19, 23, 24, 26, 27, 31, 33, 34, 35, 38, 40, 42, 49, 53, 57, 60, 61, 62, 63, 65, 79, 88, 117, 119, 120, 121, 130, 131, 136, 144, 152, 158, 175, 176, 178, 182, 186, 187, 191, 192, 196, 198, 199, 200, 232, 250], "vid": 270, "vid_list": 270, "video": [80, 92, 182, 226, 227, 234, 270], "view": [5, 15, 24, 34, 35, 70, 233, 248, 268, 270], "viridi": [0, 19], "virtual": [63, 81, 255], "visibl": 0, "vision": [0, 26, 142, 220], "visit": 34, "visual": [0, 34, 45, 46, 47, 48, 50, 67], "visualis": 41, "vjp": [187, 191, 192], "vol": [133, 134], "volum": 71, "volume_data": [11, 19], "volume_sample_r": 71, "voxel": 225, "vrv": 31, "vu": [18, 30, 55, 66, 120, 141, 143, 149, 151, 154, 156, 162, 178, 184, 187, 192, 198, 260, 261, 263, 265, 266], "w": [0, 9, 11, 15, 19, 26, 34, 47, 48, 56, 60, 80, 91, 92, 118, 130, 132, 135, 142, 155, 174, 175, 176, 179, 182, 186, 187, 189, 195, 196, 197, 198, 199, 203, 204, 205, 210, 211, 212, 213, 214, 215, 220, 221, 222, 223, 224, 226, 227, 228, 231, 233, 234, 243, 246, 247, 248, 249, 250, 251, 252, 253, 254, 260, 265, 268, 270], "w_k": [199, 220], "wa": [24, 34, 41, 60, 96, 105, 106, 108, 109, 112, 113, 114, 115, 116, 120, 122, 129, 130, 131, 132, 221, 241], "wai": [2, 8, 10, 38, 39, 40, 42, 52, 65, 67], "walk": 14, "wandb": [45, 50, 67], "wandb_setup": [67, 245], "wandb_vi": [16, 38, 39, 40, 42, 45, 46, 47, 48, 49, 50, 67, 245], "wang": [37, 65, 122, 246, 253], "want": [4, 11, 14, 20, 21, 28, 61, 67, 82, 83, 210, 213], "warm": 134, "warn": 156, "wavdict": 19, "wave": [11, 225], "wavelength": [11, 225], "wavelet": [10, 18, 22, 46, 49, 66, 137, 138, 141, 143, 149, 156, 161, 162, 178, 184, 186, 187, 192, 260, 261, 265, 266], "waveletdenois": [10, 19, 49, 138, 161], "waveletdictdenois": 19, "waveletprior": [0, 19, 21, 46, 49], "we": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 61, 62, 63, 64, 68, 69, 70, 72, 74, 75, 77, 78, 82, 93, 96, 118, 119, 137, 145, 146, 147, 151, 178, 182, 187, 188, 189, 191, 199, 203], "weight": [10, 13, 16, 19, 23, 24, 26, 27, 29, 34, 38, 39, 40, 42, 45, 46, 48, 49, 50, 67, 81, 88, 101, 102, 104, 105, 106, 107, 108, 109, 117, 119, 120, 121, 124, 125, 130, 131, 132, 144, 152, 170, 171, 195, 217, 228, 256, 258], "weight_adv": [102, 104, 105, 106, 107, 108, 109], "weight_decai": [2, 16, 37, 38, 39, 40, 41, 42, 45, 47, 49, 50], "weight_mc": 107, "weights_onli": [24, 26, 38, 49], "weiss": [24, 144, 220], "welcom": 52, "welford": 240, "well": [7, 12, 14, 20, 21, 34, 55, 56, 60, 61, 65, 80, 81, 87, 88, 90, 92, 97, 114, 145, 151, 176, 187, 190, 200, 243, 256], "were": [37, 47], "wgan": [2, 56, 103], "what": [71, 125], "when": [2, 4, 5, 11, 15, 27, 28, 31, 34, 35, 40, 41, 47, 52, 55, 57, 60, 67, 71, 88, 90, 93, 96, 118, 119, 134, 136, 143, 145, 152, 156, 171, 187, 194, 221, 232, 238], "where": [0, 2, 5, 7, 9, 11, 13, 15, 16, 19, 20, 21, 23, 24, 26, 27, 31, 33, 34, 35, 38, 39, 40, 42, 46, 47, 48, 49, 53, 55, 59, 61, 62, 63, 67, 68, 69, 70, 72, 74, 75, 77, 78, 79, 80, 81, 82, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 107, 110, 118, 121, 133, 134, 137, 138, 140, 141, 143, 144, 145, 146, 148, 151, 152, 155, 158, 159, 161, 163, 164, 165, 166, 167, 168, 169, 170, 172, 174, 175, 176, 178, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 195, 196, 197, 199, 200, 201, 202, 203, 206, 207, 209, 210, 211, 212, 213, 214, 215, 218, 219, 220, 221, 222, 223, 226, 227, 228, 230, 231, 234, 235, 237, 238, 242, 243, 246, 255, 256, 260, 265, 268, 269], "wherea": [31, 33, 34, 55, 67, 93, 96, 176, 198, 206], "whether": [71, 82, 83, 103, 113, 125, 127, 128, 129, 132, 133, 134, 141, 153, 162, 171, 217, 239, 255, 256, 257, 258, 262, 263, 269], "which": [5, 6, 8, 10, 11, 12, 13, 15, 19, 20, 21, 23, 24, 26, 28, 31, 32, 33, 34, 35, 38, 40, 42, 45, 46, 47, 49, 50, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 67, 79, 80, 82, 87, 88, 90, 92, 95, 96, 97, 98, 99, 100, 103, 113, 117, 120, 130, 135, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 175, 176, 181, 186, 187, 192, 195, 198, 200, 208, 209, 210, 212, 214, 215, 217, 236, 237, 240, 243, 244, 245, 250, 251, 252, 253, 254, 256, 258, 262, 263, 267], "while": [2, 7, 11, 13, 14, 38, 55, 59, 86, 111, 114, 116, 125, 126, 127, 128, 131, 141, 171, 208, 209], "whilst": 245, "white": [23, 33, 34, 61, 174, 175, 181, 187], "whiten": 0, "whole": [23, 24, 39, 40, 41, 42, 80, 92, 136, 144, 240], "whose": [59, 85, 185, 200, 267, 269], "why": [33, 34], "wide": 70, "widefield_bpae_b": 70, "widefield_bpae_g": 70, "widefield_bpae_r": 70, "widehat": [19, 33, 34, 237, 238], "wider": 67, "width": [19, 71, 76, 119, 127, 128, 144, 182, 189, 200, 225, 249, 265, 268], "wiki": [4, 11, 94, 172, 179, 183, 224], "wikimedia": [7, 31, 32, 35], "wikipedia": [4, 7, 11, 15, 31, 32, 35, 94, 172, 179, 183, 224], "window": [126, 132, 207], "window_s": 132, "wise": [2, 86, 185], "withbia": 130, "within": [54, 57, 61, 69, 71, 86, 111, 114, 116, 125, 126, 127, 128, 131, 208, 209], "without": [37, 52, 61, 67, 71, 80, 92, 96, 176, 186, 190, 192, 200, 221, 223, 228, 231], "work": [0, 7, 9, 11, 15, 16, 24, 28, 32, 33, 34, 38, 49, 118, 130], "worker": 79, "workflow": 52, "world": [7, 31, 32, 35, 37, 75], "wors": 41, "would": [0, 67], "wrap": [38, 45, 46, 47, 50, 54, 68, 80, 92, 112], "wrapper": [26, 60, 64, 77, 78, 80, 92, 135], "write": [19, 20, 21, 28, 33, 34, 48, 57, 59, 67, 161, 237, 238], "writer": 270, "written": [56, 59, 141], "wv": [0, 10, 19, 21, 46, 49, 137, 138, 161], "wv_list": 0, "wvdim": [19, 137, 138, 161], "ww": 210, "www": 74, "wx": 46, "x": [0, 2, 5, 6, 7, 9, 11, 12, 13, 14, 15, 19, 20, 21, 24, 27, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 46, 47, 48, 49, 55, 56, 58, 59, 61, 62, 63, 67, 70, 76, 79, 80, 81, 82, 83, 84, 85, 86, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 111, 112, 114, 117, 119, 120, 121, 123, 125, 126, 128, 130, 131, 132, 133, 134, 136, 137, 138, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 224, 225, 230, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 264, 270, 271, 272, 273], "x0": [33, 34, 48, 187], "x0_pred": 34, "x0_t": 34, "x2": [15, 75, 133, 134], "x3": 75, "x4": 75, "x64": [26, 37, 245], "x_": [19, 27, 31, 35, 46, 47, 49, 55, 59, 63, 141, 145, 151, 163, 164, 165, 166, 167, 168, 169, 170, 187, 238, 242, 256], "x_0": [141, 164], "x_adj": 61, "x_bar": 31, "x_cur": 19, "x_dagger": [61, 187], "x_est": 13, "x_gd_rand": 13, "x_gd_spec": 13, "x_grai": 4, "x_gt": [0, 13, 20, 21, 27, 29, 141, 145, 255], "x_hat": [19, 37, 55, 63, 258], "x_hist": 145, "x_i": 88, "x_in": 82, "x_init": [0, 10, 49, 141, 144, 145, 192, 237, 238, 240], "x_k": [27, 35, 46, 47, 49, 55, 59, 63, 141, 145, 151, 163, 164, 166, 167, 168, 169, 170, 242, 256], "x_lin": [7, 20, 21, 27, 29, 31, 32, 35], "x_model": [0, 20, 21, 27, 29], "x_n": 19, "x_net": [56, 67, 80, 81, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 135, 245], "x_noisi": 33, "x_out": 23, "x_phase": 13, "x_phase_gd_rand": 13, "x_phase_gd_spec": 13, "x_phase_pnp": 13, "x_phase_spec": 13, "x_pnp": 13, "x_prev": [19, 27, 141, 145], "x_prox": [33, 61], "x_prox_scal": 33, "x_rgb": 4, "x_sampl": 33, "x_sampled_sc": 33, "x_spec": 13, "x_stretch_factor_min": [246, 251, 252, 253, 254], "x_t": [34, 238, 246, 251, 252, 253, 254], "x_true": [33, 34], "x_tv": 20, "x_wv": 21, "xhat": [9, 19, 32, 33, 34, 141, 236, 238], "xlabel": 33, "xlin": [12, 14], "xlin2": 14, "xml": 74, "xprox": 14, "xprox2": 14, "xset": [55, 58, 59, 61, 141, 143, 187, 192], "xt": 34, "xt_next": 34, "xxx": [53, 68, 69, 72, 74, 75, 77, 78], "xxxxxxxxxxx": 71, "xy": 225, "y": [0, 2, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 23, 24, 27, 29, 31, 32, 33, 34, 35, 37, 39, 40, 42, 46, 47, 48, 49, 55, 56, 58, 59, 61, 62, 63, 67, 79, 80, 81, 83, 85, 86, 87, 88, 90, 92, 93, 95, 96, 97, 98, 99, 100, 102, 104, 107, 108, 109, 110, 113, 118, 119, 121, 127, 133, 134, 135, 137, 138, 140, 141, 143, 144, 145, 146, 147, 149, 150, 151, 155, 163, 164, 165, 166, 167, 170, 174, 175, 176, 178, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 199, 200, 201, 202, 203, 204, 205, 206, 212, 213, 214, 215, 220, 225, 230, 236, 237, 238, 240, 242, 243, 244, 245, 246, 255, 256, 258, 270], "y1": 61, "y2": [14, 61, 80, 92], "y_": [9, 197], "y_1": [12, 41, 96], "y_2": [12, 41, 96], "y_bar": 31, "y_denois": 33, "y_hat": [107, 108, 109, 245], "y_i": [39, 88, 140], "y_in": 82, "y_scale": 33, "y_stretch_factor_min": [246, 251, 252, 253, 254], "y_t": 182, "yaman": 96, "yann": [41, 42, 46], "yet": 7, "yield": [8, 46, 47, 161], "ylabel": 33, "yosida": [62, 158], "you": [0, 2, 4, 6, 11, 14, 18, 19, 24, 26, 32, 33, 34, 35, 38, 39, 40, 41, 42, 45, 49, 50, 52, 61, 65, 67, 74, 210, 213], "your": [2, 14, 17, 18, 27, 36, 52, 64, 65, 66, 67, 73, 79, 80, 92, 102, 104, 126, 142, 143, 149, 156, 158, 175, 178, 180, 184, 187, 192, 240, 242, 260, 261, 263, 265], "yscale": 13, "yset": [55, 58, 59, 61, 141, 143, 187, 192], "yyi": 53, "yyyi": 67, "z": [0, 2, 7, 11, 27, 48, 55, 59, 61, 62, 93, 98, 99, 100, 113, 118, 145, 147, 150, 151, 155, 158, 163, 165, 166, 178, 181, 184, 187, 192, 193, 195, 201, 225, 242, 246], "z0": 225, "z10": [224, 225], "z11": [224, 225], "z4": [224, 225], "z5": [4, 11, 224, 225], "z6": [4, 11, 224, 225], "z7": [224, 225], "z8": [224, 225], "z9": [224, 225], "z_": [19, 27, 31, 49, 59, 63, 141, 151, 163, 164, 165, 166, 242, 256], "z_0": 164, "z_i": 93, "z_k": [27, 35, 49, 59, 63, 141, 151, 163, 164, 165, 166, 256], "z_p": 19, "z_prev": 27, "zebrafish": 70, "zenodo": [200, 209], "zernik": [4, 11, 224, 225], "zernike_polynomi": [4, 11, 224], "zero": [0, 4, 9, 11, 12, 14, 15, 24, 31, 33, 34, 47, 61, 64, 67, 80, 92, 96, 137, 140, 171, 174, 175, 181, 186, 187, 195, 199, 210, 221, 223, 227, 228, 247, 273], "zero_grad": [24, 67], "zeros_lik": [15, 19, 47, 48, 59, 187], "zeta": [33, 238], "zhang": [5, 26, 120, 142], "zhou": 33, "zip": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 69, 72, 77], "zoom": [246, 267], "zoom_factor_min": [246, 251, 252, 253, 254], "zoran": [24, 144], "zuo": [26, 142], "zygalaki": 241, "\u00f6ktem": 48}, "titles": ["Radio interferometric imaging with deepinverse", "Computation times", "Imaging inverse problems with adversarial networks", "Computation times", "A tour of blur operators", "Image deblurring with custom deep explicit prior.", "Creating your own dataset", "Reconstructing an image using the deep image prior.", "Using huggingface dataset", "Single photon lidar operator for depth ranging.", "Saving and loading models", "3D diffraction PSF", "Stacking and concatenating forward operators.", "Random phase retrieval and reconstruction methods.", "Creating a forward operator.", "A tour of forward sensing operators", "Training a reconstruction network.", "Computation times", "Examples", "3D wavelet denoising", "Image deblurring with Total-Variation (TV) prior", "Image inpainting with wavelet prior", "Computation times", "Expected Patch Log Likelihood (EPLL) for Denoising and Inpainting", "Patch priors for limited-angle computed tomography", "Computation times", "DPIR method for PnP image deblurring.", "PnP with custom optimization algorithm (Condat-Vu Primal-Dual)", "Regularization by Denoising (RED) for Super-Resolution.", "Vanilla PnP for computed tomography (CT).", "Computation times", "Building your custom sampling algorithm.", "Image reconstruction with a diffusion model", "Implementing DiffPIR", "Implementing DPS", "Uncertainty quantification with PnP-ULA.", "Computation times", "Image transformations for Equivariant Imaging", "Self-supervised learning with Equivariant Imaging for MRI.", "Self-supervised learning from incomplete measurements of multiple operators.", "Self-supervised denoising with the Neighbor2Neighbor loss.", "Self-supervised learning with measurement splitting", "Self-supervised denoising with the SURE loss.", "Computation times", "Computation times", "Deep Equilibrium (DEQ) algorithms for image deblurring", "Learned Iterative Soft-Thresholding Algorithm (LISTA) for compressed sensing", "Learned iterative custom prior", "Learned Primal-Dual algorithm for CT scan.", "Unfolded Chambolle-Pock for constrained image inpainting", "Vanilla Unfolded algorithm for super-resolution", "Computation times", "How to Contribute", "Datasets", "Denoisers", "Iterative Reconstruction (PnP, RED, etc.)", "Loss", "Using multiple GPUs", "Math Notation", "Optim", "Other Reconstruction Methods", "Physics", "Diffusion Algorithms", "Unfolded Algorithms", "Utils", "DeepInverse: a Pytorch library for imaging with deep learning", "Computation times", "Trainer", "CBSD68", "DIV2K", "FMD", "FastMRISliceDataset", "Flickr2kHR", "HDF5Dataset", "LidcIdriSliceDataset", "LsdirHR", "PatchDataset", "Set14HR", "Urban100HR", "generate_dataset", "Artifact2ArtifactLoss", "EILoss", "FNEJacobianSpectralNorm", "JacobianSpectralNorm", "LPIPS", "Loss", "LpNorm", "MCLoss", "MOILoss", "NIQE", "Neighbor2Neighbor", "PSNR", "Phase2PhaseLoss", "R2RLoss", "SSIM", "ScoreLoss", "SplittingLoss", "SupLoss", "SureGaussianLoss", "SurePGLoss", "SurePoissonLoss", "TVLoss", "DiscriminatorLoss", "DiscriminatorMetric", "GeneratorLoss", "SupAdversarialDiscriminatorLoss", "SupAdversarialGeneratorLoss", "UAIRGeneratorLoss", "UnsupAdversarialDiscriminatorLoss", "UnsupAdversarialGeneratorLoss", "ArtifactRemoval", "AutoEncoder", "BM3D", "CSGMGenerator", "ConvDecoder", "DCGANDiscriminator", "DCGANGenerator", "DRUNet", "DeepImagePrior", "DiffUNet", "DnCNN", "EPLLDenoiser", "ESRGANDiscriminator", "EquivariantDenoiser", "GSDRUNet", "ICNN", "MedianFilter", "PDNet_DualBlock", "PDNet_PrimalBlock", "PatchGANDiscriminator", "Restormer", "SCUNet", "SwinIR", "TGVDenoiser", "TVDenoiser", "TimeAgnosticNet", "UNet", "WaveletDenoiser", "WaveletDictDenoiser", "to_complex_denoiser", "AmplitudeLoss", "BaseOptim", "DPIR", "DataFidelity", "EPLL", "FixedPoint", "IndicatorL2", "L1", "L1Prior", "L2", "LogPoissonLikelihood", "OptimIterator", "PatchNR", "PatchPrior", "PnP", "PoissonLikelihood", "Prior", "RED", "ScorePrior", "TVPrior", "Tikhonov", "WaveletPrior", "optim_builder", "ADMMIteration", "CPIteration", "DRSIteration", "FISTAIteration", "GDIteration", "HQSIteration", "PGDIteration", "SMIteration", "GaussianMixtureModel", "conjugate_gradient", "gradient_descent", "Blur", "BlurFFT", "CompressedSensing", "Decolorize", "DecomposablePhysics", "Demosaicing", "Denoising", "Downsampling", "DynamicMRI", "GammaNoise", "GaussianNoise", "Haze", "Inpainting", "LinearPhysics", "LogPoissonNoise", "MRI", "Pansharpen", "PhaseRetrieval", "Physics", "PoissonGaussianNoise", "PoissonNoise", "RadioInterferometry", "RandomPhaseRetrieval", "SinglePhotonLidar", "SinglePixelCamera", "SpaceVaryingBlur", "Tomography", "UniformGaussianNoise", "UniformNoise", "adjoint_function", "bicubic_filter", "bilinear_filter", "gaussian_blur", "sinc_filter", "IRadon", "Radon", "conv2d", "conv2d_fft", "conv3d_fft", "conv_transpose2d", "conv_transpose2d_fft", "conv_transpose3d_fft", "histogram", "histogramdd", "multiplier", "multiplier_adjoint", "product_convolution2d", "Artifact2ArtifactSplittingMaskGenerator", "BaseMaskGenerator", "BernoulliSplittingMaskGenerator", "DiffractionBlurGenerator", "DiffractionBlurGenerator3D", "EquispacedMaskGenerator", "GaussianMaskGenerator", "GaussianSplittingMaskGenerator", "GeneratorMixture", "MotionBlurGenerator", "Phase2PhaseSplittingMaskGenerator", "PhysicsGenerator", "ProductConvolutionBlurGenerator", "RandomMaskGenerator", "SigmaGenerator", "DDRM", "DPS", "DiffPIR", "DiffusionSampler", "MonteCarlo", "SKRock", "ULA", "test", "train", "AdversarialTrainer", "Homography", "Rotate", "Scale", "Shift", "Transform", "Affine", "Euclidean", "PanTiltRotate", "Similarity", "BaseDEQ", "BaseUnfold", "DEQ_builder", "unfolded_builder", "TensorList", "cal_psnr", "get_freer_gpu", "load_image", "load_url_image", "ones_like", "plot", "plot_curves", "plot_inset", "plot_ortho3D", "plot_parameters", "plot_videos", "rand_like", "randn_like", "zeros_like"], "titleterms": {"3d": [11, 19], "A": [4, 15], "The": [0, 33, 34], "adjoint_funct": 203, "admmiter": 163, "advanc": 18, "adversari": [2, 18, 54, 56], "adversarialtrain": 245, "affin": 251, "algorithm": [5, 7, 19, 20, 21, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 45, 46, 47, 48, 50, 55, 62, 63], "all": 33, "ambientgan": 2, "amplitudeloss": 140, "an": [7, 21, 33, 55], "angl": 24, "appli": [8, 9], "approxim": 34, "artifact2artifactloss": 80, "artifact2artifactsplittingmaskgener": 221, "artifactremov": 110, "autoencod": 111, "back": 60, "base": [5, 6, 16, 19, 20, 21, 26, 27, 28, 38, 39, 40, 42, 45, 46, 47, 49, 50], "basedeq": 255, "basemaskgener": 222, "baseoptim": 141, "baseunfold": 256, "basic": [4, 18], "benefit": 14, "bernoullisplittingmaskgener": 223, "bicubic_filt": 204, "bilinear_filt": 205, "blur": [4, 5, 15, 20, 26, 61, 174], "blurfft": 175, "bm3d": 112, "brigg": 0, "buffer": 8, "build": 31, "cal_psnr": 260, "camera": 15, "carlo": [32, 62], "cbsd68": 68, "chain": 62, "chambol": 49, "class": [28, 31], "classic": 54, "comparison": 13, "complex": 54, "compress": [15, 46, 47, 61], "compressedsens": 176, "comput": [1, 3, 15, 17, 22, 24, 25, 29, 30, 36, 43, 44, 51, 66], "concaten": 12, "condat": 27, "condit": 2, "confoc": 11, "conjugate_gradi": 172, "constrain": 49, "construct": 13, "contribut": 52, "conv2d": 210, "conv2d_fft": 211, "conv3d_fft": 212, "conv_transpose2d": 213, "conv_transpose2d_fft": 214, "conv_transpose3d_fft": 215, "convdecod": 114, "convolut": [4, 11], "correct": 13, "cpiter": 164, "creat": [6, 8, 9, 14, 19, 31, 32, 35], "csgm": 2, "csgmgener": 113, "ct": [29, 48], "custom": [5, 14, 27, 28, 31, 47, 48], "data": [5, 6, 8, 10, 16, 19, 20, 21, 26, 27, 28, 29, 33, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 59, 60], "datafidel": 143, "dataload": [6, 8], "dataset": [2, 5, 6, 8, 16, 20, 21, 26, 27, 28, 38, 39, 40, 42, 45, 46, 47, 48, 49, 50, 53], "dcgandiscrimin": 115, "dcgangener": 116, "ddrm": 236, "deblur": [5, 20, 26, 45], "decolor": [15, 177], "decompos": 14, "decomposablephys": 178, "deep": [5, 7, 45, 54, 55, 63, 65], "deepimageprior": 118, "deepinvers": [0, 65], "defin": [2, 5, 7, 10, 16, 27, 31, 32, 34, 35, 41, 45, 46, 47, 48, 49, 50, 61], "definit": [24, 28], "degrad": [5, 6, 16, 20, 21, 26, 27, 28, 38, 39, 45, 46, 47, 48, 49, 50], "dehaz": 61, "demosa": [15, 179], "denois": [13, 15, 19, 23, 28, 32, 33, 34, 40, 42, 54, 180], "depend": 61, "depth": 9, "deq": 45, "deq_build": 257, "descent": 13, "develop": 65, "diffpir": [33, 238], "diffract": [4, 11], "diffractionblurgener": 224, "diffractionblurgenerator3d": 225, "diffunet": 119, "diffus": [32, 34, 62], "diffusionsampl": 239, "dip": 7, "discriminatorloss": 102, "discriminatormetr": 103, "distribut": 61, "div2k": 69, "dncnn": 120, "downsampl": 181, "dp": [34, 237], "dpir": [26, 142], "drsiter": 165, "drunet": 117, "dual": [27, 48], "dykstra": 19, "dynamicmri": 182, "eiloss": 81, "em": 24, "epll": [23, 24, 144], "eplldenois": 121, "equilibrium": [45, 63], "equispacedmaskgener": 226, "equivari": [37, 38, 54], "equivariantdenois": 123, "esrgandiscrimin": 122, "etc": 55, "euclidean": 252, "evalu": [5, 20, 21, 26, 27, 28, 29], "exampl": [18, 32, 67, 73, 76, 78, 79, 81, 82, 84, 85, 87, 88, 90, 91, 96, 97, 98, 99, 100, 102, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 124, 126, 127, 128, 129, 136, 137, 138, 141, 142, 143, 144, 146, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 169, 174, 175, 176, 177, 178, 179, 180, 181, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 206, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 236, 237, 238, 239, 240, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 265, 266, 267, 268, 269], "expect": 23, "explicit": 5, "explor": [20, 21], "extens": 19, "fastmrislicedataset": 71, "featur": 65, "fidel": [33, 48, 59], "filter": [9, 60], "find": 65, "fistaiter": 166, "fixedpoint": 145, "flickr2khr": 72, "fmd": 70, "fnejacobianspectralnorm": 82, "forward": [7, 9, 10, 12, 14, 15, 16, 24, 27, 29, 31, 32, 35, 49, 61], "from": [7, 8, 13, 15, 31, 32, 35, 39], "fstep": 27, "function": 61, "gammanois": 183, "gan": 2, "gaussian_blur": 206, "gaussianmaskgener": 227, "gaussianmixturemodel": 171, "gaussiannois": 184, "gaussiansplittingmaskgener": 228, "gditer": 167, "gener": [2, 4, 5, 6, 7, 9, 11, 12, 13, 14, 16, 20, 21, 26, 31, 32, 33, 35, 38, 39, 40, 42, 45, 46, 47, 49, 50, 59, 61], "generate_dataset": 79, "generatorloss": 104, "generatormixtur": 229, "get": 65, "get_freer_gpu": 261, "gpu": 57, "gradient": [13, 46, 47], "gradient_desc": 173, "groundtruth": 0, "gsdrunet": 124, "gstep": 27, "haze": 185, "hd5dataset": 53, "hdf5dataset": 73, "help": 65, "histogram": 216, "histogramdd": 217, "homographi": 246, "how": 52, "hqsiter": 168, "huggingfac": 8, "icnn": 125, "imag": [0, 2, 5, 6, 7, 12, 13, 14, 15, 16, 19, 20, 21, 23, 24, 26, 27, 28, 29, 31, 32, 35, 37, 38, 39, 40, 42, 45, 46, 47, 49, 50, 53, 55, 61, 65], "implement": [33, 34, 55], "import": 0, "incomplet": 39, "indicatorl2": 146, "initi": 13, "inpaint": [15, 21, 23, 49, 186], "instal": 65, "interferometr": [0, 61], "internet": [7, 8, 13, 15, 31, 32, 35], "introduct": [56, 61], "invers": [2, 5, 20, 21, 26, 27, 29, 33, 34], "involv": 28, "iradon": 208, "iter": [19, 31, 46, 47, 48, 55, 59], "jacobianspectralnorm": 83, "knee": 38, "l1": 147, "l1prior": 148, "l2": 149, "langevin": 62, "lead": 65, "learn": [18, 38, 39, 41, 46, 47, 48, 56, 60, 65], "librari": [8, 65], "lidar": [9, 61], "lidcidrislicedataset": 74, "like": 19, "likelihood": [23, 35], "limit": 24, "linear": [14, 61], "linearphys": 187, "list": 58, "lista": 46, "load": [5, 6, 7, 8, 10, 13, 15, 16, 19, 20, 21, 23, 24, 26, 27, 28, 29, 31, 32, 34, 35, 38, 39, 40, 42, 45, 46, 47, 48, 49, 50], "load_imag": 262, "load_url_imag": 263, "log": 23, "logpoissonlikelihood": 150, "logpoissonnois": 188, "loop": 24, "loss": [40, 41, 42, 56, 85], "low": [45, 50], "lpip": 84, "lpnorm": 86, "lsdirhr": 75, "magnet": 61, "markov": 62, "match": 9, "math": 58, "mathemat": 58, "mcloss": 87, "mcmc": 35, "measur": [0, 7, 9, 13, 31, 32, 35, 39, 41, 46, 47], "medianfilt": 126, "method": [13, 26, 60], "metric": 56, "microscop": 11, "mixtur": 4, "mmse": 32, "model": [2, 7, 9, 10, 16, 20, 21, 23, 24, 26, 27, 28, 29, 31, 32, 34, 35, 41, 48, 49], "modul": 27, "moiloss": 88, "mont": [32, 62], "montecarlo": 240, "motion": 4, "motionblurgener": 230, "mri": [15, 38, 189], "multipl": [19, 39, 57], "multipli": 218, "multiplier_adjoint": 219, "natur": 0, "neighbor2neighbor": [40, 90], "network": [2, 16, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 54, 56, 60], "new": 61, "niqe": 89, "nois": [7, 24, 31, 32, 35, 61], "noisi": [40, 42], "notat": 58, "ones_lik": 264, "oper": [0, 4, 5, 7, 9, 10, 12, 14, 15, 16, 19, 20, 21, 24, 26, 27, 28, 29, 31, 32, 35, 38, 39, 45, 46, 47, 48, 49, 50, 61], "optim": [5, 18, 20, 21, 27, 59], "optim_build": 162, "optimiter": 151, "other": [60, 64], "our": 14, "overal": 13, "own": 6, "packag": 0, "pan": 15, "pansharpen": 190, "pantiltrot": 253, "paramet": [24, 29, 38, 39, 40, 42, 45, 46, 47, 48, 50, 59, 61], "particular": 28, "patch": [18, 23, 24], "patchdataset": [53, 76], "patchgandiscrimin": 129, "patchnr": [24, 152], "patchprior": 153, "path": [5, 6, 10, 16, 19, 20, 21, 26, 27, 28, 29, 38, 39, 40, 42, 45, 46, 47, 48, 49, 50], "pattern": 0, "pdnet": 48, "pdnet_dualblock": 127, "pdnet_primalblock": 128, "pgditer": 169, "phantom": 48, "phase": [13, 61], "phase2phaseloss": 92, "phase2phasesplittingmaskgener": 231, "phaseretriev": 191, "photon": [9, 61], "physic": [5, 61, 192], "physicsgener": 232, "pixel": 15, "pixelwis": 61, "plai": 18, "plot": [7, 9, 20, 21, 24, 27, 29, 31, 32, 35, 46, 47, 50, 64, 265], "plot_curv": 266, "plot_inset": 267, "plot_ortho3d": 268, "plot_paramet": 269, "plot_video": 270, "plug": 18, "pnp": [13, 26, 27, 28, 29, 35, 50, 55, 154], "pock": 49, "poissongaussiannois": 193, "poissonlikelihood": 155, "poissonnois": 194, "precondit": 31, "predefin": 55, "prepar": 41, "pretrain": 54, "primal": [27, 48], "prior": [0, 5, 7, 18, 20, 21, 24, 28, 31, 35, 47, 48, 55, 59, 156], "problem": [0, 2, 5, 19, 20, 21, 26, 27, 28, 29, 33, 34], "product_convolution2d": 220, "productconvolutionblurgener": 233, "project": 60, "proxim": [46, 47], "psf": 11, "psnr": 91, "put": 33, "pytorch": 65, "quantif": 35, "r2rloss": 93, "radio": [0, 61], "radiointerferometri": 195, "radon": 209, "rand_lik": 271, "randn_lik": 272, "random": [13, 48], "randommaskgener": 234, "randomphaseretriev": 196, "rang": 9, "reconstruct": [5, 7, 13, 16, 24, 32, 38, 39, 49, 55, 60], "recov": 9, "red": [28, 55, 157], "regular": [28, 56], "remot": 61, "requir": 0, "resolut": [15, 28, 45, 50, 61], "reson": 61, "restorm": 130, "result": [5, 6, 7, 9, 10, 16, 19, 20, 21, 26, 27, 28, 29, 31, 32, 35, 38, 39, 40, 42, 45, 46, 47, 48, 49, 50], "retriev": [13, 61], "ri": 0, "rotat": 247, "run": [7, 24, 31, 32, 35], "sampl": [0, 18, 31, 32, 33, 35], "sampler": [31, 32, 35], "save": [10, 49], "scale": 248, "scan": 48, "schedul": 34, "scoreloss": 95, "scoreprior": 158, "scunet": 131, "self": [18, 38, 39, 40, 41, 42, 56], "sens": [15, 46, 61], "set": [5, 16, 20, 21, 24, 26, 27, 29, 38, 39, 40, 42, 49], "set14hr": 77, "setup": [5, 6, 10, 13, 16, 19, 20, 21, 26, 27, 28, 29, 38, 39, 40, 42, 45, 46, 47, 48, 49, 50], "sharpen": 15, "shift": 249, "shuffl": 8, "sigmagener": 235, "signal": [9, 13], "similar": 254, "simul": 0, "sinc_filt": 207, "singl": [9, 15, 61], "singlephotonlidar": 197, "singlepixelcamera": 198, "skrock": 241, "smiter": 170, "soft": 46, "solv": [0, 5, 19, 20, 21, 26, 27, 29], "space": 4, "spacevaryingblur": 199, "spectral": 13, "split": 41, "splittingloss": 96, "ssim": 94, "stack": 12, "standard": 31, "start": 65, "step": [33, 34], "stream": 8, "subsampl": 39, "summari": 54, "supadversarialdiscriminatorloss": 105, "supadversarialgeneratorloss": 106, "super": [15, 28, 50, 61], "supervis": [18, 38, 39, 40, 41, 42, 56], "suploss": 97, "sure": 42, "suregaussianloss": 98, "surepgloss": 99, "surepoissonloss": 100, "swinir": 132, "symbol": 58, "tensorlist": [64, 259], "term": 48, "test": [16, 23, 24, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 64, 243], "tgvdenois": 133, "thi": 28, "threshold": 46, "tikhonov": 160, "time": [1, 3, 17, 22, 25, 30, 36, 43, 44, 51, 60, 66], "timeagnosticnet": 135, "to_complex_denois": 139, "togeth": 33, "toi": [9, 12, 14], "tomographi": [15, 24, 29, 61, 200], "total": 20, "tour": [4, 15], "train": [2, 16, 24, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 64, 244], "trainabl": 48, "trainer": 67, "transform": [8, 37, 56, 250], "tv": 20, "tvdenois": 134, "tvloss": 101, "tvprior": 159, "uair": 2, "uairgeneratorloss": 107, "ula": [31, 35, 242], "uncertainti": 35, "unet": 136, "unfold": [18, 46, 47, 48, 49, 50, 63], "unfolded_build": 258, "uniformgaussiannois": 201, "uniformnois": 202, "unsupadversarialdiscriminatorloss": 108, "unsupadversarialgeneratorloss": 109, "up": [5, 16, 20, 21, 26, 27, 29, 38, 39, 40, 42, 49], "urban100hr": 78, "us": [7, 8, 14, 19, 33, 34, 57, 67, 73, 76, 78, 79, 81, 82, 84, 85, 87, 88, 90, 91, 96, 97, 98, 99, 100, 102, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 124, 126, 127, 128, 129, 136, 137, 138, 141, 142, 143, 144, 146, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 169, 174, 175, 176, 177, 178, 179, 180, 181, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 206, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 236, 237, 238, 239, 240, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 265, 266, 267, 268, 269], "util": [56, 59, 63, 64], "vanilla": [29, 50], "vari": [4, 60], "variat": 20, "verifi": [12, 14], "visual": 13, "volum": 19, "vu": 27, "wavelet": [0, 19, 21], "waveletdenois": 137, "waveletdictdenois": 138, "waveletprior": 161, "weight": [0, 47, 54], "widefield": 11, "your": [6, 31, 33, 34], "zeros_lik": 273}})